  UNIVERSIDAD NACIONAL DEL ALTIPLANO
 FACULTAD DE INGENIER√çA MEC√ÅNICA EL√âCTRICA, ELECTR√ìNICA Y SISTEMAS



 ESCUELA PROFESIONAL DE INGENIER√çA ELECTR√ìNICA




 ‚ÄúDESARROLLO E IMPLEMENTACI√ìN DE UN M√ìDULO DE

ENTRENAMIENTO DE BRAZO ROB√ìTICO DE CINCO GRADOS

DE LIBERTAD MONITORIZADO MEDIANTE REDES ZIGBEE‚Äù


                             TESIS

                      PRESENTADO POR:

                VICTOR RAUL QUISPE RONCALLA

                RICARDO GERMAN ESCOBEDO GIL

 PARA OPTAR POR EL T√çTULO PROFESIONAL DE:
                  INGENIERO ELECTR√ìNICO


                     PUNO        -     PER√ö

                               2014
√ÅREA: Automatizaci√≥n e instrumentaci√≥n

TEMA: Rob√≥tica
                      AGRADECIMIENTOS

 Agradecemos en primer lugar a Dios quien nos dio la vida y la ha
 llenado de bendiciones en todo momento, a √âl que con su infinito
   amor nos ha dado la sabidur√≠a suficiente para culminar nuestra
                       carrera universitaria.

      Queremos expresar nuestro m√°s sincero agradecimiento,
reconocimiento y cari√±o a nuestros padres por todo el esfuerzo que
hicieron para dar osuna profesi√≥n y hacer de nosotros, personas de
   bien, gracias por los sacrificios y la paciencia que demostraron
    todos estos a√±os; gracias a ustedes hemos llegado a donde
                                estamos.

   Gracias a nuestros hermanos y hermanas quienes han sido
nuestros amigos fieles y sinceros, en los que hemos podido confiar
               y apoyarnos para seguir adelante.

  Gracias a todas aquellas personas que de una u otra forma nos
     ayudaron a crecer como personas y como profesionales.

  Agradecemos tambi√©n de manera especial a nuestro director de
tesis qui√©n con sus conocimientos y apoyo supo guiar el desarrollo
      de la presente tesis desde el inicio hasta su culminaci√≥n.

De igual manera agradecer a todos esos docentes que fungieron de
 gu√≠as y amigos, durante este tiempo dentro de la universidad, a
   aquellos amigos y compa√±eros de sal√≥n, de desveladas y de
                     travesuras en la EPIE.

 ‚ÄúAhora podemos decir que todo lo que somos es gracias a todos
                           ustedes‚Äù
Dedicado a nuestras familias, amigos y sobre todo a Dios.
                              INDICE
RESUMEN ___________________________________________________ 11
ABSTRACT __________________________________________________ 12
INTRODUCCI√ìN ______________________________________________ 13
  CAP√çTULO I: PLANTEAMIENTO DEL PROBLEMA, ANTECEDENTES Y
OBJETIVOS DE LA INVESTIGACION ______________________________ 15
 1.1.   PLANTEAMIENTO DEL PROBLEMA. _______________________ 16
 1.2.   ANTECEDENTES DE LA INVESTIGACION. __________________ 17
 1.3. OBJETIVOS DE LA INVESTIGACION. ______________________ 22
   Objetivo general: __________________________________________ 22
   Objetivos espec√≠ficos: ______________________________________ 22
 CAP√çTULO II: MARCO TEORICO, MARCO CONCEPTUAL E HIPOTESIS DE
LA INVESTIGACION ___________________________________________ 24
 2.1.   MARCO TEORICO ______________________________________ 25
 2.2. MARCO CONCEPTUAL __________________________________            27
   2.2.1. Rob√≥tica __________________________________________        27
     a) Estructura del robot manipulador _______________________     28
     b) Partes de los robots___________________________________      29
     c) Morfolog√≠a de los robots _______________________________     30
     d) Tipos de articulaciones ________________________________     30
     e) Estructuras b√°sicas __________________________________       31
     f) Localizaci√≥n espacial _________________________________      33
          Representaciones de la posici√≥n ______________________     34
          Sistema cartesiano de referencia. ______________________   35
          Coordenadas cartesianas. ____________________________      36
          Coordenadas polares y cil√≠ndricas. ____________________    36
          Coordenadas esf√©ricas. ______________________________      37
     g) Representaci√≥n de la orientaci√≥n ________________________    38
          Matrices de rotaci√≥n _________________________________     40
     h) La cinem√°tica ________________________________________       42
          Matrices de transformaci√≥n homog√©neas _______________      43
          Composici√≥n de matrices de transformaci√≥n homog√©neas _     45
         o Submatriz de rotaci√≥n ______________________________      45
         o Submatriz de traslaci√≥n ____________________________      47
          Representaci√≥n de las Matrices de Rotaci√≥n y Traslaci√≥n
       seg√∫n el Modelo de Matriz de Transformaci√≥n Homog√©nea ____    48
          Localizaci√≥n espacial ________________________________     49
          Desarrollo de la cinem√°tica directa_____________________   49
   i) Modelo cinem√°tico directo de robots manipuladores _________    50
          Modelo cinem√°tico directo del manipulador _____________    50
           Modelo de un robot manipulador con n articulaciones ____   51
           Resoluci√≥n del problema cinem√°tico directo mediante
       matrices de transformaci√≥n homog√©nea. ___________________      52
           Algoritmo de Denavit-Hartemberg para la obtenci√≥n del
       modelo cinem√°tico directo _______________________________      54
   2.2.2. Redes inal√°mbricas _________________________________        58
     a) Espectro electromagn√©tico _____________________________       58
     b) Protocolos de estandarizaci√≥n __________________________      60
     c) Ventajas de las redes inal√°mbricas ______________________     62
     d) Desventajas de las redes inal√°mbricas ___________________     63
           M√≥dulos XBEE _____________________________________         63
         o Redes ZIGBEE ____________________________________          64
         o Clasificaci√≥n de nodos ZIGBEE ______________________       65
         o Protocolo ZigBee __________________________________        67
         o Estrategias de conexi√≥n de los dispositivos en un red
         ZigBee ______________________________________________        68
 2.3.   HIPOTESIS DE LA INVESTIGACION _______________________ 70
CAP√çTULO III: METODO DE LA INVESTIGACION ____________________ 71
 3.1. VARIABLES DE LA INVESTIGACION _______________________ 72
   a) Variable independiente: _________________________________ 72
   b) Variable dependiente: ___________________________________ 72
 3.2.   METODOLOGIA DE INVESTIGACION ______________________ 72
 3.3.   TIPO DE INVESTIGACION ________________________________ 72
 3.4.   NIVEL DE INVESTIGACION ______________________________ 72
 3.5.   FUENTES DE RECOLECCION DE DATOS ___________________ 73
 3.6.   ANALISIS E INTERPRETACION DE DATOS _________________ 73
CAP√çTULO IV: CARACTERIZACION DEL AREA DE INVESTIGACION ____ 74
 4.1.   UBICACI√ìN GEOGRAFICA DE LA PROVINCIA DE PUNO ______ 75
 CAP√çTULO V: IMPLEMENTACION DEL MODULO DE ENTRENAMIENTO DE
BRAZO ROBOTICO ____________________________________________ 77
 5.1. CIRCUITO DE CONTROL ________________________________            79
   5.1.1. MICROCONTROLADOR PIC16F877A ___________________             79
   5.1.2. L√ìGICA DE POSICIONAMIENTO _______________________           80
   5.1.3. CONTROL MANUAL _________________________________            81
   5.1.4. PUERTO SERIE Y NIVELES DE TENSION _______________           84
   5.1.5. INDICADORES LED _________________________________           85
   5.1.6. CONECTORES _____________________________________            86
 5.2.   MONTAJE DEL PROTOTIPO _____________________________ 87
 5.3. MICROPROGRAMA _____________________________________ 96
   5.3.1. HERRAMIENTAS DE PROGRAMACI√ìN _________________ 96
   5.3.2. PROGRAMACI√ìN MODO MANUAL _____________________ 98
 5.4. APLICACI√ìN EN LABVIEW _____________________________ 102
   5.4.1. LABVIEW PANEL FRONTAL _________________________ 103
   5.4.2. LABVIEW DIAGRAMA DE BLOQUES __________________ 106
CAP√çTULO VI: EXPOSICION Y ANALISIS DE LOS RESULTADOS ______ 119
 6.1.   DETERMINACI√ìN DE LOS VALORES DE LA MATRIZ T ______ 120
 6.2.   ACTIVACION DEL SISTEMA EN EL SERVIDOR _____________ 122
 6.3.   PRUEBAS DE FUNCIONAMIENTO DEL BRAZO ROBOT ______ 123
 6.4.   VALIDACION DE LA HIPOTESIS _________________________ 124
 6.5.   AN√ÅLISIS T√âCNICO-ECON√ìMICO ________________________ 125
CONCLUSIONES_____________________________________________ 130
RECOMENDACIONES ________________________________________ 131
BIBLIOGRAFIA ______________________________________________ 132
                             √çNDICE DE FIGURAS

Figura 1 Sistema de operaci√≥n manual mediante instrumentos ___________ 17
Figura 2 Tableros de control y medida ______________________________ 18
Figura 3 Esquema de brazo rob√≥tico simulado en Autodesk Inventor ______ 26
Figura 4 Partes de la estructura del brazo rob√≥tico. ____________________ 30
Figura 5 Articulaciones con diferentes grados de libertad. _______________ 31
Figura 6 Configuraciones m√°s usadas en robots manipuladores. _________ 32
Figura 7 Sistema de coordenadas Vectorial __________________________ 35
Figura 8 Sistema de coordenadas cartesianas _______________________ 36
Figura 9 Sistema de coordenadas polares ___________________________ 37
Figura 10 Representaci√≥n Coordenadas cil√≠ndricas. ___________________ 38
Figura 11 Ubicaci√≥n efector final mediante un sistema de referencia ______ 39
Figura 12 Sistema de coordenadas rotadas uno respeto al otro __________ 40
Figura 13 Sistema de coordenadas solidarios.________________________ 42
Figura 14 Sistemas de coordenadas coincidentes _____________________ 45
Figura 15 Representaci√≥n gr√°fica y matricial de un giro Œ± alrededor del eje X. 47
Figura 16 Representaci√≥n gr√°fica y matricial de un giro Œ≤ alrededor del eje Y. 47
Figura 17 Representaci√≥n gr√°fica y matricial de un giro ùõæalrededor del eje z. 47
Figura 18 Representaci√≥n gr√°fica y matricial de la submatriz de rotaci√≥n. __ 48
Figura 19 Matriz de Transformaci√≥n Homog√©nea representando una traslaci√≥n
espacial. _____________________________________________________ 49
Figura 20. Relaci√≥n cinem√°tica inversa y directa. _____________________ 50
Figura 21 Sistema de coordenadas para localizar un objeto. _____________ 51
Figura 22 Robot planar de 2 grados de libertad. ______________________ 53
Figura 23 Representaci√≥n par√°metros de D_H _______________________ 56
Figura 24 Robot cil√≠ndrico _______________________________________ 57
Figura 25 Espectro electromagn√©tico _______________________________ 59
Figura 26 Red ZigBee, de acuerdo a su papel en la red ________________ 66
Figura 27 Mapa distrital de Puno __________________________________ 75
Figura 28 Croquis de la Universidad Nacional del Altiplano - Puno ________ 75
Figura 29 E/S PIC 16F877A ______________________________________ 79
Figura 30 Control de pulsos ______________________________________ 81
Figura 31 Jostick con pulsadores __________________________________ 82
Figura 32 Circuito de control de la Pinza. ____________________________ 82
Figura 33 Adaptador USB XBee___________________________________ 84
Figura 34 MAX232. ____________________________________________ 85
Figura 35 LEDs indicadores ______________________________________ 86
Figura 36 Circuiter√≠a final ________________________________________ 87
Figura 37 Visi√≥n global de la parte mec√°nica. ________________________ 88
Figura 38 Imagen de la base (Parte A). _____________________________ 88
Figura 39 Interior de la Parte A. ___________________________________ 89
Figura 40 Base (zona inferior de la parte B). _________________________ 90
Figura 41 Soporte multifuncional para servomotores. __________________ 90
Figura 42 Proceso de montaje del servomotor 5. ______________________ 91
Figura 43 a) Soporte en largo para servomotor b) Montaje servomotor 5. ___ 91
Figura 44 Torniller√≠a para fijar soporte multifuncional y soporte. __________ 92
Figura 45 Soportes largos acoplados. ______________________________ 92
Figura 46 Montaje del servomotor 4. _______________________________ 93
Figura 47 Soporte en C adosado a soporte en Largo. __________________ 93
Figura 48 Extremo de soporte en C con bloques multifuncionales superpuestos.
 ____________________________________________________________ 94
Figura 49 Pinza manipuladora ____________________________________ 94
Figura 50 Etapas de montaje: (a) Desarrollo, (b) simulaci√≥n e (c)
implementaci√≥n. _______________________________________________ 95
Figura 51 Aspecto del MPLAB X. __________________________________ 97
Figura 52 Vistas de PicKit2 clone. _________________________________ 97
Figura 53 Conexionado Correcto PicKit2 clone-Microcontrolador. _________ 98
Figura 54 Cabecera del Microprograma. ____________________________ 99
Figura 55 Bits de configuraci√≥n. __________________________________ 100
Figura 56 Asignaci√≥n de patillas de entrada y salida. _________________ 102
Figura 57 Definici√≥n de variables y constantes. ______________________ 102
Figura 58 Panel Frontal del programa en LabVIEW. __________________ 103
Figura 59 Selecci√≥n del puerto. __________________________________ 104
Figura 60 Pesta√±a de acciones. __________________________________ 104
Figura 61 Pulsador de carga de secuencia. _________________________ 105
Figura 62 Tabla de coordenadas._________________________________ 105
Figura 63 Barra de posicionamiento. ______________________________ 105
Figura 64 Panel de informaci√≥n general. ___________________________ 106
Figura 65 Esquema general del programa. _________________________ 107
Figura 66 Variables para el panel frontal. ___________________________ 107
Figura 67 Configuraci√≥n del puerto serie en LabVIEW. ________________ 108
Figura 68 Bloque A del diagrama de bloques. _______________________ 109
Figura 69 Elementos iniciales del Bloque B. ________________________ 110
Figura 70 Bloque B. ___________________________________________ 111
Figura 71 Primera parte del bucle ‚Äúwhile‚Äù del Bloque B. _______________ 112
Figura 72 Contenido del primer bucle ‚Äúfor‚Äù del Bloque B. _______________ 113
Figura 73 Contenido del segundo bucle ‚Äúfor‚Äù del Bloque B. _____________ 114
Figura 74 Estructura ‚Äúcase‚Äù del Bloque B. __________________________ 115
Figura 75 Bloque de ayuda. _____________________________________ 116
Figura 76 Bloque ‚ÄúOrd o Man?‚Äù __________________________________ 116
Figura 77 Bloque ‚ÄúEscribe en Puerto Serie‚Äù. ________________________ 117
Figura 78 Bloque ‚ÄúPIC‚Äù. ________________________________________ 117
Figura 79 Bloque ‚ÄúLectura Byte Control‚Äù. ___________________________ 118
Figura 80 An√°lisis de los cinco grados de libertad para determinar valores de
matriz homog√©nea T __________________________________________ 120
                            √çNDICE DE TABLAS

Tabla 1 Clasificaci√≥n cronol√≥gica de manipuladores ___________________ 22
Tabla 2 Par√°metros D-H para el robot cil√≠ndrico de la figura 18. __________ 58
Tabla 3: Error relativo promedio de posicionamiento __________________ 124
Tabla 4: An√°lisis t√©cnico ________________________________________ 128
Tabla 5: Costo de realizaci√≥n ____________________________________ 129
                                 RESUMEN


El presente proyecto desarrolla un brazo robot que se podr√° controlar en modo

manual y autom√°tico, para realizar tareas repetitivas, espec√≠ficamente tareas

de paletizaci√≥n; haciendo referencias al √°rea de rob√≥tica y de redes, para lo

cual se utiliz√≥ recursos accesibles que no requieran una gran inversi√≥n, por ello

se desarrolla por completo todo el sistema:La parte mec√°nica, la de control y la

interfaz que permita el monitoreo mediante redes Zigbee. Los dise√±os, m√©todos

y herramientas utilizados buscan facilitar la comprensi√≥n de su funcionamiento

para la elaboraci√≥n de trabajos futuros y disminuir su complejidad.


Para lograr el fin mencionado se eligi√≥ un dise√±o tipo articulado antropom√≥rfico

y que a su vez representa el modelo m√°s comercial y pr√°ctico de construir, la

construcci√≥n de dicho brazo rob√≥tico consta de 5 grados de libertad, cuyo

control residir√° en una computadora que dotar√° al brazo de la capacidad -

mediante redes Zigbee- para realizar algunas tareas, las cuales a gran escala

podr√≠an ser id√≥neas para industrias.




Palabras claves: Brazo, robot, redes, inal√°mbricas, articulaci√≥n, paletizaci√≥n,

industrializaci√≥n.

                                                                              11
                                  ABSTRACT


This project develops a robot arm can be controlled in manual and automatic

mode, to perform repetitive tasks, specifically palletizing tasks; making

reference to the area of robotics and networks, for which accessible resources

that do not require a large investment was used, so the whole system is fully

developed: The mechanical part, the control and interface to monitoring through

networks Zigbee. Designs, methods and tools used are intended to facilitate the

understanding of its operation for the development of future work and decrease

their complexity.


To achieve the aim, to be elected an anthropomorphic articulated type design

which in turn represents the commercial and practical model building, the

construction of the robotic arm has 5 degrees of freedom, whose control will

reside on a computer that will provide the arm capacity -by Zigbee networks - to

perform some tasks, which a large scale could be suitable for industries.




Keywords:       arm,   robot,   networks,   wireless,   articulation,   palletizing,

industrialization.

                                                                                 12
                             INTRODUCCI√ìN


La automatizaci√≥n de los procesos industriales a trav√©s de los a√±os ha dado

lugar a un avance espectacular de la industria. Todo ello ha sido posible

gracias a una serie de factores entres los que se encuentran las nuevas

tecnolog√≠as en el campo mec√°nico, la introducci√≥n de las computadoras, la

regulaci√≥n de sistemas y procesos y tambi√©n el hecho, en algunos casos, de

ser controlados y monitoreados remotamente. Controlar un proceso a distancia,

es relativamente algo nuevo, por varias razones, como el desconocimiento de

esta tecnolog√≠a, el costo que involucra implementar esta tecnolog√≠a en las

industrias, dar mayor seguridad a empleados o supervisores que trabajan en

zonas de riesgo.


La incorporaci√≥n de las computadoras en la producci√≥n, la automatizaci√≥n de

los procesos industriales y la robotizaci√≥n han permitido el aumento de la

productividad y la mejora del producto, hecho que conlleva la incorporaci√≥n de

robots industriales.


Dichos robots cumplen con tareas de un alto nivel de complejidad, precisi√≥n,

rapidez y efectividad.


Un robot industrial es un manipulador reprogramable con funciones m√∫ltiples,

dise√±ado    para   mover   materiales,   partes,   herramientas   o   dispositivos

especializados a trav√©s de movimientos programados var√≠ales para el

desempe√±o de una gran diversidad de tareas. La mayor√≠a de las industrias

automatizadas cuenta con robots manipuladores para asistir o sustituir al

operador en trabajos peligrosos, mon√≥tonos o de alta complejidad.



                                                                               13
En el presente trabajo se muestran aplicaciones que involucran el control de un

manipulador a distancia comenzado con una breve explicaci√≥n del contenido

de los cap√≠tulos que conforman este documento.


En el Cap√≠tulo I, se muestran temas referidos al planteamiento del problema,

antecedentes de la investigaci√≥n y los objetivos.


En el Cap√≠tulo II, se desarrolla el marco te√≥rico, conceptual, conjuntamente a la

hip√≥tesis de la investigaci√≥n.


En el Cap√≠tulo III, se contempla la metodolog√≠a implementada para el dise√±o y

desarrollo del presente proyecto de investigaci√≥n, tanto a nivel perceptivo como

material.


En el Cap√≠tulo IV, describe caracter√≠sticas del √°rea de investigaci√≥n, as√≠ como

datos relevantes como el problema objeto de investigaci√≥n.


En el Capitulo V, se detalla la implementaci√≥n del modulo de entrenamiento, y

los procesos que conllevan, tales como, circuiter√≠a, montaje del prototipo,

desarrollo del microprograma y la aplicaci√≥n en LabView.


En el Cap√≠tulo VI, se detallan y analizan los resultados obtenidos a partir de la

hip√≥tesis.


Posteriormente se resumen las recomendaciones que se proponen, as√≠ como

las conclusiones a las que se llegaron, y finalmente, se presentan la bibliograf√≠a

que sirvieron como soporte a esta investigaci√≥n.




                                                                               14
  CAP√çTULO I: PLANTEAMIENTO DEL PROBLEMA,

ANTECEDENTES Y OBJETIVOS DE LA INVESTIGACION




                                               15
PLANTEAMIENTO DEL PROBLEMA, ANTECEDENTES Y OBJETIVOS DE

LA INVESTIGACI√ìN

   1.1.         PLANTEAMIENTO DEL PROBLEMA.

La rob√≥tica es uno de los recursos m√°s utilizados pero a la vez, uno de los m√°s

costosos aunque muchas industrias ya utilicen sistemas muy avanzados,

tambi√©n existen peque√±as industrias que desean mejorar su productividad y

mejorar la calidad de los procesos sin tener acceso a tecnolog√≠as.

Antes de llevar a cabo el desarrollo de un sistema que ayude a agilizar,

estandarizar, aumentar la productividad y disminuir residuos as√≠ como costos

de producci√≥n es necesario dar respuesta a la siguiente pregunta.

¬øC√≥mo pueden llevarse a cabo las operaciones automatizadas de elementos

mec√°nicos que desempe√±an una funci√≥n din√°mica durante el proceso, y

garantizar la estandarizaci√≥n, uniformidad y calidad del proceso?

Es por dicho motivo que el impacto que ha tomado la rob√≥tica en el mundo

obliga a investigar y a solucionar problemas de la vida cotidiana, los robots han

demostrado ser una herramienta de alta calidad que permiten realizar un

trabajo dado.

Debido a lo anterior, resulta evidente la necesidad de desarrollar un sistema

que permita realizar las operaciones de soldadura de manera estandarizada,

continua y con la calidad que demanda el desempe√±o del armamento.

El presente proyecto de tesis tiene como objeto el desarrollo e implementaci√≥n

de un brazo rob√≥tico de 5 grados de libertad y adem√°s de la circuiter√≠a y la

programaci√≥n necesaria para controlar un brazo robot remotamente con redes

ZigBee, por medio de un microcontrolador, el control se puede realizar




                                                                              16
manualmente o por el contrario controlarse remotamente desde un ordenador y

mediante una interfaz desarrollada con el software LabView.

   1.2.        ANTECEDENTES DE LA INVESTIGACION.

En los primeros tiempos de la industrializaci√≥n las plantas eran supervisadas y

controladas manualmente, bas√°ndose en las indicaciones de instrumentos

instalados en campo, como muestra la Figura 1 la supervisi√≥n requer√≠a que el

operador estuviera en planta para llevar a cabo el control manual del proceso.




              Figura 1 Sistema de operaci√≥n manual mediante instrumentos

     Fuente: Acedo S√°nchez., Instrumentaci√≥n y Control avanzado de procesos, 2006.

Desarrollos posteriores en la instrumentaci√≥n, tal como sensores con

posibilidad de transmitir las principales variables de proceso (temperatura,

presi√≥n, nivel, caudal, etc.), as√≠ como controladores mec√°nicos, hidr√°ulicos y

neum√°ticos, contribuyeron en los a√±os cuarenta a la automatizaci√≥n gradual de

las plantas, la tendencia de         automatizaci√≥n continu√≥ durante los a√±os

cincuenta al aparecer los instrumentos electr√≥nicos. Todo ello condujo a la

centralizaci√≥n en salas donde se ubicaron los elementos necesarios para llevar

a cabo la      supervisi√≥n y control. La figura 2 muestra dos paneles con

instrumentos anal√≥gicos de diferentes tama√±os de acuerdo a la evoluci√≥n en la

tecnolog√≠a.

                                                                                     17
Con la introducci√≥n de se√±ales est√°ndar para transmisi√≥n, tanto neum√°ticas (3

a 15     PSI) como electr√≥nicas (4 a 20 mA), los distintos fabricantes hicieron

compatibles los elementos que componen un lazo de control, como sensor,

transmisor, controlador, convertidor, elemento final, indicador, registrador,

etc. Esto simplific√≥ el dise√±o, instalaci√≥n operaci√≥n y mantenimiento de los

sistemas de control industriales.




                          Figura 2 Tableros de control y medida

       Fuente: Acedo S√°nchez., Instrumentaci√≥n y Control avanzado de procesos, 2006.

A medida de los a√±os veinte se utiliz√≥ en la industria el control todo-nada, y al

final de los a√±os veinte el control proporcional. Los controladores son acciones

proporcional, integral y derivativa fueron de uso com√∫n en los a√±os treinta. Los

valores de referencia (puntos de consigna o SP), pod√≠an ser fijados por el

operador de planta. La necesidad de comprender los problemas inherentes al

ajuste o sinton√≠a de los controladores PID, hizo que apareciera la simulaci√≥n

del lazo de control. Este fue el principio de la teor√≠a sobre sistemas de control.

Para el ajuste de los par√°metros de control se empezaron a utilizar las reglas

de ZieglerNichols, basada en la sensibilidad del lazo de control.

Los sistemas teleoperadores se desarrollaron en los a√±os 40 para manejar

materiales radiactivos. Consist√≠an en un par de pinzas ‚Äúmaestra‚Äù y ‚Äúesclava‚Äù

acopladas por mecanismos que permit√≠an que la pinza ‚Äúesclava‚Äù, en contacto


                                                                                       18
con el material peligroso, reprodujera los movimientos de la pinza ‚Äúmaestra‚Äù

accionada por un operador detr√°s de un muro protector con ventanas

apropiadas para observar la operaci√≥n.

El primer teleoperador accionado por servomecanismos el√©ctricos se present√≥

en 1947. Poco despu√©s en 1948, se introdujeron servosistemas con

realimentaci√≥n de fuerza hacia la pinza ‚Äúmaestra‚Äù para permitir que el operador

percibiera el esfuerzo desarrollado.

A nivel hist√≥rico se pueden distinguir cinco fases relevantes en el desarrollo de

la rob√≥tica industrial:

   ÔÇ∑   El laboratorio ARGONNE dise√±a, en 1950, manipuladores amo-esclavo

       para manejar material radioactivo.

   ÔÇ∑   Unimation, fundada en 1958 por Engelberger y hoy absorbida por

       Whestinghouse, realiza los primeros proyectos de robots a principios de

       la d√©cada de los sesentas de nuestro siglo, instalando el primero en

       1961 y posteriormente, en 1967, un conjunto de ellos en una factor√≠a de

       General Motors. Tres a√±os despu√©s, se inicia la implantaci√≥n de los

       robots en Europa, especialmente en el √°rea de fabricaci√≥n de

       autom√≥viles. Jap√≥n comienza a implementar esta tecnolog√≠a hasta 1968.

   ÔÇ∑   Los laboratorios de la Universidad de Standford y del MIT (Instituto

       Tecnol√≥gico de Massachusetts) acometen, en 1970, la tarea de controlar

       un robot mediante computador.

   ÔÇ∑   En el a√±o de 1975, la aplicaci√≥n del microprocesador, transforma la

       imagen y las caracter√≠sticas del robot, hasta entonces grande y costoso.

   ÔÇ∑   A partir de 1980, el fuerte impulso en la investigaci√≥n, por parte de las

       empresas      fabricantes   de   robots,   otros   auxiliares   y   diversos


                                                                                 19
      departamentos de Universidades de todo el mundo, sobre la inform√°tica

      aplicada y la experimentaci√≥n de los sensores, cada vez m√°s

      perfeccionados, potencian la configuraci√≥n del robot inteligente capaz de

      adaptarse al ambiente y tomar decisiones en tiempo real, adecuarlas

      para cada situaci√≥n.

En esta fase que dura desde 1975 hasta 1980, la conjunci√≥n de los efectos de

la revoluci√≥n de la Microelectr√≥nica y la revitalizaci√≥n de las empresas

automovil√≠sticas, produjo un crecimiento acumulativo del parque de robots,

cercano al 25%.

La evoluci√≥n de los robots industriales desde sus principios ha sido vertiginosa.

En poco m√°s de 30 a√±os las investigaciones y desarrollos sobre rob√≥tica

industrial han permitido que los robots tomen posiciones en casi todas las

√°reas productivas y tipos de industria. En peque√±as o grandes f√°bricas, los

robots pueden sustituir al hombre en aquellas √°reas repetitivas y hostiles,

adapt√°ndose inmediatamente a los cambios de producci√≥n solicitados por la

demanda variable.

Actualmente existen industrias que utilizan como herramientas de trabajo

robots tipo antropom√≥rfico, ya que conlleva una mayor eficiencia en el √°rea de

trabajo, ya sea para diferentes procesos en los cuales se necesitan, por

mencionar algunos, mejoras en la fabricaci√≥n de los materiales, procesos de

corte, pintado, as√≠ como la precisi√≥n del manejo de objetos, manipulaci√≥n de

materiales t√≥xicos que podr√≠an resultar peligrosos para el operario, entre otras.

Entre los antecedentes o proyectos similares en el cual se basa el presente

proyecto de tesis, se puede mencionar:




                                                                                20
   ÔÇ∑   Implementaci√≥n de brazos rob√≥ticos dise√±ados por los estudiantes de la

       Escuela Profesional de Ingenier√≠a Electr√≥nica (Jhoni Saolin Hanco Vilca

       ‚Äì √Ångel Calsina Quispe).

   ÔÇ∑   Brazo rob√≥tico para realizar movimientos de piezas de ajedrez, por

       Giancarlo Berenz, independiente M√©xico.

   ÔÇ∑   Implementaci√≥n de brazos rob√≥ticos por los estudiantes de la

       Universidad de Medell√≠n ‚Äì Colombia.

   ÔÇ∑   Desarrollo del prototipo de un brazo rob√≥tico para la manipulaci√≥n de

       objetos, por Ezequiel Ruiz Nicolini, Instituto Balseiro-Argentina.

   ÔÇ∑   Brazo rob√≥tico acoplado a una silla de ruedas que ayuda a las personas

       con discapacidades, desarrollado por la empresa japonesa AIST

   ÔÇ∑   Robot paletizador KR desarrollado por la empresa E-Market Kplace

       Packaging.

   ÔÇ∑   Brazo rob√≥tico CEBEK, desarrollado y comercializado por Rob√≥tica

       Educativa y Presencial de Espa√±a.

La clasificaci√≥n de los manipuladores seg√∫n T. M. Knasel vendr√≠a dada de

acuerdo al siguiente orden:

                                   Tipo de          Grado de          Usos m√°s
Generaci√≥n        Nombre
                                   control         movilidad         frecuentes

   1982        Pick and         Fines de        Ninguno             Manipulaci√≥n,

               Place            carrera,                            servicio de

                                aprendizaje                         maquinas

   1984        Servo            Servocontrol,   Desplazamiento Soldadura,

                                trayectoria     por v√≠a             pintura

                                continua,


                                                                                  21
                               programaci√≥n

                               condicional

   1989      Ensamblado        Servos de           Gu√≠a por v√≠a       Ensamblado,

                               precisi√≥n                              desbardado

   2000      M√≥vil             Sensores            Patas y ruedas     Construcci√≥n,

                               inteligentes                           mantenimiento

   2010      Especiales        Controlados         Andante,           Militar,

                               con t√©cnicas        saltar√≠n           espacial

                               de IA


                Tabla 1 Clasificaci√≥n cronol√≥gica de manipuladores


   1.3.     OBJETIVOS DE LA INVESTIGACION.

Objetivo general:

Desarrollar y construir el m√≥dulo de entrenamiento de un brazo rob√≥tico de

cinco grados de libertad, dise√±ado en una escala de 1 a 100, implementado en

LabView monitorizado mediante redes ZigBee, para emular tareas de

paletizaci√≥n, tanto en modo manual como en modo autom√°tico.

Objetivos espec√≠ficos:

Obtener   experiencia    pr√°ctica   sobre     la   comunicaci√≥n     serie   entre   un

microcontrolador y un ordenador y ampliar conocimientos sobre el campo de la

rob√≥tica, para as√≠ realizar el control del modulo por medio de una interfaz

aplicativa de LabView

Realizar un prototipo de brazo robot de unos 50 cm de altura, que cuente con

la circuiter√≠a necesaria para el control manual y autom√°tico (previamente

programadas) del m√≥dulo, y que a la vez posea cinco grados de libertad y una



                                                                                    22
pinza manipuladora, cuyo control se realice a trav√©s de un microcontrolador y el

cual dota de movimiento a 6 servomotores.

Desarrollar un modo aprendizaje para el robot, que le permita memorizar

posiciones consecutivas colocando a priori el brazo robot en una posici√≥n inicial

pre-programada, con la finalidad de que el sistema sea capaz de realizar, a

peque√±a escala, algunos de los movimientos que realizan los brazos rob√≥ticos

industriales.




                                                                              23
CAP√çTULO II: MARCO TEORICO, MARCO CONCEPTUAL E

         HIPOTESIS DE LA INVESTIGACION




                                                 24
MARCO      TEORICO,      MARCO       CONCEPTUAL        E   HIPOTESIS       DE   LA

INVESTIGACION

   2.1.      MARCO TEORICO

El presente proyecto de tesis comenz√≥ con el desarrollo de un brazo rob√≥tico

simple para satisfacer la demanda de un proyecto realizable para el √°rea de

Electr√≥nica, tanto en sistemas de control, como en comunicaci√≥n de datos, de

la carrera Ingenier√≠a Electr√≥nica.

Los avances en la tecnolog√≠a han permitido desarrollar un sin n√∫mero de

aplicaciones en los que se destaca los sistemas de control modernos utilizados

en las industrias, la medicina, el agro, en nuestra vida cotidiana y en fin en todo

el entorno en el que nos desenvolvemos. Pasando del control realizado por un

operador humano en una consola de control (sistemas HMI) en el sitio de la

planta a sistemas controlados autom√°ticamente mediante PLCs, aut√≥matas

robotizados hasta el control autom√°tico efectuado de forma remota por un

operador ubicado a varios metros de la planta de producci√≥n.

El prototipo que se desarrolla a lo largo de este proyecto pertenece, dentro de

la escala cronol√≥gica, a un robot de segunda generaci√≥n, el cual se

desarrollara conceptualmente en el √≠tem posterior Capitulo II parte 2.2.

El desarrollo result√≥ un proyecto integrador ya que en el mismo se utilizaron los

conocimientos de distintas materias como la de electr√≥nica de potencia;

resistencia de materiales; transmisi√≥n de datos y sistemas de control, maquinas

y computadoras y elementos de m√°quinas.

El dise√±o general del brazo posee cinco grados de libertad, los cuales lo hacen

muy vers√°til, y sus partes componentes son la base, el brazo, el antebrazo y la

mano. El dise√±o se realizo mediante el software Autodesk Inventor.


                                                                                25
         Figura 3 Esquema de brazo rob√≥tico simulado en Autodesk Inventor

Con respecto al dise√±o estructural, se busco obtener poca masa y buena

resistencia. Para tener poca masa se utiliz√≥ para la estructura, aluminio -por ser

un material ligero y maleable-, y para aumentar la resistencia se le confiri√≥ un

perfil con un mayor momento de inercia en el sentido de la realizaci√≥n de

movimientos.

Motores y transmisi√≥n, para favorecer a√∫n m√°s la reducci√≥n de masa se opt√≥

por colocar los servomotores distribuidos en las articulaciones; el movimiento

se transmite remotamente por las redes ZigBee -cuyos protocolos son muy

similares a los desarrollados en los conceptos TCP/IP-, mediante una la

interfaz creada en LabView. Los motores utilizados son de corriente continua

dotados de una reducci√≥n epicicloidal, con este tipo de reducci√≥n se logra

obtener muy buen par en un espacio reducido.

El software se desarrolla en LabView, un programa que permite al manipulador

gobernar movimientos del brazo rob√≥tico, el cual ofrece, b√°sicamente dos

modos de movimientos, manual y autom√°tico

El regulador de velocidad-posici√≥n, se constituye principalmente a un

microcontrolador PIC, que es el encargado de generar la modulaci√≥n por ancho


                                                                               26
de pulsos (PWM), adem√°s se considera a los sensores y efectores como

herramientas para percepci√≥n y ejecuci√≥n los que se convierten en niveles

l√≥gicos TTL, que previa a la etapa de potencia act√∫a sobre los motores para un

uso maniobrable.

Las redes ZigBee (emisor y receptor), los cuales pertenecen al est√°ndar IEEE

802.15.4 son los encargados de la manipulaci√≥n remota desde la PC hasta el

modulo de entrenamiento, el que se define en 16 canales en el rango de 2.4

GHz, cada uno de ellos con un ancho de banda de 5MHz, por lo que resulta

ideal para redes est√°ticas y escalables.

   2.2.       MARCO CONCEPTUAL

   2.2.1.     Rob√≥tica

   La rob√≥tica es la ciencia encaminada a dise√±ar y construir aparatos y

   sistemas capaces de realizar tareas propias de un ser humano. Se

   combinan diversas disciplinas como son la mec√°nica, la electr√≥nica, la

   inform√°tica, la inteligencia artificial y la ingenier√≠a de control.

   Los robots se pueden clasificar seg√∫n su cronolog√≠a y seg√∫n su

   arquitectura. Seg√∫n su cronolog√≠a se clasifican los siguientes tipos:

   1¬™ Generaci√≥n: Manipuladores. Son sistemas mec√°nicos multifuncionales

   con un sencillo sistema de control, bien manual, de secuencia fija o de

   secuencia variable.

   2¬™ Generaci√≥n: Robots de aprendizaje. Repiten una secuencia de

   movimientos que ha sido ejecutada previamente por un operador humano.

   El modo de hacerlo es a trav√©s de un dispositivo mec√°nico. El operador

   realiza los movimientos requeridos mientras el robot le sigue y los

   memoriza.


                                                                            27
3¬™ Generaci√≥n: Robots con control sensorizado. Los robots se vuelven

reprogramables, usan controladores o computadoras para analizar la

informaci√≥n captada de su entorno mediante sensores (cabe mencionar que

se desarrolla la visi√≥n artificial) y aparecen los lenguajes de programaci√≥n.

4¬™ Generaci√≥n: Robots inteligentes. Son similares a los anteriores, pero

adem√°s poseen sensores que env√≠an informaci√≥n a la computadora de

control sobre el estado del proceso. Esto permite una toma inteligente de

decisiones y el control del proceso en tiempo real.

a) Estructura del robot manipulador

Cuando se habla de la estructura del robot, se habla de la forma que debe

tener el brazo del robot manipulador, forma que debe ser acorde a su

aplicaci√≥n. Mec√°nicamente, la estructura t√≠pica de un manipulador industrial

se compone de un brazo y una mu√±eca formados por elementos con

articulaciones entre ellos. Un extremo se encuentra fijo a una base soporte,

mientras que el extremo final se encuentra libre y equipado con una

herramienta para manipular los objetos o realizar tareas de montaje.

El manipulador se dise√±a con el objetivo de alcanzar una pieza dentro de su

espacio de trabajo. El espacio de trabajo alcanzable se refiere al espacio

dentro del cual puede desplazarse el extremo de su mu√±eca.

Dependiendo de la estructura del manipulador, el espacio de trabajo puede

ser de forma regular o irregular. Un manipulador industrial convencional es

una cadena cinem√°tica abierta formada por un conjunto de eslabones o

elementos interrelacionados mediante articulaciones o uniones, que

permiten el movimiento controlado entre dos eslabones sucesivos. Cada




                                                                                28
uno de los movimientos independientes que realiza cada una de las

articulaciones se denomina grado de libertad (GDL).

Para posicionar y orientar un cuerpo en cualquier punto del espacio de

trabajo, un manipulador debe de tener cinco GDL, tres para posicionamiento

y dos para orientaci√≥n.

El movimiento de cada articulaci√≥n puede ser de rotaci√≥n, desplazamiento o

una combi-naci√≥n de ambos. Bajo esta premisa existen seis tipos diferentes

de articulaciones: De rotaci√≥n, prism√°tica, cil√≠ndrica, planar, esf√©rica o rotula

y de tornillo. Las diferentes combinaciones de articulaciones en los robots,

dan lugar a que se puedan realizar diferentes configuraciones para el brazo

del manipulador, caracter√≠sticas que se deben de tener en cuenta para su

dise√±o. Las configuraciones m√°s comunes son: Cartesiana, cil√≠ndrica, polar

o esf√©rica, angular o rotacional o antropom√≥rfica

b) Partes de los robots

Los robots disponen de cuerpo r√≠gido, en el que hay eslabones con

movimiento.

Los eslabones se unen entre s√≠ mediante articulaciones, que permiten el

movimiento, al tratarse de un automatismo similar a un brazo humano

articulado su esquema y partes quedar√≠an distribuidas de acuerdo a la

siguiente figura:




                                                                              29
             Figura 4 Partes de la estructura del brazo rob√≥tico.

c) Morfolog√≠a de los robots

La morfolog√≠a comprende la descripci√≥n de las caracter√≠sticas b√°sicas de la

estructura de los robots incluyendo tanto a manipuladores como m√≥viles. En

robots manipuladores se consideran los tipos de articulaciones as√≠ como las

configuraciones cl√°sicas que para este tipo de robots son empleadas. Un

robot est√° formado por los siguientes elementos: estructura mec√°nica,

transmisiones, sistema de accionamiento, sistema sensorial, sistema de

control y elementos terminales.

Un robot manipulador es una cadena cinem√°tica abierta formada por un

conjunto de eslabones o elementos de la cadena interrelacionados

mediante articulaciones o pares cinem√°ticos, articulaciones que permiten el

movimiento relativo entre los sucesivos eslabones.

La constituci√≥n f√≠sica de la mayor parte de los robots industriales guarda

cierta similitud con la anatom√≠a del brazo humano, por lo que en ocasiones,

para hacer referencia a los distintos elementos que lo componen se usan

t√©rminos como cuerpo, brazo, codo y mu√±eca.

d) Tipos de articulaciones



                                                                         30
Cada uno de los movimientos independientes que puede realizar cada

articulaci√≥n con respecto a la anterior, se denomina grado de libertad

(GDL). En la figura 5 se indica el n√∫mero de GDL de cada tipo de

articulaci√≥n.




           Figura 5 Articulaciones con diferentes grados de libertad.

                Fuente: Barrientos., Fundamentos de Rob√≥tica., 1996.

El n√∫mero de grados de libertad del robot viene dado por la suma de los

grados de libertad de las articulaciones que lo componen.

e) Estructuras b√°sicas

El empleo de diferentes combinaciones de articulaciones en un robot, da

lugar a diferentes configuraciones, con caracter√≠sticas a tener en cuenta

tanto en el dise√±o y construcci√≥n del robot como en su aplicaci√≥n. Las

combinaciones m√°s frecuentes son las representadas en la figura 6 que


                                                                          31
muestra las tres primeras articulaciones del robot, que son las m√°s

importantes a la hora de posicionar su extremo en un punto del espacio.




        Figura 6 Configuraciones m√°s usadas en robots manipuladores.

              Fuente: Barrientos., Fundamentos de Rob√≥tica., 1996.

    Puesto que para posicionar y orientar un cuerpo de cualquier manera en

    el espacio son necesarios seis par√°metros, tres para definir la posici√≥n

    y tres para la orientaci√≥n, si se pretende que un robot posicione y oriente

    su extremo (y con √©l, la pieza o herramienta manipulada) de cualquier

    modo en el espacio, se precisaran al menos seis DOF.

ÔÇ∑   Configuraci√≥n cartesiana. Se ilustra en la figura 6.a. La configuraci√≥n

    tiene tres articulaciones prism√°ticas (3D o estructura PPP). Esta

    configuraci√≥n es bastante usual en estructuras industriales.

ÔÇ∑   Configuraci√≥n cil√≠ndrica. Esta configuraci√≥n tiene dos articulaciones

    prism√°ticas y una de rotaci√≥n (2D, 1G). La primera articulaci√≥n es


                                                                            32
    normalmente de rotaci√≥n (estructura PPP), como se muestra en la figura

    6.b. La posici√≥n se especifica de forma natural en coordenadas

    cil√≠ndricas.

ÔÇ∑   Configuraci√≥n polar o esf√©rica. Esta configuraci√≥n se caracteriza por

    dos articulaciones de rotaci√≥n y una prism√°tica (2G, 1D o estructura

    RRP). En este caso, las variables particulares expresan la posici√≥n del

    extremo del tercer enlace en coordenadas polares, tal como se muestra

    en la figura 6.c.

ÔÇ∑   Configuraci√≥n       Scara. Esta especialmente dise√±ada para realizar

    tareas de montaje en un plano. Est√° constituida por dos articulaciones

    de rotaci√≥n con       respecto a dos ejes de paralelos, y una de

    desplazamiento en sentido perpendicular al plano figura 6.d.

ÔÇ∑   Configuraci√≥n angular o antropom√≥rfica. Esta configuraci√≥n es una

    estructura con tres articulaciones de rotaci√≥n (3G o RRR), tal como se

    muestra en la figura 6.e. La posici√≥n del extremo final se especifica de

    forma natural en coordenadas angulares. La estructura tiene un mejor

    acceso a espacios cerrados y es f√°cil desde el punto de vista

    constructivo. Es muy empleada en robots manipuladores industriales,

    especialmente en tareas de manipulaci√≥n que tengan una cierta

    complejidad.

f) Localizaci√≥n espacial

La manipulaci√≥n de piezas llevada a cabo por un robot implica el

movimiento espacial de su extremo. Asimismo, para que el robot pueda

recoger una pieza, es necesario conocer la posici√≥n y orientaci√≥n

(localizaci√≥n) de esta con respecto a la base del robot. Se aprecia entonces


                                                                          33
la necesidad de contar con una serie de herramientas matem√°ticas que

permitan especificar la posici√≥n y orientaci√≥n en el espacio de piezas,

herramientas y, en general, de cualquier objeto.

ÔÇ∑   Representaciones de la posici√≥n

    En un plano el posicionamiento tiene dos grados de libertad, y por tanto

    la posici√≥n de un punto vendr√° definida por dos componentes

    independientes. En el caso de un espacio tridimensional ser√° necesario

    emplear tres componentes.

    Un punto queda totalmente definido en el espacio a trav√©s de los

    datos de suposici√≥n (6), as√≠, una vez que se establece un sistema de

    coordenadas, podemos ubicar cualquier punto en el universo con un

    vector de posici√≥n de orden 3X1.Como es com√∫n que definamos

    muchos sistemas de coordenadas, adem√°s del sistema de coordenadas

    universal, los vectores deben etiquetarse con informaci√≥n que identifique

    en cual sistema est√°n definidos. As√≠ los vectores se describen con un

    sub√≠ndice a la izquierda que indica el sistema de coordenadas al que

    hacen referencia (a menos que quede claro seg√∫n el contexto); por

    ejemplo, AP, esto significa que los componentes detienen valores

    num√©ricos que indican distancias sobre los ejes de {A}. Cada una de

    estas distancias sobre un eje puede definirse como el resultado de

    proyectar el vector sobre el eje correspondiente.

    La figura 7 representa el dibujo de un sistema de coordenadas llamado

    {A}, con tres vectores unitarios mutuamente ortogonales con puntas

    s√≥lidas.




                                                                          34
                  Figura 7 Sistema de coordenadas Vectorial

                Fuente: Craig, J. Introducci√≥n a la rob√≥tica., 2006

    Un punto se representa como un vector y puede definirse de manera

    equivalente como una posici√≥n en el espacio, o simplemente como un

    conjunto ordenado de tres n√∫meros.          Dados los sub√≠ndices x, y y z, los

    elementos individuales de un vector son:

                                         ùë∑ùíô
                                    AP = ùë∑ùíö
                                         ùë∑ùíõ

    Es decir; describe la posici√≥n de un punto en el espacio con un vector de

    posici√≥n.

ÔÇ∑   Sistema cartesiano de referencia.

    El sistema de referencia OXY correspondiente queda definido por dos

    vectores coordenados OX y OY perpendiculares entre s√≠ con un punto

    de intersecci√≥n com√∫n O figura 8.a

    Si se trabaja en el espacio (tres dimensiones), el sistema cartesiano

    OXYZ est√° compuesta por una terna ortonormal de vectores

    coordenados OX, OY y OZ, tal y como se ve en la figura 8.b. Se trata de

    una terna ortonormal a derechas.




                                                                               35
                   Figura 8 Sistema de coordenadas cartesianas

               Fuente: Barrientos., Fundamentos de Rob√≥tica., 1996.

ÔÇ∑   Coordenadas cartesianas.

    Si se trabaja en un plano, con su sistema coordenado OXY de referencia

    asociado, un punto a vendr√° expresado por las componentes (x,y)

    correspondientes a los ejes coordenados del sistema OXY. Este punto

    tiene asociado un vector p(x,y), que va desde el origen O del sistema

    OXY hasta el punto a (ver figura 8.a). Por tanto, la posici√≥n del extremo

    del   vector    p   est√°    caracterizado     por    las    dos   componentes

    (x,y),denominadas coordenadas cartesianas del vector y que son las

    proyecciones del vector p sobre los ejes OX y OY.

    En el caso de que se trabaje en tres dimensiones, un vector tiene

    definido con respecto al sistema de referencia OXY mediante las

    coordenadas correspondientes a cada uno de los ejes coordenado. En el

    caso de la figura 8.b, el vector p estar√° definido por las componentes

    cartesianas (x, y, z).

ÔÇ∑   Coordenadas polares y cil√≠ndricas.

    Para un plano, es posible tambi√©n caracterizar la localizaci√≥n de un

    punto o vector p         respecto a un sistema de ejes cartesianos de

    referencia OXY utilizando las denominadas coordenadas polares p(r,∆ü)

    figura 9.a. En esta representaci√≥n, r representa la distancia desde el


                                                                               36
    origen o del sistema hasta el extremo del vector p, mientras que ∆ü es el

    √°ngulo que forma el vector p con el eje OX.




                  Figura 9 Sistema de coordenadas polares

               Fuente: Barrientos., Fundamentos de rob√≥tica., 1996

    En el caso de trabajar en tres dimensiones, un vector p podr√°

    expresarse con respecto a un sistema de referencia OXYZ, mediante las

    coordenadas cil√≠ndricas p(r,∆ü,z) figura 9.b. Las componentes r y ∆ü

    tienen el mismo significado que en el caso de coordenadas polares,

    aplicado el razonamiento sobre el plano OXY, mientras que la

    componente z, expresa la proyecci√≥n sobre el eje OZ del vector p.

ÔÇ∑   Coordenadas esf√©ricas.

    Utilizando el sistema de referencia OXYZ, el vector p tendr√° como

    coordenadas esf√©ricas (r,∆ü,–§), donde la componente r es la distancia

    desde el origen O hasta el extremo del vector p; la componente ∆ü es el

    √°ngulo formado por la proyecci√≥n del vector p sobre el plano OXY con el

    eje OX; y la componente –§ es el √°ngulo formado por el vector p con el

    eje OZ figura 10.




                                                                          37
               Figura 10 Representaci√≥n Coordenadas cil√≠ndricas.

               Fuente: Barrientos., Fundamentos de rob√≥tica., 1996




g) Representaci√≥n de la orientaci√≥n

Para el caso de un s√≥lido, es necesario adem√°s definir cu√°l es su

orientaci√≥n con respecto a un sistema de referencia. En el caso de un robot,

no es suficiente con especificar cu√°l debe ser la posici√≥n de su extremo,

sino que en general, es tambi√©n necesario indicar su orientaci√≥n. Una

orientaci√≥n en el espacio tridimensional viene definida por tres grados de

libertad o tres componentes linealmente independientes. Para poder

describir de forma sencilla de un objeto respecto a un sistema de referencia,

es habitual asignar solidariamente al objeto un nuevo sistema, y despu√©s

estudiar la relaci√≥n espacial existente entre los dos sistemas. De forma

general, esta relaci√≥n vendr√° dada por la posici√≥n y orientaci√≥n del sistema

asociado al objeto respecto al de referencia. Para el an√°lisis de los distintos

m√©todos de representar orientaciones se supondr√° que ambos sistemas

coinciden en el origen, y que por tanto no existe cambio alguno de posici√≥n

entre ellos.


                                                                            38
A menudo necesitamos representar no solamente un punto en el espacio,

sino tambi√©n describir la orientaci√≥n de un cuerpo en el espacio. Por

ejemplo, si el vector AP de la figura 11 ubica el punto directamente entre las

puntas de los dedos de la mano de un manipulador, la ubicaci√≥n completa

de la mano no se especifica sino hasta que se proporciona tambi√©n su

orientaci√≥n. Suponiendo que el manipulador tiene un n√∫mero suficiente de

articulaciones, la mano podr√≠a orientarse arbitrariamente y al mismo tiempo

podr√≠a mantenerse el punto entre las puntas de los dedos en la misma

posici√≥n.




      Figura 11 Ubicaci√≥n efector final mediante un sistema de referencia

                Fuente: Craig J., Introducci√≥n a la rob√≥tica., 2006.

En el espacio; para describir la orientaci√≥n de un cuerpo, adjuntaremos un

sistema de coordenadas al cuerpo y luego daremos una descripci√≥n de este

sistema de coordenadas relativo al sistema de referencia. En la figura 11 se

ha adjuntado el sistema de coordenadas (B) al cuerpo de una manera

conocida. Ahora basta con una descripci√≥n de (B) relativo al sistema de

coordenadas (A) para dar la orientaci√≥n del cuerpo.




                                                                            39
Por ende, las posiciones de los puntos se describen con vectores, y las

orientaciones de los cuerpos con un sistema de coordenadas adjunto. Una

manera de describir el sistema de coordenadas (B) adjunto al cuerpo es

escribiendo los vectores unitarios de sus tres ejes principales en t√©rminos

del sistema de coordenadas (A).

ÔÇ∑   Matrices de rotaci√≥n

    Las matrices de rotaci√≥n son el m√©todo m√°s extendido para la

    descripci√≥n de orientaciones, debido principalmente a la comodidad que

    proporciona el uso del algebra matricial.

    Sup√≥ngase que se tiene en el plano dos sistemas de referencia OXY y

    OUV con un mismo origen O, siendo el sistema OXY el de referencia fijo

    y el sistema OUV el m√≥vil solidario al objeto (figura 12).

    Los vectores unitarios de los ejes coordenados del sistema OXY

    sonùëñùë• , ùëóùë¶ , mientras que los del sistema OUV sonùëñùë¢ , ùëóùë£ .

    Un vector p del plano se puede representar en ambos sistemas como:
                                       ùõæ
                       ùëÉùë•ùë¶ = [ùëùùë• , ùëùùë¶ ] = ùëùùë• ‚àô ùíäùíô + ùëùùë¶ ‚àô ùíãùíö

                       ùëÉùë¢ùë£ = [ùëùùë¢ , ùëùùë£ ]ùõæ = ùëùùë¢ ‚àô ùíäùíñ + ùëùùë£ ‚àô ùíãùíó




         Figura 12 Sistema de coordenadas rotadas uno respeto al otro

                 Fuente: Craig J., Introducci√≥n a la rob√≥tica., 2006.

                                                                         40
Realizando una sencilla serie de transformaciones se puede llegar a la

siguiente equivalencia:

                               ùëÉùë•       ùëÉ
                              [ùëÉ ] = ùëÖ [ ùë¢ ]
                                ùë¶       ùëÉùë£

d√≥nde:

                                 ùëñùë• ùëñùë¢   ùëñùë• ùëóùë£
                            ùëÖ = [ùëó ùëñ     ùëóùë¶ ùëóùë£ ]
                                  ùë¶ ùë¢


es la llamada matriz de rotaci√≥n. Tambi√©n recibe el nombre de matriz de

cosenos directores. Es f√°cil de comprobar que se trata de una matriz

ortonormal, tal queùëÖ ‚àí1 = ùëÖ ùëá

En el caso de dos dimensiones, la orientaci√≥n viene definida por un

√∫nico par√°metro independiente. Si se considera la posici√≥n relativa del

sistema OUV girado un √°ngulo sobre el OXY figura 12.b, tras realizar los

correspondientes productos escalares, la matriz R ser√° de la forma.
                                ùëêùëúùë†ùõº     ‚àíùë†ùëíùëõùõº
                          ùëÖ=[                  ]
                                ùë†ùëíùëõùõº      ùëêùëúùë†ùõº

Para el caso en que Œ±=0, en el que los ejes coordenados de ambos

sistemas coinciden, la matriz R corresponder√° a la matriz unitaria.

En un espacio tridimensional, el razonamiento a seguir es similar, siendo

el OXYZ el sistema de referencia fijo, y el OUVW el solidario al objeto

cuya orientaci√≥n se desea definir, (figura 13). Los vectores unitarios

del sistema OXYZ ser√°n√Æùë• , ùëóùë¶ , ùëòùëß          mientras que           los del OUVW

ser√°n√Æùë¢ , ùëóùë£ , ùëòùë§ Un vector p del espacio podr√° ser referido a cualquiera de

los sistemas de la siguiente manera:

          ùë∑ùíñùíóùíò = [ùíëùíñ , ùíëùíó , ùíëùíò ]ùëª = ùíëùíñ ‚àô ùíäùíñ + ùíëùíó ‚àô ùíãùíó + ùíëùíò ‚àô ùíåùíò

           ùë∑ùíôùíöùíõ = [ùíëùíô , ùíëùíö , ùíëùíõ ]ùëª = ùíëùíô ‚àô ùíäùíô + ùíëùíö ‚àô ùíãùíö + ùíëùíõ ‚àô ùíåùíõ



                                                                             41
   Y al igual que en dos dimensiones, se puede obtener la siguiente

   equivalencia:

                                 ùëÉùë•         ùëÉùë¢
                                 ùëÉ
                                [ ùë¶ ] = ùëÖ [ ùëÉùë£ ]
                                 ùëÉùëß        ùëÉùë§

   D√≥nde:

                              ùëñùë• ùëñùë¢    ùëñùë• ùëóùë£    ùëñùë• ùëòùë§
                         ùëÖ = ( ùë¶ ùëñùë¢
                              ùëó        ùëóùë¶ ùëóùë£    ùëóùë¶ ùëòùë§ )
                              ùëòùëß ùëñùë¢    ùëòùëß ùëóùë£    ùëòùëß ùëòùë§

   es la matriz de rotaci√≥n que define la orientaci√≥n del sistema OUVW con

   respecto al sistema OXYZ, tambi√©n recibe el nombre de matriz de

   cosenos directores y se trata de            una matriz ortonormal, tal que la

   inversa de la matriz R es igual a su transpuestaùëÖ ‚àí1 = ùëÖ ùëá .

   La principal utilidad de esta matriz de rotaci√≥n corresponde a la

   representaci√≥n de la orientaci√≥n de sistemas girados √∫nicamente sobre

   uno de los ejes principales del sistema de referencia.




                Figura 13 Sistema de coordenadas solidarios.

              Fuente: Barrientos., Fundamentos de Rob√≥tica., 1996.

h) La cinem√°tica

Una herramienta fundamental en el dise√±o y control de los manipuladores

es sin duda la cinem√°tica. Un robot manipulador t√≠pico, se caracteriza por

una estructura serial (ciclo abierto) de ligaduras r√≠gidas, denominada

                                                                              42
Cadena Cinem√°tica Abierta. Estas ligaduras est√°n conectadas f√≠sicamente

en puntos espec√≠ficos denominados articulaciones, las cuales pueden tener

movimientos de rotaci√≥n o traslaci√≥n. Cada articulaci√≥n indica un grado de

libertad. En la cadena cinem√°tica abierta, uno de los extremos est√° sujeto a

la base del robot, mientras que el otro est√° libre y puede ser unido a una

herramienta para realizar tareas de ensamble o de manipulaci√≥n de objetos.

El extremo libre de la cadena se conoce con el nombre de elemento

terminal del robot o endeffector.

El estudio del problema de la cinem√°tica directa consiste en que, dado un

manipulador, la posici√≥n y la orientaci√≥n de su elemento terminal pueden

ser determinadas por un conjunto de transformaciones de los valores de los

√°ngulos de sus articulaciones con respecto a un sistema de coordenadas de

referencia. Es as√≠ como el problema de la cinem√°tica directa se reduce a

encontrar una expresi√≥n que relacione el sistema de coordenadas del

elemento terminal con el sistema de coordenadas de referencia.

Para la definici√≥n de esta expresi√≥n es posible seguir la formulaci√≥n de

Denavit- Hartenberg [Barrientos, 1997]. Esta formulaci√≥n permite obtener

una serie de expresiones que determinan la cinem√°tica directa en base a

las caracter√≠sticas del manipulador en estudio. Sin embargo, al implementar

esta formulaci√≥n en el ROBOT se encontraron algunas divergencias en los

resultados. Se opt√≥ por analizar la formulaci√≥n de Denavit-Hartenberg

desde su sus or√≠genes en las matrices de transformaciones homog√©neas, y

utilizar este m√©todo para obtener las expresiones que modelar√≠an la

cinem√°tica directa del manipulador.

ÔÇ∑   Matrices de transformaci√≥n homog√©neas


                                                                         43
Una matriz de transformaci√≥n homog√©nea (T) es una matriz de 4x4 (4

filas, 4 columnas) que permite representar un vector en diferentes

sistemas de coordenadas en el espacio.

Esta matriz de 4x4 est√° constituida por 4 submatrices, tal como se

muestra a continuaci√≥n:

         ùëÖ(3ùëã3) ùëÉ(3ùëã1)      ùëÖùëÇùëáùê¥ùê∂ùêºùëÇùëÅ            ùëáùëÖùê¥ùëÜùêøùê¥ùê∂ùêºùëÇùëÅ
   ùëá=[                 ]=[                                 ]
         ùêπ(1ùëã3) ùëä(1ùëã1)     ùëÉùê∏ùëÖùëÜùëÉùê∏ùê∂ùëáùêºùëâùê¥           ùê∏ùëÜùê∂ùê¥ùêøùê¥ùê∑ùëÇ

         ùëÖ(3ùëã3) ùëÉ(3ùëã1)      ùëÖùëÇùëáùê¥ùê∂ùêºùëÇùëÅ            ùëáùëÖùê¥ùëÜùêøùê¥ùê∂ùêºùëÇùëÅ
   ùëá=(                 )=(                                 )
         ùêπ(1ùëã3) ùëä(1ùëã1)     ùëÉùê∏ùëÖùëÜùëÉùê∏ùê∂ùëáùêºùëâùê¥           ùê∏ùëÜùê∂ùê¥ùêøùê¥ùê∑ùëÇ



La matriz de rotaci√≥n representa la rotaci√≥n espacial de un sistema de

coordenadas. El vector de traslaci√≥n, representa la traslaci√≥n espacial

del mismo sistema de coordenadas. Los t√©rminos de perspectiva y

escalado son colocados para completar la matriz y darle una forma

cuadrada. En aplicaciones rob√≥ticas el termino de perspectiva es un

vector de 3 componentes nulo (0,0,0) mientras que el termino escalado

representa un escalado global igual a la unidad. De estas observaciones,

la matriz de transformaci√≥n en rob√≥tica tiene una forma como esta:

        ùëÖ(3ùëã3) ùëÉ(3ùëã1)     ùëÖùëÇùëáùê¥ùê∂ùêºùëÇùëÅ            ùëáùëÖùê¥ùëÜùêøùê¥ùê∂ùêºùëÇùëÅ
     ùëá=(              )=(                                )
          0       1          0                     1



Esta matriz representara la rotaci√≥n (submatriz de rotaci√≥n) y traslaci√≥n

(submatriz de traslaci√≥n) de un sistema de coordenadas O‚ÄôX‚ÄôY‚ÄôZ

respecto a un sistema de referencia OXYZ.

El uso de matrices de transformaci√≥n homog√©neas nos permite:




                                                                      44
o Representar en una sola expresi√≥n la posici√≥n y orientaci√≥n de un

    sistema de coordenadas que se ha trasladado y girado en el espacio

    respecto a un sistema de referencia.

o Representar un vector con coordenadas en el sistema O‚ÄôX‚ÄôY‚ÄôZ‚Äô, en el

    sistema OXYZ o sistema de referencia.

o Rotar y trasladar un vector con respecto a un sistema de referencia fijo.

o Combinar          traslaciones   y   rotaciones        de   sistemas    consecutivos,

    multiplicando sus matrices de transformaci√≥n correspondiente.

ÔÇ∑   Composici√≥n de matrices de transformaci√≥n homog√©neas

    Un transformaci√≥n compleja, puede descomponerse en la aplicaci√≥n

    consecutiva de transformaciones movimientos simples (giros b√°sicos y

    traslaciones).

    Estos giros b√°sicos y traslaciones son los que constituir√°n la matriz de

    transformaci√≥n       homog√©nea.     Seg√∫n       la    estructura     ya   mostrada,

    procederemos a mostrar la forma de generar las submatrices de rotaci√≥n

    y traslaci√≥n.

o Submatriz de rotaci√≥n

    A manera de explicar la obtenci√≥n de esta submatriz, se empezara por

    representar un subsistema u,v,w que rotara, o se trasladara, con

    respecto a un sistema de referencia fijo X,Y,Z.




                Figura 14Sistemas de coordenadas coincidentes



                                                                                     45
La matriz representativa del subsistema u,v,w ser√° la que se muestra en

la f√≥rmula anterior, en donde Ux representa la componente del vector u

sobre el eje X, Uy la componente sobre el eje Y, y finalmente Uz la

componente sobre el eje Z. De igual manera est√°n representados los

ejes v y w.

La matriz representativa del subsistema u,v,w ser√° la que se muestra

seguidamente, en donde Ux representa la componente del vector u

sobre el eje X, Uy la componente sobre el eje Y, y finalmente Uz la

componente sobre el eje Z. De igual manera est√°n representados los

ejes v y w.

                           ùëàùë•    Vx   Wx
                      ùëá = ( Uy   Vy   Wy)
                            Uz   Vz   Wz

Simplificando la matriz representada anteriormente, para que coincida

con los valores mostrados en los sistemas de coordenadas coincidentes,

se obtiene la matriz representada como sigue:

                             1 0      0
                        ùëá = (0 1      0)
                             0 0      1



La forma que toma la matriz representada se debe a que el vector u se

encuentra √≠ntegramente sobre el eje x, no presentando componentes

proyectadas sobre los otros ejes. De igual manera ocurre con los ejes v

y w.

Tomando como referencia la submatriz de rotaci√≥n que se acaba de

revisar, se procede a representar los posibles movimientos que se

pueden generar, girando alrededor de cada uno de los ejes de

coordenadas independientemente. Estos movimientos se resumen como

                                                                     46
   los giros alrededor del eje X, alrededor del eje Y, y alrededor del eje Z.

   En las Figuras 15, 16, y 17 se representan gr√°fica y matricialmente los

   giros mencionados.



                                                               1   0              0
                                                    ùëá(ùëã, ùõº) = (0 cos ùõº         ‚àí sin ùõº )
                                                               0 sin ùõº          cos ùõº



  Figura 15 Representaci√≥n gr√°fica y matricial de un giro Œ± alrededor del eje X.




                                                                cos ùõΩ      0    sin ùõΩ
                                                    ùëá(ùëå, ùõΩ) = ( 0          1      0 )
                                                               ‚àí sin ùõΩ     0    cos ùõΩ



  Figura 16 Representaci√≥n gr√°fica y matricial de un giro Œ≤ alrededor del eje Y.



                                                               cos ùõæ     ‚àí sin ùõæ     0
                                                    ùëá(ùëç, ùõæ) = ( sin ùõæ     cos ùõæ      0)
                                                                  0         0        1



  Figura 17 Representaci√≥n gr√°fica y matricial de un giro ùú∏alrededor del eje z.

o Submatriz de traslaci√≥n

   Esta submatriz estar√° representada por el vector que une los sistemas

   de coordenadas relacionados, es decir, el que se traslada y el de la

   base.




                                                                                     47
                           ùëÉùë•
                      ùëÉ = (ùëÉùë¶)
                           ùëÉùëß




    Figura 18 Representaci√≥n gr√°fica y matricial de la submatriz de rotaci√≥n.

ÔÇ∑   Representaci√≥n de las Matrices de Rotaci√≥n y Traslaci√≥n seg√∫n el

    Modelo de Matriz de Transformaci√≥n Homog√©nea

    Considerando que estos movimientos definir√°n la posici√≥n del sistema

    de coordenadas con respecto al sistema fijo, ejecutando giros y

    traslaciones espaciales, resultara m√°s eficiente representar estos

    movimientos en una sola expresi√≥n, una matriz de transformaci√≥n

    homog√©nea.

    Para ello, primero se le dan forma a las matrices definidas anteriormente

    de tal manera que pasen a ser matrices cuadradas de 4x4. Para ello, se

    le asignan valores a las submatrices de traslaci√≥n, escalado y

    perspectiva, obteniendo expresiones como las representadas en las

    f√≥rmulas siguientes.

                                1   0            0      0
                                0 cos ùõº       ‚àí sin ùõº   0
                     ùëá(ùëã, ùõº) = (                         )
                                0 sin ùõº        cos ùõº    0
                                0   0            0      1

                                 cos ùõΩ      0 sin ùõΩ     0
                                   0        1   0       0
                     ùëá(ùëå, ùõΩ) = (                          )
                                ‚àí sin ùõΩ     0 cos ùõΩ     0
                                   0        0   0       1

                                cos ùúÉ     ‚àí sin ùúÉ   0   0
                                 sin ùúÉ     cos ùúÉ    0   0
                     ùëá(ùëç, ùúÉ) = (                          )
                                   0         0      1   0
                                   0         0      0   1




                                                                                48
                                 1       0   0 ùëÉùë•
                                 0       1   0 ùëÉùë¶
                              ùëÉ=(                 )
                                 0       0   1 ùëÉùëß
                                 0       0   0 1

Figura 19 Matriz de Transformaci√≥n Homog√©nea representando una traslaci√≥n espacial.

  ÔÇ∑   Localizaci√≥n espacial

      A continuaci√≥n, se definen el n√∫mero de movimientos necesarios para

      determinar la localizaci√≥n espacial de un sistema de coordenadas con

      respecto a otro, en el manipulador de 5 GDL articulado verticalmente.

      Estos movimientos son tres:

  ÔÉò Un giro alrededor del eje z del sistema de la base T(z,Œ∏).

  ÔÉò Una traslaci√≥n espacial (p).

  ÔÉò Un giro para dar la posici√≥n final, girando alrededor de un eje diferente

      de z en el sistema de coordenadas que posee la posici√≥n espacial final.

      Multiplicando las matrices correspondientes a estos movimientos, se

      genera una expresi√≥n que constituye la matriz de transformaci√≥n

      homog√©nea para el sistema que se est√° analizando.

         ùëÄùëéùë°ùëüùëñùëßùëëùëíùë°ùëüùëéùëõùë†ùëìùëúùëüùëöùëéùëêùëñùëúùëõ‚Ñéùëúùëöùëúùëîùëíùëõùëíùëé = ùëá(ùëç, ùúÉ)ùë•ùëÉùë•ùëá(ùëã, ùõº)

      cos ùúÉ    ‚àí sin ùúÉ   0   0   1      0    0   ùëÉùë•    1       0        0        0
      sin ùúÉ     cos ùúÉ    0   0   0      1    0   ùëÉùë¶    0     cos ùõº   ‚àí sin ùõº     0
   =(                         )ùë•(                   )ùë•(                            )
        0         0      1   0   0      0    1   ùëÉùëß    0     sin ùõº    cos ùõº      0
        0         0      0   1   0      0    0    1    0       0        0        1

          cos ùúÉ   ‚àí sin ùúÉ. cos ùõº    sin ùúÉ. sin ùõº    ùëÉùë•. cos ùúÉ + (‚àíùëÉùë¶. sin ùúÉ)
          sin ùúÉ   cos ùúÉ . cos ùõº    ‚àí cos ùúÉ. sin ùõº    ùëÉùë•. sin ùúÉ + ùëÉùë¶. cos ùúÉ
       =(                                                                    )
            0         sin ùõº            cos ùõº                   ùëÉùëß
            0           0                0                     0

  ÔÇ∑   Desarrollo de la cinem√°tica directa

      Para definir la cinem√°tica ser√° necesario contar con un modelo que

      defina la apariencia del manipulador. Este modelo debe mostrar la

      configuraci√≥n que tendr√°, es decir como estar√°n distribuidos los grados


                                                                                       49
    de libertad, la posici√≥n y giro de los actuadores, la longitud de los

    eslabones, etc.

i) Modelo cinem√°tico directo de robots manipuladores

Existen dos problemas fundamentales a resolver en la cinem√°tica del robot

figura 10 el primero de ellos se conoce como el problema cinem√°tico

directo, y consiste en determinar cu√°l es la           posici√≥n y orientaci√≥n del

extremo final del robot, con respecto a un sistema de coordenadas que

toma como referencia, conocidos los valores de las articulaciones y los

par√°metros geom√©tricos de los elementos del robot; el segundo,

denominado problema cinem√°tico inverso, resuelve la configuraci√≥n que

debe adoptar el robot para una posici√≥n y orientaci√≥n del extremo

conocidas.




               Figura 20. Relaci√≥n cinem√°tica inversa y directa.

               Fuente: Barrientos., Fundamentos de rob√≥tica., 1996

Denavit y Hartenberg propusieron un m√©todo sistem√°tico parar describir y

representar la geometr√≠a espacial de los elementos de una cadena

cinem√°tica, y en particular de un robot, con respecto a un sistema de

referencia fijo, reduci√©ndose el problema cinem√°tico directo a encontrar una

matriz de transformaci√≥n homog√©nea 4x4 que relaciona la localizaci√≥n

espacial del extremo del robot con respecto al sistema de coordenadas de

su base.

ÔÇ∑   Modelo cinem√°tico directo del manipulador

                                                                               50
Viene dado por una funci√≥n que permite expresar la posici√≥n y orientaci√≥n

del sistema de referencia objetivo en el espacio cartesiano (operacional o

de la tarea) p en t√©rminos de q:

Siendoùùãun conjunto de funciones no lineales. Conocidas las variables

articulares(entradas), se desea saber d√≥nde est√° el manipulador.

Para construir el modelo directo existen dos alternativas t√≠picas:

ÔÇß   Utilizaci√≥n de relaciones especificas del robot: Consiste en el empleo de

    las relaciones geom√©tricas que puedan establecerse en el robot de que

    se trate.

ÔÇß   M√©todo      general:       Se      trata      de      emplear        matrices   de

    transformaci√≥n     que relacionan sistemas de referencia tal como se ha

    expuesto anteriormente.

ÔÇ∑   Modelo de un robot manipulador con n articulaciones

Un robot articulado puede describirse definiendo cuatro magnitudes

asociadas a cada articulaci√≥n. Una de estas magnitudes es la variable de

la articulaci√≥n y las restantes son par√°metros fijos para cada robot figura 15.




           Figura 21Sistema de coordenadas para localizar un objeto.

                Fuente: Barrientos., Introducci√≥n a la rob√≥tica., 2006




                                                                                    51
        La grafica anterior muestra estos par√°metros que permiten definir una

        representaci√≥n de las relaciones de traslaci√≥n y rotaci√≥n entre los

        enlaces adyacentes. A esta relaci√≥n se le denomina representaci√≥n de

        Denavit-Hartenberg.

 ÔÇ∑      Resoluci√≥n del problema cinem√°tico directo mediante matrices de

        transformaci√≥n homog√©nea.

 La resoluci√≥n del problema cinem√°tico directo consiste en encontrar las

 relaciones que permiten conocer la localizaci√≥n espacial del extremo del

 robot a partir de los valores de sus coordenadas articulares.

 La obtenci√≥n de estas relaciones no es en general complicada, siendo

 incluso en ciertos casos (robot de pocos GDL) f√°cil de encontrar mediante

 simples consideraciones geom√©tricas. Por ejemplo, para el caso de un robot

 de 2GDL figura 21, es f√°cil comprobar que:

 Para robots de m√°s grados de libertad puede plantearse un m√©todo

 sistem√°tico basado en la utilizaci√≥n de las matrices de transformaci√≥n

 homog√©nea.

             ùëêùëúùë†ùúÉ ‚àíùë†ùëíùëõùúÉ   0   0 1     0   0 0 1     0 0 ùëé 1      0      0    0
ùëñ ‚àí1
       ùê¥ùëñ = [ùë†ùëíùëõùúÉ ùëêùëúùë†ùúÉ    0   0] [0   1   0 0] [0   1 0 0] [ 0 ùëêùëúùë†ùõº   ‚àíùë†ùëíùëõùõº 0]
                 0 0      1   0 0     0   1 ùëë 0     0 1 0 0 ùë†ùëíùëõùõº      cos ùõº 0
                 0 0      0   1 0     0   0 1 0     0 0 1 0      0      0   1

                      ùëêùëúùë†ùúÉ  ‚àíùë†ùëíùëõùúÉ         ùë†ùëíùëõùõºùë†ùëíùëõùúÉ ùëéùëêùëúùë†ùúÉ
                   = [ùë†ùëíùëõùúÉ ùëêùëúùë†ùõºùëêùëúùë†ùúÉ       ‚àíùë†ùëíùëõùõºùëêùëúùë†ùúÉ ùëéùë†ùëíùëõùúÉ]
                         0 ùë†ùëíùëõùõº               cos ùõº ùëë
                         0   0                  0   1

 En general, un robot de n grados de libertad est√° formado por n eslabones

 unidos por n articulaciones, de forma que cada par articulaci√≥n-eslab√≥n

 constituye un grado de libertad. A cada eslab√≥n se le puede asociar un

 sistema de referencia solidario a √©l y, utilizando las transformaciones

 homog√©neas, es posible representar las rotaciones y traslaciones relativas

                                                                           52
entre los distintos eslabones que componen el robot. Normalmente, la

matriz de transformaci√≥n homog√©nea que representa la posici√≥n y

orientaci√≥n relativa entre los sistemas asociadas a dos eslabones
                                                                    ‚àí1
consecutivos del robot se suele denominar matriz ùëñ ùê¥ùëñ .As√≠ pues 0ùê¥1 ,

describe la posici√≥n y orientaci√≥n del sistema de referencia solidario al

primer eslab√≥n con respecto al sistema de referencia a la base, 1ùê¥2 describe

la orientaci√≥ny posici√≥n del segundo eslab√≥n respecto del primero, etc. Del
                                  0
mismo modo, denominando               ùê¥ùëò a las matrices resultantes del producto de

las matrices ùëñ‚àí1ùê¥ùëñ con i desde 1 hasta k, se puederepresentarde forma total o

parcial la cadena cinem√°tica que forma el robot. As√≠, por ejemplo, la

posici√≥n y orientaci√≥n del sistema solidario con el segundo eslab√≥n del

robot con respecto al sistema de coordenadas de la base se puede

expresar mediante la matriz 0ùê¥2 :




                   Figura 22 Robot planar de 2 grados de libertad.

                  Fuente: Barrientos., Introducci√≥n a la rob√≥tica., 2006

                                      0
                                          ùê¥2 = 0ùê¥1 1ùê¥2

De manera an√°loga, la matriz representa la localizaci√≥n del sistema del

tercer eslab√≥n:
                                  0
                                   ùê¥3 = 0ùê¥1 1ùê¥2 2ùê¥3



                                                                                53
Cuando se consideran todos los grados de libertad, a la matriz 0ùê¥ùëõ se le

suele denominar T. As√≠ dado un robot de seis grados de libertad, se tiene

que la posici√≥n y orientaci√≥n del eslab√≥n final vendr√° dada por la matriz T:

                     ùëá = 0ùê¥6 = 0ùê¥1 1ùê¥2 2ùê¥3 3ùê¥4 4ùê¥5 5ùê¥6

Aunque para describir la relaci√≥n que existe entre dos elementos contiguos

se puede hacer      uso de cualquier sistema de referencia ligado a cada

elemento, la forma habitual que se suele utilizar en rob√≥tica es la

representaci√≥n de Denavit-Hartemberg (D-H).

Estas transformaciones b√°sicas consisten en una sucesi√≥n de rotaciones y

traslaciones que permiten relacionar el sistema de referencia del elemento i

con el sistema del elemento i-1. Las transformaciones en cuesti√≥n son las

siguientes(es importante recordar que el paso del sistema {ùëÜùëñ‚àí1 } al {ùëÜùëñ }

mediante    estas   cuatro   transformaciones   esta   garantizado    solo     si

lossistemas {ùëÜùëñ‚àí1 } y {ùëÜùëñ } han sido definidos de acuerdo a unas normas

determinadas.

ÔÇ∑   Algoritmo de Denavit-Hartemberg para la obtenci√≥n del modelo

    cinem√°tico directo

Denavit y Hartemberg propusieron en 1955 un m√©todo matricial que permite

establecer de manera sistem√°tica un sistema de coordenadas {ùëÜùëñ } ligado a

cada eslab√≥n i de unacadena articulada, pudi√©ndose determinar a

continuaci√≥n las adecuaciones cinem√°ticas de la cadena completa.

D-H 1. Numerar los eslabones comenzando con 1 (primer eslab√≥n m√≥vil de

la cadena) y acabando con n (√∫ltimo eslab√≥n m√≥vil). Se enumerara como

eslab√≥n 0 a la base fija del robot.




                                                                               54
D-H 2. Numerar cada articulaci√≥n comenzando por 1 (la correspondiente al

primer grado de libertad) y acabando en n.

D-H 3. Localizar el eje de cada articulaci√≥n. Si esta es rotativa, el eje ser√°

su propio eje de giro. Si es prism√°tica, ser√° el eje a lo largo del cual se

produce el desplazamiento.

D-H 4. Para i de 0 a n-1 situar el eje sobre el eje de la articulaci√≥n i+1.

D-H 5. Sit√∫a el origen del sistema de la baseùëÜ0 en cualquier punto del ejeùëß0 ,

los ejesùë•0 eùë¶0 sesituaran del modo que formen un sistema dextr√≥giro con ùëß0 .

D-H 6.Para i de 1 a n-1, situar el sistemaùëÜùëñ en laintersecci√≥nùëßùëñ del ejecon la

l√≠nea normal aùëßùëñ‚àí1yùëßùëñ . Si ambos ejes se cortasen se situar√≠aùë†ùëñ en el punto de

corte. Si fuesen paralelos ùë†ùëñ se situar√≠anen la articulaci√≥n i+1.

D-H 7. Situarùë•ùëñ en la l√≠nea normal com√∫n a ùëßùëñ‚àí1 y ùëßùëñ .

D-H 8. Situar de modo que forme un sistema dextr√≥giro con ùë•ùëñ y ùëßùëñ .

D-H 9. Situar el sistema {ùë†ùëõ } en el extremo del robot de modo que coincida

con la direcci√≥n de ùëßùëõ‚àíùëñ y ùë•ùëõ sea normal a ùëßùëõ‚àí1 y ùëßùëõ .

D-H 10. ObtenerùúÉùëñ como el √°ngulo que hay que girar en torno a ùëßùëõ‚àí1 para

que ùë•ùëñ‚àí1 y ùë•ùëñ queden paralelos.

D-H11. Obtenerùëëùëñ como la distancia medida a lo largo de, que habr√≠a que

desplazar ùë†ùëñ‚àí1 para que ùë•ùëñ y ùë•ùëñ‚àí1 quedasen alineados.

D-H12. Obtenerùõºùëñ como la distanciamedidaa lo largo de(que ahora

coincidir√≠a conùë•ùëñ‚àí1 ) que habr√≠a que desplazar el nuevo {ùë†ùëñ‚àí1 } para que su

origen coincidiese con{ùë†ùëñ }.

D-H 13. Obtenerùõºùëñ como el √°ngulo que habr√≠a que girar en torno a ùë•ùëñ (que

ahora coincidir√≠a con ùë•ùëñ‚àí1 para que el nuevo {ùë†ùëñ‚àí1 } coincidiese totalmente

con {ùë†ùëñ }.

                                                                              55
                                                         ùëñ ‚àí1
 D-H 14. Obtener las matrices de transformaci√≥n                 ùê¥ùëñ definidas.

 D-H 15. Obtener la matriz de transformaci√≥n que relaciona el sistema de la

 base con el del extremo del robot ùëá = 0ùê¥1 , 1ùê¥2 , 2ùê¥3 , ‚Ä¶ , ùëõ‚àí1ùê¥ùëõ .

 D-H 16. La matriz T define la orientaci√≥n (sub matriz de rotaci√≥n) y posici√≥n

 (submatriz de traslaci√≥n) del extremo referido a la base en funci√≥n de las n

 coordenadas articulares figura 22.




                  Figura 23 Representaci√≥n par√°metros de D_H

                Fuente: Barrientos., Introducci√≥n a la rob√≥tica., 2006

 Los cuatro par√°metros de D-H (ùúÉùëñ , ùëëùëñ , ùëéùëñ , ùõºùëñ ) dependen √∫nicamente de las

 caracter√≠sticas geom√©tricas de cada eslab√≥n y de las articulaciones que le

 unen conel anterior y siguiente:

ùúÉùëñ   Es el √°ngulo que forman los ejes ùë•ùëñ‚àí1 y ùë•ùëñ medido en un plano

     perpendicular al eje ùëßùëñ‚àí1 , utilizando la regla de la mano derecha. Se

     trata de un par√°metro variable en articulaciones giratorias.

ùëëùëñ   Es la distancia a lo largo del eje ùëßùëñ‚àí1 desde el origen del sistema de

     coordenadas (ùëñ ‚àí 1) √©simo hasta la intersecci√≥n del eje ùëßùëñ‚àí1 con el

     ejeùë•ùëñ se trata de un par√°metro variable en articulaciones prism√°ticas.

ùëéùëñ   Es la distancia a lo largo del eje ùë•ùëñ ,que va desde la intersecci√≥n del eje

     ùëßùëñ‚àí1 con el eje hasta el origen del sistema i-√©simo, en el caso de




                                                                                56
     articulaciones giratorias.En el caso de articulaciones prism√°ticas, se

     calcula como la distancia m√°s corta entre los ejes ùëßùëñ‚àí1 y ùëßùëñ .

ùõºùëñ   Es el √°ngulo de separaci√≥n del eje ùëßùëñ‚àí1 y el eje ùëßùëñ , medido en un plano

     perpendicular al eje ùë•, utilizando la regla de la mano derecha.



 Una vez obtenidos los par√°metros D-H, el c√°lculo de las relaciones entre los

 eslabones consecutivos del robot es inmediato, ya que vienen dadas por las

 matrices A, que se calculan seg√∫n la expresi√≥n general. Las relaciones

 entre eslabones no consecutivos vienen dadas por las matrices T que,

 como ya se coment√≥ anteriormente, se obtienen como producto de un

 conjunto de matrices A. Obtenida la matriz T, esta expresara la orientaci√≥n

 (sub matriz (3x3) de rotaci√≥n) y posici√≥n (sub matriz (3x1) de traslaci√≥n) del

 extremo del robot en funci√≥n de sus coordenadas articulares, con lo que

 quedara resuelto el problema cinem√°tico directo.




                            Figura 24 Robot cil√≠ndrico

                Fuente: Barrientos., Introducci√≥n a la rob√≥tica., 2006




                                                                            57
             Articulaci√≥n         ùúÉùëñ             ùëëùëñ            ùëéùëñ          ùõºùëñ
                   1              ùëû1             ùëô1             0          0
                   2              90            ùëë2              0          90
                   3               0            ùëë3              0          0
                   4              ùëû4             ùëô4             0          0

            Tabla 2 Par√°metros D-H para el robot cil√≠ndrico de la figura 18.

                  Fuente: Barrientos., Introducci√≥n a la rob√≥tica., 2006

   2.2.2.    Redes inal√°mbricas

El t√©rmino red inal√°mbrica (Wireless network en ingl√©s) es un t√©rmino que se

utiliza en inform√°tica para designar la conexi√≥n de nodos sin necesidad de una

conexi√≥n f√≠sica (cables), √©sta se da por medio de ondas electromagn√©ticas. La

transmisi√≥n y la recepci√≥n se realizan a trav√©s de puertos.

   a) Espectro electromagn√©tico

El espectro electromagn√©tico es el rango de todas las radiaciones

electromagn√©ticas posibles. El espectro de un objeto es la distribuci√≥n

caracter√≠stica de la radiaci√≥n electromagn√©tica de ese objeto.

El espectro electromagn√©tico se extiende desde las bajas frecuencias usadas

para la radio moderna (extremo de la onda larga) hasta los rayos gamma

(extremo de la inda corta), que cubren longitudes de onda de entre miles de

kil√≥metros y la fracci√≥n del tama√±o de un √°tomo. Se piensa que el l√≠mite de la

longitud de onda corta esta en las cercan√≠as de la longitud de Planck, mientras

que el l√≠mite de la longitud de la inda larga es el tama√±o del universo en s√≠,

acune en principio el espectro sea infinito y continuo.

El espectro electromagn√©tico cubre la energ√≠a de ondas electromagn√©ticas que

tienen longitudes de onda diferentes. Las frecuencias de 30 Hz y mas bajas

pueden ser producidas por ciertas nebulosas estelares y so importantes para



                                                                                58
su estudio. Se han descubierto frecuencias tan altas como 2.9 ‚àó 1027 Hz a partir

de fuentes astrof√≠sicas.

La energ√≠a electromagn√©tica en una longitud de onda particular Œª (en el vacio)

tiene una frecuencia asociada f y una energ√≠a fot√≥nica E. As√≠, el espectro

electromagn√©tico puede expresarse en t√©rminos de cualquiera de estas tres

variables que est√°n relacionadas mediante ecuaciones.

De este modo, las ondas electromagn√©ticas de alta frecuencia tienen longitud

de onda corta y energ√≠a alta; las ondas de frecuencia baja tienen longitud de

onda larga y energ√≠a baja.

Las longitudes de onda de la radiaci√≥n electromagn√©tica, sin importar el medio

por el que viajen, son, por lo general, citadas en t√©rminos de longitud de onda

en el vac√≠o, aunque no siempre se declara expl√≠citamente.

Por lo general, la radiaci√≥n electromagn√©tica se clasifica por la longitud de

onda; ondas de radio, microondas, infrarroja y regi√≥n visible (luz, rayos

ultravioleta, rayos X y rayos gamma)




                           Figura 25 Espectro electromagn√©tico

        Fuente: http://especptroelectromagnetico.blogspot.com/2007/04/el-espectro-

                                   electromagntico.html



                                                                                     59
   b) Protocolos de estandarizaci√≥n

IEEE 802.11, est√°ndar de redes inal√°mbricas en una red de √°rea local o WLAN

(Wireless Local Area Network) para dispositivos con certificaci√≥n Wi-Fi

(Wireless Fidelity), se trata de frecuencias incluidas en la banda ISM (Industrial,

Scientific and Medical), bandas reservadas internacionalmente para su uso no

comercial de radiofrecuencia, dentro de dicho est√°ndar existen categor√≠as:

IEEE 802.11a, con un rendimiento total es de 54 Mbps, este est√°ndar provee

hasta ocho canales de radio en la banda de frecuencia de 5 GHz, posee una

modulaci√≥n tipo OFDM.

IEEE 802.11b, con un rendimiento total es de 11 Mbps, se encuentra en la

frecuencia de 2.4 GHz, posee una modulaci√≥n DSSS.

IEEE 802.11g, con un rendimiento total de 54 Mbps, est√° en el rango de 2.4

GHz con una modulaci√≥n OFDM, es compatible con dispositivos que admiten el

est√°ndar IEEE 802.11b.

IEEE 802.11n, con un rendimiento que va desde 100 Mbps a 600 Mbps, cuenta

con una modulaci√≥n MIMO.

IEEE 802.11ac, desde enero de 2014, tiene un rendimiento de hasta 1Gbps,

dentro de la banda de 5GHz, con flujos MIMO y modulaci√≥n de alta densidad

256 QAM.

IEEE 802.15.1, est√°ndar de redes inal√°mbricas para redes personales o WPAN

(Wireless Personal Area Network), para dispositivos con certificaci√≥n Bluetooth,

tambi√©n incluidas en la banda ISM.

IEEE 802.15.4, est√°ndar de redes inal√°mbricas para redes personales o

WPAN, para m√≥dulos de radio, se puede tomar en cuenta los siguientes:




                                                                                60
Protocolos MIWI, con tasas de transferencias bajas aproximadamente de

250Kbps, con distancias m√°ximas de 100 metros sin obst√°culos, desarrollado

por Microchip Technology, proyecto de c√≥digo abierto con la √∫nica limitaci√≥n de

la obligaci√≥n de utilizar microcontroladores de Microchip Technology y su

transceptor MRF24J4, capaz de formar redes punto a punto, de estrella o

malla; capaz de tener 8 coordinadores como m√°ximo por red, y cada uno de

estos 127 hijos, haciendo un total de 1024 nodos por red.

Protocolos ZIGBEE, cuyo objetivo es el de aplicaciones que requieren

comunicaciones seguras con baja tasa de env√≠o de datos y maximizaci√≥n de la

vida √∫til de sus bater√≠as, es decir, cuenta con claves de seguridad de 128 bits,

hasta 25 Kbps y de bajo consumo de energ√≠a.

Por considerar otros que corresponden al presente protocolo se pueden hacer

menci√≥n a:

   ÔÇß   ZIGBIT de Atmel

   ÔÇß   ZICM* de California Eastern Laboratories

   ÔÇß   deRFmega128-22M00 de Dresden Elektronik

   ÔÇß   EMB-ZRF231PA, EMB-Z2530PA de Embit

   ÔÇß   JN5139-xxx-M0x de Jennic

   ÔÇß   VersaNode 210, VersaNode 220 de Nivis LLC.

   ÔÇß   Pan45xx de Panasonic

   ÔÇß   RC220x de Radiocrafts

   ÔÇß   ZMN24xx de RF Monolithics

   ÔÇß   MXR-EM20 de Radios Inc.

   ÔÇß   Pixie, Pixie Lite de FlexiPanel Ltd.

   ÔÇß   ETRXxxx de Telegesis Ltd.


                                                                             61
   ÔÇß     ProBee de Sena Technologies

Z357PA10 de MMB Research, entre otros cuya producci√≥n se descontinu√≥.

IEEE 802.16, desarrollada como alternativa de red inal√°mbrica al acceso de

banda ancha DSL, y cable, y una forma de conectar nodos Wi-FI en una red de

√°rea metropolitana (MAN), con un radio de acci√≥n de 50 Km., dentro de dicho

est√°ndar existen categor√≠as:

IEEE 802.16; 10-66 GHz, modulaci√≥n QAM

IEEE 802.16a; 2-11 GHz, modulaci√≥n OFDM y OFDMA

IEEE 802. 16b/c; Interoperable con la especificaci√≥n de certificaciones.

IEEE 802.16e; a√±ade movilidad

   c) Ventajas de las redes inal√°mbricas

Como se vio en el √≠tem anterior, las redes inal√°mbricas est√°n basada en

est√°ndares internacionales comprobados a nivel de industria de transmisi√≥n de

datos.

Instalaci√≥n simple, ya que debe ser del tipo plug and play, tomando minutos su

instalaci√≥n.

Robusta y confiable, consideradas en especial aquellas que tienen alcances no

mayores a 100 metros.

Escalabilidad, pues los concentradores inal√°mbricos pueden soportar sin

problemas 60 usuarios simult√°neamente, lo que permite expandir su red con

efectivos de costos.

Facilidad de uso, ya que permite movilidad, lo que no se dan en redes

cableadas.




                                                                            62
Servidor web para una administraci√≥n m√°s f√°cil, un usuario simplificara la

administraci√≥n de su red inal√°mbrica si selecciona un punto de acceso con un

servidor web incorporado.

Seguridad, si el usuario escoge una red que otorgue m√∫ltiples niveles de

seguridad, encriptaci√≥n y autenticaci√≥n de usuarios.

Existen aplicaciones que detectan localidades, para poder tener acceso a

concentradores pr√≥ximos y permanecer conectado.

Costo de propiedad reducido, mientras que el costo de inversi√≥n inicial

requerida para una red inal√°mbrica puede ser m√°s alta que el costo en

hardware de una red cableada, la inversi√≥n de toda la instalaci√≥n y el costo

durante el ciclo de vida pueden ser significativamente inferiores, ya que en

ambientes din√°micos se requieren movimientos frecuentes, lo que abarata los

costos debido a que no se cuenta con una instalaci√≥n f√≠sica.

F√°cil configuraci√≥n para el usuario, para esto solo basta con tener en cuenta

los c√≥digos de acceso a la red inal√°mbrica.

   d) Desventajas de las redes inal√°mbricas

Interferencias, se pueden dar por tel√©fonos inal√°mbricos que operen en la

misma frecuencia, tambi√©n puede ser por redes inal√°mbricas cercanas, o

inclusive por otros equipos conectados en la misma red.

Seguridad, en una red cableada es necesario tener acceso al medio que

transmite la informaci√≥n mientras que en la red inal√°mbrica el medio de

transmisi√≥n es el aire.

   ÔÇ∑   M√≥dulos XBEE

   El presente proyecto de investigaci√≥n trata de una red ZIGBEE para el

   control y monitoreo de un brazo rob√≥tico, por lo que en el apartado redes


                                                                               63
inal√°mbricas se dar√° especial √©nfasis en la red en menci√≥n.

XBee es el nombre comercial de DIGI INTERNACIONAL, para una familia

de m√≥dulos de radio compatibles con factor de forma. Las primeras radio

Xbee se introdujeron el a√±o 2005.

Los m√≥dulos XBee puede ser utilizados con el m√≠nimo de cuatro numero de

conexiones, potencia (3.3v), planta, datos de entrada y datos de salda, con

otras conexiones adicionales como Reset, Sleep.

A partir de 2010 muchos m√≥dulos XBee constan de un control de flujo de

E/S, A/D y l√≠neas indicadoras construidas en una versi√≥n XBee programable

con un procesador adicional.

o Redes ZIGBEE

   ZIgBee es el nombre de la especificaci√≥n de un conjunto de protocolos

   de alto nivel de comunicaci√≥n inal√°mbrica para su utilizaci√≥n con

   radiodifusi√≥n digital de bajo consumo, basada en el est√°ndar IEEE

   802.15.4 de redes inal√°mbricas de √°rea personal (WPAN). Su objetivo

   son las aplicaciones que requieren comunicaciones seguras con baja

   tasa de env√≠o de datos y maximizaci√≥n de la vida √∫til de sus bater√≠as.

   Por lo visto anteriormente, la relaci√≥n entre IEEE 802.15.4 y ZigBee es

   parecida a la existente entre IEEE 802.11 y Wi-Fi Alliance. La

   especificaci√≥n 1.0 de ZigBee se aprob√≥ el 14 de diciembre de 2004 y

   est√° disponible a miembros del grupo de desarrollo (ZigBee Alliance). Un

   primer nivel de suscripci√≥n, denominado adopter, permite la creaci√≥n de

   productos para su comercializaci√≥n adoptando la especificaci√≥n de 3500

   d√≥lares anuales. Esta especificaci√≥n est√° disponible al p√∫blico para fines

   no comerciales.


                                                                            64
    ZigBee utiliza la banda ISM para usos industriales, cient√≠ficos y m√©dicos

    en concreto 868 MHz en Europa, 915 en Estados Unidos y 2.4 GHz en

    todo el mundo. Sin embargo, a la hora de dise√±ar dispositivos, las

    empresas optaran pr√°cticamente siempre por la banda de 2.4 GHz, por

    ser libre en todo el mundo. El desarrollo de la tecnolog√≠a se centra en la

    sencillez y el bajo costo mas que otras redes inal√°mbricas semejantes

    de la familia WPAN. El nodo ZigBee mas completo requiere en teor√≠a

    cerca del 10% del hardware de un nodo Wi-Fi t√≠pico, esta cifra baja al

    2% para los nodos m√°s sencillos.

o Clasificaci√≥n de nodos ZIGBEE

    Se definen tres tipos distintos de m√≥dulos XBee, seg√∫n su papel en la

    red:

ÔÇß   Coordinador ZigBee, (ZigBee Coordinator, ZC). El tipo de dispositivo

    m√°s completo. Debe existir al menos un ZC por red. Sus funciones son

    las de encargarse de formar y controlar la red, es decir, es el ZC es el

    √∫nico de los nodos que puede crear una red ZigBee, maneja las

    direcciones, y la auto-regeneraci√≥n y los caminos que debe seguir los

    dispositivos para conectarse entre ellos.

ÔÇß   Router   ZigBee,   (ZigBee    Router,   ZR).   Interconecta   dispositivos

    separados en la topolog√≠a de la red, a partir de estar unido a una red

    formada, adem√°s de ofrecer un nivel de aplicaci√≥n para la ejecuci√≥n de

    c√≥digo y configuraci√≥n del usuario.

ÔÇß   El ZR sirve de intermediario entre nodos distantes, y resaltando que su

    uso es opcional (si no hay nodos distantes, su uso se puede obviar).




                                                                            65
ÔÇß   Dispositivo terminal, (ZigBee End Device, ZED). Se trata de una versi√≥n

    simplificada de un router, ya que posee la funcionalidad necesaria para

    comunicarse con su nodo padre (el coordinador o un router, para

    conectarse a una red ZigBee), pero no puede transmitir informaci√≥n

    destinada a otros dispositivos XBee. De esta forma, este tipo de nodo,

    puede trabajar intermitentemente, pudiendo estar dormido la mayor

    parte del tiempo, aumentando la vida media de sus bater√≠as.




             Figura 26 Red ZigBee, de acuerdo a su papel en la red

    Adicionalmente se definen dos tipos distintos de m√≥dulos Xbee, seg√∫n

    su funcionalidad:

    Dispositivo de funcionalidad completa (FFD): Tambi√©n conocidos como

    nodo activo. Es capaz de recibir mensajes en formato 802.15.4. Gracias

    a la memoria adicional y a la capacidad de computar, puede funcionar

    como Coordinador o Router ZigBee, o puede ser usado en dispositivos

    de red que act√∫en de interfaz con los usuarios.

    Dispositivo de funcionalidad reducida (RFD): Tambi√©n conocido como

    nodo pasivo. Tiene capacidad y funcionalidad limitadas (especificada en


                                                                         66
    el est√°ndar) con el objetivo de conseguir un bajo coste y una gran

    simplicidad. B√°sicamente, son los sensores/actuadores de la red.

    Un nodo ZigBee (tanto activo como pasivo) reduce su consumo gracias

    a que puede permanecer dormido la mayor parte del tiempo (incluso

    muchos d√≠as seguidos). Cuando se requiere su uso, el nodo ZigBee es

    capaz de despertar en un tiempo √≠nfimo, para volverse a dormir cuando

    deje   de   ser    requerido.   Un    nodo    cualquiera       despierta   en

    aproximadamente 15 ms. Adem√°s de este tiempo, se muestran otras

    medidas de tiempo de funciones comunes:

    Nueva enumeraci√≥n de los nodos esclavo (por parte del coordinador):

    aproximadamente 30 ms.

    Acceso al canal entre un nodo activo y uno pasivo: aproximadamente 15

    ms.

o Protocolo ZigBee

El protocolo ZigBee posibilita tres funciones importantes en una red:

ÔÇß   Ruteo, posibilita el reenv√≠o de mensajes entre m√≥dulos distantes.

ÔÇß   Creaci√≥n de redes Ad Hoc, instant√°neamente sin intervenci√≥n humana

    (espont√°neas)

ÔÇß   Auto Regeneraci√≥n, identificaci√≥n autom√°tica de nodos y rutas faltantes,

    reconfiguraci√≥n de rutas.

o Topolog√≠a

ZigBee permite tres topolog√≠as de red:

ÔÇß   Topolog√≠a en estrella: el coordinador se sit√∫a en el centro.

ÔÇß   Topolog√≠a en √°rbol: el coordinador ser√° la ra√≠z del √°rbol.




                                                                               67
ÔÇß   Topolog√≠a de malla: al menos uno de los nodos tendr√° m√°s de dos

    conexiones.

La topolog√≠a m√°s interesante (y una de las causas por las que parece que

puede triunfar ZigBee) es la topolog√≠a de malla. √âsta permite que si, en un

momento dado, un nodo del camino falla y se cae, pueda seguir la

comunicaci√≥n entre todos los dem√°s nodos debido a que se rehacen todos

los caminos. La gesti√≥n de los caminos es tarea del coordinador.

o Estrategias de conexi√≥n de los dispositivos en un red ZigBee

Las redes ZigBee han sido dise√±adas para conservar la potencia en los

nodos ‚Äòesclavos‚Äô. De esta forma se consigue el bajo consumo de potencia.

La estrategia consiste en que, durante mucho tiempo, un dispositivo

"esclavo" est√° en modo "dormido", de tal forma que solo se "despierta" por

una fracci√≥n de segundo para confirmar que est√° "vivo" en la red de

dispositivos de la que forma parte. Esta transici√≥n del modo "dormido" al

modo "despierto" (modo en el que realmente transmite), dura unos 15ms, y

la enumeraci√≥n de "esclavos" dura alrededor de 30ms, como ya se ha

comentado anteriormente.

En las redes Zigbee, se pueden usar dos tipos de entornos o sistemas:

Con balizas; es un mecanismo de control del consumo de potencia en la

red. Permite a todos los dispositivos saber cu√°ndo pueden transmitir. En

este modelo, los dos caminos de la red tienen un distribuidor que se

encarga de controlar el canal y dirigir las transmisiones. Las balizas que dan

nombre a este tipo de entorno, se usan para poder sincronizar todos los

dispositivos que conforman la red, identificando la red dom√≥tica, y

describiendo la estructura de la "supertrama". Los intervalos de las balizas


                                                                           68
son asignados por el coordinador de red y pueden variar desde los 15ms

hasta los 4 minutos.

Este modo es m√°s recomendable cuando el coordinador de red trabaja con

una bater√≠a. Los dispositivos que conforman la red, escuchan a dicho

coordinador durante el "balizamiento" (env√≠o de mensajes a todos los

dispositivos -broadcast-, entre 0,015 y 252 segundos). Un dispositivo que

quiera intervenir, lo primero que tendr√° que hacer es registrarse para el

coordinador, y es entonces cuando mira si hay mensajes para √©l. En el caso

de que no haya mensajes, este dispositivo vuelve a "dormir", y se despierta

de acuerdo a un horario que ha establecido previamente el coordinador. En

cuanto el coordinador termina el "balizamiento", vuelve a "dormirse".

Sin balizas; se usa el acceso m√∫ltiple al sistema Zigbee en una red punto a

punto cercano. En este tipo, cada dispositivo es aut√≥nomo, pudiendo iniciar

una conversaci√≥n, en la cual los otros pueden interferir. A veces, puede

ocurrir que el dispositivo destino puede no o√≠r la petici√≥n, o que el canal est√©

ocupado.

Este sistema se usa t√≠picamente en los sistemas de seguridad, en los

cuales sus dispositivos (sensores, detectores de movimiento o de rotura de

cristales), duermen pr√°cticamente todo el tiempo (el 99,999%). Para que se

les tenga en cuenta, estos elementos se "despiertan" de forma regular para

anunciar que siguen en la red. Cuando se produce un evento (en nuestro

sistema    ser√°   cuando     se   detecta    algo),   el   sensor   "despierta"

instant√°neamente y transmite la alarma correspondiente. Es en ese

momento cuando el coordinador de red, recibe el mensaje enviado por el




                                                                             69
   sensor, y activa la alarma correspondiente. En este caso, el coordinador de

   red se alimenta de la red principal durante todo el tiempo.

   2.3.        HIPOTESIS DE LA INVESTIGACION

Se desarrollar√° un prototipo de brazo rob√≥tico en Autodesk Inventor, para

implementarlo f√≠sicamente con materiales ligeros y resistentes, el cual mediante

la programaci√≥n de una interfaz en LabView pueda simular movimientos a

escala    de   automatismos    industriales,    que   trabajara   por   medio     de

comunicaciones     inal√°mbricas      en   el   est√°ndar   IEEE    802.15.4,   √≥   el

correspondiente    a   las   redes    ZigBee,    mediante   un    microcontrolador

PIC16F877A, con la finalidad de emular labores de riesgo industriales,

manipulaci√≥n de objetos o de precisi√≥n.




                                                                                  70
CAP√çTULO III: METODO DE LA INVESTIGACION




                                           71
METODO DE LA INVESTIGACION


   3.1.      VARIABLES DE LA INVESTIGACION

La hip√≥tesis general planteada para el proyecto es:

‚ÄúDesarrollar y construir el m√≥dulo de entrenamiento de un brazo rob√≥tico de

cinco grados de libertad, dise√±ado en una escala de 1 a 100, implementado en

LabView monitorizado mediante redes ZigBee, para emular tareas de

paletizaci√≥n, tanto en modo manual como en modo autom√°tico.‚Äù

De dicha hip√≥tesis se obtienen las siguientes variables:

   a) Variable independiente:

   ÔÇß   Dise√±o e implementaci√≥n de un brazo rob√≥tico.

   ÔÇß   Factor humano en el proceso de implementaci√≥n

   b) Variable dependiente:

   ÔÇß   Paletizado de objetos

   ÔÇß   Redes inal√°mbricas

   ÔÇß   Programaci√≥n orientada a objetos

   ÔÇß   Servomotores

   ÔÇß   Voltajes

   3.2.      METODOLOGIA DE INVESTIGACION

Inductivo-deductivo

   3.3.      TIPO DE INVESTIGACION

La presente investigaci√≥n es de tipo aplicativo.

   3.4.      NIVEL DE INVESTIGACION

Se trata de un proyecto de tesis de nivel experimental, debido a la complejidad

del proyecto en s√≠, as√≠ como la eficacia y la eficiencia alcanzada durante el

desarrollo del mismo.

                                                                             72
   3.5.      FUENTES DE RECOLECCION DE DATOS

Medidas experimentales y simulaciones, as√≠ como los conocimientos previos al

desarrollo del proyecto de investigaci√≥n.

   3.6.      ANALISIS E INTERPRETACION DE DATOS

Para el desarrollo del presente proyecto de investigaci√≥n se recurrir√° a un

an√°lisis descriptivo para la obtenci√≥n de resultados previos, lo que servir√° para

formular una conclusi√≥n parcial.

Dichas conclusiones obtenidas servir√°n para verificar la hip√≥tesis.

Posteriormente la interpretaci√≥n de los datos permitir√° comparar los resultados

obtenidos con los resultados de otras investigaciones de la misma √≠ndole de

relaci√≥n al presente tema.




                                                                              73
CAP√çTULO IV: CARACTERIZACION DEL AREA DE

             INVESTIGACION




                                           74
CARACTERIZACION DEL AREA DE INVESTIGACION


   4.1.        UBICACI√ìN GEOGRAFICA DE LA PROVINCIA DE PUNO




                             Figura 27 Mapa distrital de Puno

Fuente: http://e-callao.net/2013/02/ejecutivo-declara-en-emergencia-distritos-en-puno-huanuco-

                        y-huancavelica-ante-riesgo-de-deslizamientos/




            Figura 28 Croquis de la Universidad Nacional del Altiplano - Puno

          Fuente: https://www.google.com.pe/maps/@-15.8239867,-70.0153836,16z

La concepci√≥n inicial del presente proyecto se dio a ra√≠z de proyectos en el

√°rea de rob√≥tica, adem√°s de la significancia a nivel de la industria de
                                                                                           75
manipuladores rob√≥ticos, surgidos anteriormente en nuestra Primera Casa de

Estudios del Departamento de Puno, la Universidad Nacional del Altiplano.

As√≠ mismo se incluyeron conocimientos del √°rea de telecomunicaciones, as√≠

referencia espec√≠fica al telemando o telecontrol.

De esta manera y bajo el pre√°mbulo precedente se realizo un prototipo de

brazo robot de unos 50 cm de altura, que cuente con la circuiter√≠a necesaria

para el control manual y autom√°tico (previamente programadas) del m√≥dulo, y

que a la vez posea cinco grados de libertad y una pinza manipuladora, cuyo

control se realice a trav√©s de un microcontrolador y el cual dota de movimiento

a 6 servomotores, mediante un monitoreo realizado a distancia por medio de

programaci√≥n orientada a objetos.




                                                                             76
CAP√çTULO V: IMPLEMENTACION DEL MODULO DE

   ENTRENAMIENTO DE BRAZO ROBOTICO




                                           77
IMPLEMENTACION DEL MODULO DE ENTRENAMIENTO DE BRAZO

ROBOTICO

Durante los periodos de elaboraci√≥n, desarrollo, ensamblaje y dem√°s, los

autores del presente proyecto de tesis, intervinieron sobre el objeto de estudio

logrando   modificaciones    directas   o   indirectas   para   acondicionamiento

necesario del prop√≥sito en menci√≥n: Prototipo f√≠sico a escala de un brazo

rob√≥tico de 5 GDL.

Adem√°s de haberse realizado dentro de las condiciones previstas, las cuales

se dieron durante el lugar y tiempo determinados del fen√≥meno estudiado

En el desarrollo del presente trabajo de investigaci√≥n se pueden diferenciar

claramente cuatro etapas fundamentales:

La primera etapa cubre el dise√±o y desarrollo del circuito con el cual se controla

el brazo robot, para realizar este dise√±o se ha de comprender perfectamente

c√≥mo funcionan los servomotores y como gestiona su movimiento, adem√°s

tambi√©n hay que tener claro c√≥mo se realiza la comunicaci√≥n con el ordenador

y de que entradas se va a dotar al sistema para el control.

En la segunda etapa se procede a montar el brazo robot, para poder realizar

sobre √©l posteriormente las pruebas pertinentes. En este caso se trata de un

conjunto de piezas que se adquieren ya orientadas a la construcci√≥n mec√°nica

del brazo robot.

En la tercera etapa se ha desarrollado la programaci√≥n necesaria para que el

brazo robot pueda funcionar de manera manual sin necesidad de un ordenador.

Una vez programado el microcontrolador se realizan las pruebas de

movimiento correspondientes. Adicionalmente en esta etapa se crea la parte de




                                                                               78
programaci√≥n correspondiente a la comunicaci√≥n serie, aunque no se depura

hasta la etapa siguiente.

En esta √∫ltima etapa se depura la programaci√≥n necesaria para poder

comunicar el brazo robot con el ordenador. Para poder realizar una correcta

depuraci√≥n de la programaci√≥n se realiza, a partir de la herramienta de

programaci√≥n orientada a objetos LabVIEW, una aplicaci√≥n que permite la

comunicaci√≥n entre el microcontrolador y el ordenador y que permite

desarrollar todas las habilidades del brazo robot.

   5.1.      CIRCUITO DE CONTROL

   5.1.1.    MICROCONTROLADOR PIC16F877A

Hay diversas razones que han llevado a utilizar este microcontrolador en este

trabajo. En primer lugar la gran cantidad de informaci√≥n y aplicaciones

disponibles para adquirir conocimientos sobre el dispositivo en cuesti√≥n, un

precio razonable y sobre todo las caracter√≠sticas t√©cnicas que presenta. En la

figura 29 se pueden observar todas las entradas y salidas disponibles del

microcontrolador PIC 16F877A.




                            Figura 29 E/S PIC 16F877A

                               Fuente: Microchip Inc.

                                                                           79
Este dispositivo es capaz de trabajar a una frecuencia m√°xima de 20MHz.

Puesto que no se encuentra dentro de los objetivos reducir el consumo y por

tanto, tampoco ajustar la velocidad del microcontrolador a la m√≠nima necesaria,

en este proyecto se utilizan los 20MHz como frecuencia de funcionamiento del

sistema. Por otro lado, tambi√©n dispone de una serie de entradas anal√≥gicas

que resultaban bastante interesantes tanto a nivel de dise√±o como de

aprendizaje pr√°ctico, para este trabajo se ha configurado concretamente una

de las entradas anal√≥gicas. Es importante, que tenga la capacidad de

comunicarse por medio de un puerto serie. Cuenta con numerosas entradas

(en este caso se necesitan siete digitales y una anal√≥gica) y salidas (6 digitales

para este trabajo) para evitar complicar el dise√±o con t√©cnicas de multiplexado.

Si se desea estudiar en profundidad las caracter√≠sticas de este dispositivo, se

ha a√±adido a los documentos adjuntos en el CD de este proyecto, sus hojas de

caracter√≠sticas.

   5.1.2.     L√ìGICA DE POSICIONAMIENTO

Para posicionar los servomotores, como se ha descrito anteriormente, se

obtienen se√±ales de entre 1ms y 3ms de ancho de pulso al inicio del ciclo con

un periodo de 20ms, donde 1ms equivale a 0¬∫ y 3ms equivale a 180¬∫. Para

realizar el control se utiliza un temporizador (TMR1) y seis salidas digitales, el

temporizador es el encargado de colocar un nivel alto o nivel bajo en dichas

salidas seg√∫n corresponda. Para un control de 6 servomotores se necesitan12

flancos (1 de subida y 1 de bajada por salida digital) como muestra la figura 30.

Esto equivale a 12 interrupciones por parte del temporizador TMR1. Puesto que

para este proyecto solo se utiliza un temporizador, no es posible posicionar dos

servomotores al mismo tiempo.


                                                                               80
                           Figura 30 Control de pulsos

Ya que se han de controlar 6 servomotores, estos 20ms se han de repartir

entre los 6 servomotores (como se muestra en la figura 30, adem√°s el tiempo

de control del √°ngulo de giro (tiempo de la se√±al a nivel alto) de un servomotor

no puede coincidir con el tiempo de control del siguiente. Por lo tanto, a cada

servomotor le corresponde 3.33ms de control, sin embargo, no todo el tiempo

es utilizado

   5.1.3.      CONTROL MANUAL

Para realizar el control manual en este proyecto se ha decidido trabajar con

una entrada anal√≥gica para aprovechar las prestaciones del microcontrolador

utilizado y 7 entradas digitales cuyo funcionamiento se explica un poco m√°s

adelante. El motivo de usar una entrada anal√≥gica y el resto digitales es el de

dotar a la pinza manipuladora de una mayor precisi√≥n. A continuaci√≥n se

muestra, por cuestiones de claridad, una imagen que corresponde al dise√±o

final donde aparecen pulsadores y un potenci√≥metro (Figura 31.).
                                                                             81
                         Figura 31 Jostick con pulsadores

La entrada anal√≥gica se realiza gracias a un divisor de tensi√≥n, en el cual, con

un potenci√≥metro lineal y 2 resistencias fijas, se controla la tensi√≥n de entrada

del canal anal√≥gico, los valores y circuitos utilizados para el c√°lculo se

muestran en la Figura 32.




                      Figura 32 Circuito de control de la Pinza.

El valor anal√≥gico que se obtiene, es procesado por el microcontrolador para

posteriormente actuar sobre el servomotor que controla la pinza del brazo

robot. Para adquirir el dato anal√≥gico el convertidor del microcontrolador puede

configurarse con una resoluci√≥n de 8 bits y de 10 bits. Para obtener una mayor


                                                                              82
precisi√≥n se configura con una resoluci√≥n de 10 bits, m√°s adelante se indica

como configurar los distintos par√°metros de la adquisici√≥n anal√≥gica en la

programaci√≥n del microcontrolador. Para una resoluci√≥n de 10 bits, la precisi√≥n

en t√©rminos de tensi√≥n se determina mediante la expresi√≥n 3.3.

                        ùëüùëíùëìùëâ      5
             1ùêøùëÜùêµ = 210ùëèùëñùë°ùë†    = 1024 = 4.8ùëöùëâ              ‚Ä¶Ecuaci√≥n (3.3)
                            ‚àí1

Es decir, se pueden discriminar variaciones de 4.8mV, que es totalmente v√°lido

para la aplicaci√≥n.

Los valores de las resistencias presentes en la figura 32, se han elegido

siguiendo el siguiente criterio: A la entrada del conversor del microcontrolador

se proporciona una tensi√≥n de entre 1V y 2V. Con este margen y puesto que el

sistema es capaz de discriminar 4,8 mV se tienen un total de 208.3 posiciones,

lo que supone que para 135¬∫ el servomotor controlado anal√≥gicamente tenga

un paso de 0,64¬∫, lo cual es una resoluci√≥n bastante aceptable para el

proyecto.

Para obtener una ca√≠da de tensi√≥n de dos voltios en el punto 3 de la figura V.4,

se realiza el c√°lculo correspondiente al divisor de tensi√≥n entre R1 y

(RV2+R12). Si a la resistencia R1 se le da un valor de 30 KŒ© el resultado de

RV2+ R12 se obtiene en la ecuaci√≥n 3.4. La impedancia de entrada del

microcontrolador es infinita y por tanto la corriente que circula por ella es

despreciable.
                      ùëÖùëâ1+ùëÖ2
      ùëâ3 = 5 √ó ùëÖ1+(ùëÖùëâ1+ùëÖ2) = 2ùëâ       ‚Üë ùëÖùëâ1 + ùëÖ2 = 2000Œ©        ‚Ä¶Ecuaci√≥n (3.4)

A continuaci√≥n, para obtener una ca√≠da de tensi√≥n de un voltio desde el punto

uno de la figura V.4 y dando a RV2 un valor de 10KŒ©, se determina el valor de

R12 mediante el divisor de tensi√≥n de la ecuaci√≥n 3.5.
                      ùëÖ2
      ùëâ3 = 2 √ó ùëÖ2+ùëÖùëâ1 = 1ùëâ     ‚Üë ùëÖ2 = 10000Œ©                 ‚Ä¶Ecuaci√≥n (3.5)

                                                                               83
Con lo que queda definido el circuito de control de la pinza que discrimina

valores anal√≥gicos de entre 1 y 2 voltios con una precisi√≥n de 4,8 mV.

Las entradas digitales son las encargadas de controlar el servomotor que se

desea mover (excluyendo la pinza) y la direcci√≥n de movimiento. Siempre que

se desee mover uno de los servomotores se tiene que mantener pulsado el

pulsador correspondiente al servomotor que se desea mover a la vez que el

correspondiente a la direcci√≥n deseada.

   5.1.4.    PUERTO SERIE Y NIVELES DE TENSION

Para este trabajo se plantea un problema com√∫n hoy en d√≠a con los nuevos

ordenadores, ya que no dispone de puerto serie para realizar la comunicaci√≥n.

Sin embargo, este problema se puede resolver mediante un adaptador USB

Xbee como el que se muestra en la figura 33.




                          Figura 33 Adaptador USB XBee

El microcontrolador PIC 16F877A dispone de 2 patillas para la comunicaci√≥n

serie, sin embargo existe una peque√±a limitaci√≥n. Los niveles de tensi√≥n TTL

con los que funciona el PIC tienen que adaptarse a los niveles de tensi√≥n con

los que trabaja el ordenador. Para adaptar los niveles de tensi√≥n, en este

proyecto, se utiliza el dispositivo MAX232, que se ha configurado siguiendo las

instrucciones de su hoja de caracter√≠sticas. En la figura siguiente (figura 34) se

                                                                               84
muestra la configuraci√≥n utilizada para el MAX232. Para conocer m√°s datos

sobre este dispositivo, se adjuntan sus hojas de caracter√≠sticas en formato

digital.




                               Figura 34 MAX232.

                        Fuente: www.freecircuitdiagram.com

    5.1.5.   INDICADORES LED

Para este trabajo solo se requieren dos se√±ales luminosas, ya que casi todos

los estados del sistema se pueden reconocer f√°cilmente desde la aplicaci√≥n

realizada en LabVIEW. En este proyecto, el circuito de control se compone de 2

diodos LEDs, uno rojo y otro verde. El diodo LED rojo se ha dispuesto para

mostrar si se le proporciona alimentaci√≥n al circuito e indica tambi√©n con un

parpadeo de 1 segundo de periodo, cuando inicializamos el programa de

comunicaci√≥n con el ordenador, que no quiere decir que se inicie el control del


                                                                            85
brazo rob√≥tico. El LED verde indica esto √∫ltimo, es decir, indica que se est√°

realizando un control serie del brazo robot desde el ordenador. En este

momento est√°n intercambiando datos de posicionamiento entre ordenador y

brazo. En la figura 35 se pueden apreciar los LEDs utilizados en el dise√±o final.




                            Figura 35 LEDs indicadores

   5.1.6.    CONECTORES

Se ha utilizado, para la realizaci√≥n de este trabajo, una serie de conectores que

corresponden a la alimentaci√≥n, la comunicaci√≥n con el brazo robot y el

conector de programaci√≥n.

Para la alimentaci√≥n se necesitan 2 conectores, uno para la alimentaci√≥n de los

servomotores, y otro para la de la placa de control. Ambas alimentaciones

disponen de un circuito de protecci√≥n contra inversi√≥n de la polaridad y

condensadores de desacoplo de 47nF entre las entradas de alimentaci√≥n y el

potencial de referencia de las tensiones utilizadas en el microcontrolador (0

Voltios).

La comunicaci√≥n del brazo robot a la placa de control se consigue simplemente

con una tira de 6 conectores en l√≠nea de patilla torneada.

Por √∫ltimo se ha dise√±ado el sistema para que la programaci√≥n se pueda

realizar por conector RJ11 que permite utilizar un programador ICD2, ICD‚Ä¶etc.

o por conector ICSP      que permite utilizar programadores como el PicKit2,

PicKit, GTPUSB‚Ä¶etc.




                                                                               86
El aspecto final de la circuiter√≠a es el que se muestra en la figura 36. En ella se

muestran todas las partes explicadas anteriormente.




                             Figura 36 Circuiter√≠a final




   5.2.      MONTAJE DEL PROTOTIPO

Para realizar el montaje de la estructura mec√°nica se utilizan una serie de

elementos met√°licos especialmente dise√±ados para este tipo de estructuras.

Tambi√©n se disponen los actuadores (servomotores) que son los responsables

directos del movimiento de la estructura, cuya torniller√≠a de fijaci√≥n se

proporciona junto con los servomotores. El dise√±o de toda la estructura es

personalizado, por lo que no existe ning√∫n esquema de proveedor para realizar

el montaje. Por esta raz√≥n se procede a explicar a continuaci√≥n cada uno de

los pasos a realizar para su montaje. La base de la estructura est√° compuesta

por dos piezas de fibra de vidrio las cuales se superponen y giran una respecto

a la otra.

A continuaci√≥n en la figura 37 se muestra una imagen general de la parte

mec√°nica, que sirve para tener una visi√≥n global de la misma.




                                                                                87
                   Figura 37 Visi√≥n global de la parte mec√°nica.

La base contiene una base fija, o parte A, a la que se le acoplan unos

rodamientos para facilitar el movimiento giratorio de la pieza superpuesta o

parte B. La parte A y sus rodamientos se pueden observar en la figura 38.




                      Figura 38 Imagen de la base (Parte A).

En la figura 38 se pueden apreciar unas marcas en los rodamientos, estas

marcas se han realizado gracias a una lija de grano como indican las


                                                                            88
instrucciones de montaje para esta pieza. El interior de la parte A de la base es

hueco y es el lugar donde se dispone el servomotor 6, encargado de realizar el

movimiento giratorio de la base. En la siguiente figura (figura 39) se presenta el

interior hueco de la parte A y el servomotor 6 correctamente fijado.




                           Figura 39 Interior de la Parte A.

En la figura 40 se muestra la parte B, se aprecia que esta parte presenta un

orificio central donde encaja el eje de giro del servomotor 6 que se aparece en

la parte central del elemento de la figura 38.




                                                                               89
                    Figura 40 Base (zona inferior de la parte B).

Los tornillos y tuercas que se observan en la figura 40 corresponden a la

fijaci√≥n de la parte B de la base con la pieza que se observa en la figura 41

(Soporte Multifuncional para Servomotores) que se encuentra por la otra cara.

Esta pieza sirve como fijaci√≥n del siguiente servomotor (servomotor 5).




                Figura 41 Soporte multifuncional para servomotores.

En la siguiente imagen (figura 42.) se muestra un esquema de montaje del

conjunto formado por la figura 41, la base en su totalidad y el servomotor 5.



                                                                           90
Para fijar los servomotores a los soportes multifuncionales se utilizan unos

remaches de nylon que fijan por presi√≥n.




                  Figura 42 Proceso de montaje del servomotor 5.

En siguiente paso, se acopla el elemento de la figura 43 (a), al servomotor y al

soporte multifuncional montado anteriormente como se muestra en la figura 43

(b).




       Figura 43 a) Soporte en largo para servomotor b) Montaje servomotor 5.

Para atornillar los soportes en C a los soportes multifuncionales se utilizan los

elementos de la figura 44 en el orden que se indica.




                                                                                91
           Figura 44 Torniller√≠a para fijar soporte multifuncional y soporte.

A continuaci√≥n se fija otro soporte largo anterior como se muestra en la

siguiente imagen (figura 45), en la cual no aparece el soporte multifuncional

que aparec√≠a ya acoplado a uno de los dos soportes para una mayor claridad

de montaje.




                        Figura 45 Soportes largos acoplados.

Seguidamente, para colocar el servomotor 4, se fija al √∫ltimo soporte colocado,

un nuevo soporte multifuncional y en el lateral de este soporte multifuncional un
                                                                                92
soporte en largo. Una vez montadas estas 2 estructuras se instala en el soporte

multifuncional el servomotor 4, con lo que se obtiene la estructura de la

siguiente imagen. (Figura 46).




                        Figura 46 Montaje del servomotor 4.

Una vez montada esta √∫ltima parte se atornilla el soporte al extremo plano de

un soporte largo, por su parte exterior como se muestra en la figura 47.




                Figura 47 Soporte en C adosado a soporte en Largo.

En el extremo de este √∫ltimo soporte en C se acoplan dos soportes

multifuncionales ambos superpuestos entre s√≠, como se aprecia en la figura 48.




                                                                            93
    Figura 48 Extremo de soporte en C con bloques multifuncionales superpuestos.

A cada uno de los bloques multifuncionales se le instala un servomotor

(servomotor 3 y servomotor 2). Una vez hecho esto, se procede a la instalaci√≥n

de la pinza manipuladora que se muestra en la figura 49, la cual dispone de un

hueco en la parte inferior para colocar el servomotor 1 y un orificio para colocar

el eje de giro del servomotor 2 en la parte opuesta a la pinza.




                           Figura 49 Pinza manipuladora

Realizados todos los pasos, el dise√±o final de la parte mec√°nica queda como

se muestra en la figura 37.




                                                                                   94
Una vez terminada de montar toda la parte mec√°nica se comprueba que los

servomotores se han colocado en la posici√≥n correcta, es decir, que el √°ngulo

de giro que se puede realizar con ellos es el m√°ximo permitido por la propia

mec√°nica. Despu√©s de comprobar esto manualmente, si alguno de los

servomotores no se encuentra en su posici√≥n m√°s √≥ptima, se desatornilla su

eje de giro de la parte fija que lo sujeta y una vez puesto dicho servomotor en la

posici√≥n deseada se vuelve a atornillar a la parte met√°lica que fija el eje de

giro.




                      (a)                                          (b)




                                                                                 (c)




    Figura 50 Etapas de montaje: (a) Desarrollo, (b) simulaci√≥n e (c) implementaci√≥n.




                                                                                        95
   5.3.      MICROPROGRAMA

En este apartado se describe detalladamente el microprograma desarrollado

para el control del brazo rob√≥tico, adem√°s para implementar el microprograma

se requiere de una serie de herramientas que son descritas a continuaci√≥n.

Dicho microprograma est√° formado por dos partes: la encargada de realizar el

control manual mediante los pulsadores y el potenci√≥metro de la circuiter√≠a, y

por otro lado existe una parte encargada de gestionar el control por ordenador.

Para realizarlo se explotan algunos de los recursos que presenta el

microcontrolador como es el temporizador (TMR1), el cual consta de 16 bits y

el conversor anal√≥gico/digital de 10 bits. Tambi√©n intervienen en esta parte de

la programaci√≥n distintas entradas y salidas digitales.

A lo largo del microprograma, la parte dedicada a un algoritmo que interpreta el

dato recogido por el conversor anal√≥gico/digital, se encarga de transformarlo en

un ancho de pulso determinado para uno de los servomotores (pinza

manipuladora). Por √∫ltimo, se crea otra parte que se encarga del protocolo de

comunicaci√≥n entre el ordenador y la circuiter√≠a.

   5.3.1.    HERRAMIENTAS DE PROGRAMACI√ìN

Para llevar a cabo el microprograma se necesita de la herramienta MPLAB X

de Microchip, en este caso se ha utilizado la versi√≥n 8.36.Al MPLAB X se le ha

a√±adido una expansi√≥n (Se adjunta en el CD) que permite utilizar como

compilador de C el programa PIC C Compiler. El aspecto del programa MPLAB

X se puede ver en la figura 51. Se trata de un paquete de programas que tiene

diversas funciones como simulaci√≥n, depuraci√≥n en l√≠nea y programaci√≥n de

dispositivos, entre otras. Es un programa muy vers√°til ya que soporta distintos

tipos de programadores, depuradores y emuladores.


                                                                              96
                          Figura 51 Aspecto del MPLAB X.

Adem√°s tambi√©n se requiere de un programador/depurador que sirve para

programar el microprograma en la memoria del microcontrolador y depurarlo en

l√≠nea. En la figura 52. Se muestra el programador/depurador utilizado para este

trabajo, como se puede observar, se trata de un PicKit2 clone tambi√©n de

Microchip y es totalmente compatible con el microcontrolador PIC16F877A.




                          Figura 52 Vistas de PicKit2 clone.

Como se puede observar en la figura 33, este equipo cuenta con un conector

USB para su comunicaci√≥n con el ordenador. Adem√°s cuenta, por el lado

opuesto al conector USB, de un conector RJ11 por medio del cual se programa

el microcontrolador gracias a la circuiter√≠a desarrollada.


                                                                            97
Para conectar el PicKit2 clone a la circuiter√≠a se ha seguido el esquema

proporcionado con el propio dispositivo. En la figura 53. Se puede observar la

forma de conectar de las patillas del PicKit2 clone al circuito y los elementos

m√≠nimos para una correcta programaci√≥n y/o depuraci√≥n. Una vez realizada la

correcta programaci√≥n y/o depuraci√≥n se puede comprobar las conexiones

entre la circuiter√≠a y el resto de elementos del proyecto (Servomotores,

Ordenador, Programador/Depurador).




            Figura 53 Conexionado Correcto PicKit2 clone-Microcontrolador.

El lenguaje utilizado para la programaci√≥n, es en su totalidad lenguaje C. Se ha

utilizado este lenguaje ya que, aunque no se puede conseguir el c√≥digo m√°s

√≥ptimo en lo que respecta al tiempo, proporciona una mayor claridad y facilidad

de compresi√≥n.

Tanto la circuiter√≠a de programaci√≥n como el programa necesitan de otra

circuiter√≠a que ha de ser programada.

   5.3.2.     PROGRAMACI√ìN MODO MANUAL

La parte de microprograma correspondiente al modo manual, es la encargada

de posicionar cada uno de los seis servomotores que contiene el brazo

rob√≥tico. Tiene la capacidad de gestionar cada una de las se√±ales de entrada

que son introducidas por el usuario manualmente como son: Movimiento de la

                                                                             98
pinza rob√≥tica manipuladora (servomotor 1) mediante una entrada anal√≥gica, la

selecci√≥n de los servomotores del dos al seis y la selecci√≥n de la direcci√≥n de

movimiento hacia 0¬∫ o hacia 135¬∫. Esta limitaci√≥n de movimiento hasta los 135¬∫

es debida a la propia mec√°nica del brazo robot.

En primer lugar se presenta la cabecera del programa, la cual se muestra en la

figura 54.




                      Figura 54 Cabecera del Microprograma.

Para este apartado, interesa conocer solo ciertos elementos, el resto se

explican en el apartado correspondiente a la comunicaci√≥n serie. Al principio se

incluye la librer√≠a ‚Äú16F877A H‚Äù correspondiente al microcontrolador PIC

16F877A, la cual es responsable de que las funciones que se utilizan en el

programa, predefinidas en C y preparadas para introducir los argumentos,

funcionen correctamente.

En la l√≠nea 2 se define la resoluci√≥n del conversor anal√≥gico/digital del

microcontrolador, en este caso la resoluci√≥n seleccionada es de 10 bits, que es

la m√°xima capaz de proporcionar el microcontrolador.



                                                                              99
Antes de comenzar cualquier microprograma, es necesario configurar los Bits

de configuraci√≥n. En este caso es necesario configurar el tipo de reloj, con el

cual se indica la velocidad del reloj (HS para 20MHz seg√∫n la documentaci√≥n

del microcontrolador) y desactivar el WatchDog (NOWDT). Existen otros bits de

configuraci√≥n para este microcontrolador, para configurarlos existen una serie

palabras de configuraci√≥n como las que se muestran en la figura 55. El

compilador se encarga de cargar una configuraci√≥n por defecto a los bits de

configuraci√≥n que no se han declarado.




                         Figura 55 Bits de configuraci√≥n.

Las funciones que se observan en la figura 54 y que son nombradas como

‚Äúfast_io(X)‚Äù, dotan de velocidad al programa ya que solo permite funcionar a los

registros de entrada y salida (A,B,C) seg√∫n se configure en el programa

principal, es decir, no se puede realizar la salida de un dato por un registro o

por un bit del registro que est√° programado como entrada sin antes


                                                                            100
programarlo como bit o registro de salida, lo que quiere decir que el registro no

se autoconfigura con esta forma de programarlo.

A continuaci√≥n se asignan las direcciones de los registros PORTA, PORTB y

PORTC a las constantes ‚ÄúPORTA‚Äù, ‚ÄúPORTB‚Äù y ‚ÄúPORTC‚Äù para mayor claridad

en el resto de la programaci√≥n, como se muestra en las l√≠neas 11,12 y13.

La √∫ltima l√≠nea concede niveles de prioridad a las interrupciones, que este

proyecto son de dos tipos: el TMR1 (temporizador, ‚Äútimer1‚Äù) y USART (puerto

serie, ‚Äúrda‚Äù). Esta l√≠nea concede mayor prioridad a las interrupciones que se

encuentran m√°s a la izquierda. En este caso la interrupci√≥n del TMR1 es la

primera en atenderse.

A continuaci√≥n se definen una serie de constantes que hacen referencia a bits

de entrada y salida del microcontrolador. Al definirlos con un nombre concreto

se consigue una mayor claridad a la hora de realizar e interpretar el programa.

Se definen as√≠ los servomotores, los pulsadores que definen el movimiento en

un sentido o en otro y por √∫ltimo los 2 LEDs indicadores. La figura 56 muestra

la asignaci√≥n explicada.




                                                                             101
                Figura 56 Asignaci√≥n de patillas de entrada y salida.

En la siguiente imagen (figura 57), se muestran una serie de variables las

cuales se utilizan para el desarrollo del programa, adem√°s de unas constantes

que definen las temporizaciones del sistema.




                  Figura 57 Definici√≥n de variables y constantes.

   5.4.      APLICACI√ìN EN LABVIEW

Para resolver la comunicaci√≥n con el ordenador se realiza una aplicaci√≥n en la

herramienta de programaci√≥n LabVIEW, cuya metodolog√≠a de programaci√≥n es

                                                                           102
la programaci√≥n orientada a objetos. Para acceder a la comunicaci√≥n se

genera un panel frontal con el que el usuario puede interactuar y que lleva

asociado un diagrama de bloques que es transparente para el mismo.

   5.4.1.    LABVIEW PANEL FRONTAL

En la figura se muestra el panel frontal con el que el usuario interacciona para

controlar el movimiento del brazo robot y generar las secuencias que se

deseen. En la figura 58 se muestra el panel frontal de control.




                 Figura 58 Panel Frontal del programa en LabVIEW.

En el panel de la figura 58 se diferencian varias partes. En la parte superior se

ha dispuesto un recuadro en el que se pueden desplegar un panel con los

distintos puertos disponibles para seleccionar. Una vez seleccionado el puerto

al que se conecta el cable DB9-USB, se hace un clic en el pulsador que se

encuentra a la derecha confirmando el puerto de comunicaci√≥n como se

muestra en la figura 59.




                                                                             103
                          Figura 59 Selecci√≥n del puerto.

Tras seleccionar el puerto existen diversas opciones de funcionamiento; en

primer lugar, se puede seleccionar el modo de cargar una secuencia creada

previamente y en segundo lugar existe tambi√©n la opci√≥n de generar una

secuencia de movimiento. Estas opciones se seleccionan a partir de las dos

pesta√±as que se muestran en la figura 60.




                          Figura 60 Pesta√±a de acciones.

El recuadro verde contiene el pulsador con el que se a√±ade una posici√≥n nueva

a la secuencia que se genera dentro de un fichero *.txt, esta posici√≥n va

despu√©s de la posici√≥n anterior. El recuadro azul contiene la posici√≥n del brazo

que se guarda en la √∫ltima posici√≥n y en la que se ha de posicionar el brazo

robot. Finalmente el recuadro amarillo contiene 6 controles deslizantes, uno

para cada servomotor, con los que se posiciona al brazo robot y la pinza

manipuladora en la posici√≥n deseada.Todas las posiciones con los que se

configuran los servomotores son posiciones relativas a 0¬∫ y como se ha dicho

anteriormente, los valores no pueden ser superiores a 135¬∫, ya que la propia

mec√°nica no lo permite. Por otro lado, las posiciones solo pueden tener pasos

de 1¬∫, es decir, n√∫meros enteros de 0¬∫ a ¬∫135¬∫ donde para la pinza

manipuladora 0¬∫ es la posici√≥n en la que se encuentra completamente abierta.

Para realizar la carga de una secuencia que se haya guardado previamente se

ha de pulsar el bot√≥n ‚ÄúCARGAR‚Äù que se presenta en la figura 61.

                                                                            104
                     Figura 61 Pulsador de carga de secuencia.

Una vez que la secuencia se ha cargado, en la tabla que aparece en la parte

central del panel, se representan, por filas, cada una de las articulaciones del

brazo robot, expresadas en grados y, por columnas, cada una de las

posiciones de los servomotores como se muestra en la figura 62.




                         Figura 62 Tabla de coordenadas.

Una vez que se ha cargado la secuencia en la tabla basta con pulsar el

pulsador rojo con el nombre ‚ÄúINICIAR COMUNICACI√ìN‚Äù que se encuentra en

la parte inferior del panel frontal. Cuando la comunicaci√≥n se ha iniciado, en la

parte inferior izquierda, se ve cual es el servomotor que est√° actualizando su

posici√≥n mediante una barra de indicadores rectangulares de color verde como

los que se muestran en la figura 63.




                        Figura 63 Barra de posicionamiento.




                                                                             105
Existen una serie de elementos informativos a la izquierda del panel frontal.

Estos elementos se encargan de informar de las posiciones que toma el brazo

a lo largo de toda la secuencia, del servomotor que se est√° controlando en ese

momento y de la posici√≥n actual en la que se encuentra el brazo robot. La

figura 64 muestra dicho panel.




                      Figura 64 Panel de informaci√≥n general.




Finalmente se ha incluido dentro de la interfaz un pulsador por medio del cual

se puede acceder a un fichero en formato PDF de ayuda. Junto a este pulsador

aparece un peque√±o recuadro en el que se puede cargar el nombre del fichero

de ayuda, la raz√≥n por la que se ha decidido incluir este recuadro es debida a

que el programa final no queda en un solo ejecutable, por lo que el directorio

del archivo de ayuda seguramente cambie y puede crear problemas al intentar

cargarlo, de esta forma, simplemente hay que cargar previamente el archivo

con el bot√≥n de ayuda que aparece en la pantalla principal de la figura 58.

   5.4.2.    LABVIEW DIAGRAMA DE BLOQUES

A continuaci√≥n se representan los distintos bloques que forman parte de la

programaci√≥n del sistema de comunicaci√≥n por puerto serie y de la gesti√≥n de

los movimientos para el brazo robot. El esquema general del sistema se



                                                                              106
muestra en la figura 65, donde aparece dentro de un bucle ‚Äúwhile‚Äù que se repite

permanentemente al iniciar el programa, una secuencia de dos elementos

(Bloque A y Bloque B). Ambos elementos solo se ejecutan bajo una condici√≥n

que habilita al ‚Äúcase‚Äù.




                      Figura 65 Esquema general del programa.

Analizando de manera m√°s exhaustiva el sistema, cabe destacar en primer

lugar la creaci√≥n de una serie de variables encargadas de mostrar el estado del

panel frontal tanto del servomotor que se est√° posicionando como de la

posici√≥n en la que se encuentra el brazo. La figura 66 muestra dichos

elementos.




                          Figura 66 Variables para el panel frontal.

El pulsador con el nombre de ‚ÄúSERIE?‚Äù es el que verifica que se ha

seleccionado un puerto (figura 59). La zona remarcada con un color naranja


                                                                           107
permite que una vez seleccionado el puerto, se muestre la pantalla completa

del panel frontal, de manera que solo en el momento de seleccionar el puerto

se pueden acceder a las opciones de funcionamiento.

Una vez se ha seleccionado el puerto de transmisi√≥n, se ha de configurar este

de manera que las caracter√≠sticas de transmisi√≥n en el microcontrolador y en el

ordenador sean iguales. La velocidad configurada es de 9600 baudios, sin bits

de paridad, un √∫nico bit de parada y 8 bits de datos. En la figura 67 se muestra

el bloque funcional que realiza la configuraci√≥n, como se aprecia en el montaje

de la figura, la parte recuadrada en negro, precede a la estructura secuencial.




                Figura 67 Configuraci√≥n del puerto serie en LabVIEW.

En la figura 66 se muestra otro elemento a continuaci√≥n del bloque de

configuraci√≥n del puerto serie que se encarga de vaciar el buffer del puerto

serie Adem√°s, aparece un pulsador con el nombre ‚ÄúINICIA COM‚Äù que

representa al pulsador ‚ÄúINICIAR COMUNICACI√ìN‚Äù de la figura 58.

El bloque A, que se muestra en las figuras anteriores (64, 65, 66), contiene los

elementos que se muestran en la figura 68. Los elementos que se encuentran


                                                                              108
recuadrados en rojo, se encargan de apagar todos los LEDs, los cuales indican

el servomotor que se est√° modificando (de color verde) y de poner a cero las

variables que muestran los datos en el panel de informaci√≥n general

(coloreados en azul).




                   Figura 68 Bloque A del diagrama de bloques.

La zona naranja contiene al bloque que decide si el control se realiza

manualmente o por el contrario, el brazo robot pasa a estar controlado por el

ordenador. Este hecho determina si se pasa a la secuencia del bloque B o se

contin√∫a en la misma.

                                                                          109
Dentro del recuadro de color verde se dispone el c√≥digo que permite acceder a

la ayuda del programa, la cual, se suministra en formato PDF en la

documentaci√≥n virtual adjunta con el CD-ROM. Esta parte contiene un

subprograma encargado de la monitorizaci√≥n de la ayuda.

Finalmente, al final de la figura 68 se distribuyen una serie de elementos dentro

del recuadro azul. Esta parte es la encargada de permitir la carga de

secuencias en la tabla de coordenadas a la que puede acceder el usuario

desde el panel frontal. Como se ha descrito en el apartado 5.4.1.

Una vez iniciada la comunicaci√≥n se accede al bloque B. Ya en el bloque B los

primeros elementos que se ejecutan son los que se muestran en la figura 69.

(Antes de acceder al bucle ‚Äúwhile‚Äù).




                    Figura 69 Elementos iniciales del Bloque B.




                                                                             110
Lo primero que se realiza al acceder a la comunicaci√≥n con el brazo robot

desde el ordenador, es pasar los datos de la matriz que forma la tabla de

coordenadas a un array al que se le llama ‚ÄúDATOS ARRAY‚Äù, de la que se

obtiene el n√∫mero de filas que se guarda en la variable ‚ÄúPOSICIONES‚Äù En este

punto se declara el bloque (Tab Control) que permite crear diversas pesta√±as

como las que se muestran en la figura 60.

Para tener una visi√≥n m√°s global del funcionamiento del bloque B, a

continuaci√≥n en la figura 70 se muestra la estructura general de lo que hay

contenido en la estructura ‚Äúwhile‚Äù del bloque B.




                               Figura 70 Bloque B.

Dentro del bucle ‚Äúwhile‚Äù del bloque B los primeros elementos que aparecen son

los que se muestran en la figura 71. En esta parte se eval√∫a si se crea una

secuencia nueva o se desarrolla una secuencia previamente cargada. A

continuaci√≥n se explica cada uno de los recuadros de color.




                                                                          111
               Figura 71 Primera parte del bucle ‚Äúwhile‚Äù del Bloque B.

En la parte superior, el contenido del recuadro en color verde hace desaparecer

el bot√≥n de ayuda, de manera que no se pueda acceder a la ayuda cuando se

realiza una transferencia continua de datos al microcontrolador.

La estructura ‚Äúcase‚Äù incluida en el recuadro azul, para el caso de que se

seleccione el modo de crear secuencia, actualiza todas las variables

coloreadas en azul dentro del recuadro con los valores de las pesta√±as

deslizantes que aparecen en la figura 59. Estas pesta√±as se nombran como

‚ÄúSx‚Äù donde ‚Äúx‚Äù es la pesta√±a que regula la posici√≥n del servomotor ‚Äúx‚Äù.

Por √∫ltimo, dentro del recuadro naranja queda definido el n√∫mero de

repeticiones que se generara en un bucle ‚Äúfor‚Äù que se ejecuta posteriormente,

que tendr√° un valor ‚Äúposiciones‚Äù, cuyo valor hace referencia a las distintas

posiciones que pueden adquirir las articulaciones dentro de una secuencia pre-

programada.

A continuaci√≥n se accede a la estructura de programaci√≥n que se presenta en

la figura 70. El primer bucle ‚Äúfor‚Äù (Contenido en el Bloque B) tiene un n√∫mero




                                                                           112
de repeticiones que est√° definido por uno de los elementos de la figura 71

como se ve en el recuadro naranja de dicha figura.

Dentro del primer bucle ‚Äúfor ‚Äúse colocan los elementos presentes en la figura 72

donde, para facilitar la visi√≥n general de la estructura, se realiza un montaje con

un recuadro naranja donde todos los elementos que hay dentro de este est√°n

se√±alados con una flecha. Estos elementos se encargan de actualizar el panel

que muestra la posici√≥n del brazo rob√≥tico en el momento que este est√° siendo

posicionado. Adem√°s esta parte de programa selecciona la fila que

posteriormente se manda con los valores de posici√≥n desde el ordenador al

microcontrolador. Las variables coloreadas en verde son utilizadas para

actualizar el valor de los LEDs de manera que los ponen todos a nivel bajo

(apagados).




               Figura 72 Contenido del primer bucle ‚Äúfor‚Äù del Bloque B.

El segundo bucle ‚Äúfor‚Äù tiene el n√∫mero de repeticiones definido por el tama√±o

del vector de datos obtenido del bloque funcional de la figura 72. En este caso

el n√∫mero de datos que hay dentro del vector de datos es seis siempre, puesto

que se corresponden con las posiciones de los seis servomotores que se


                                                                               113
env√≠an a continuaci√≥n. Los elementos dentro de la segunda estructura ‚Äúfor‚Äù

antes de pasar a la estructura case son los que se muestran en la figura 73.




              Figura 73 Contenido del segundo bucle ‚Äúfor‚Äù del Bloque B.




B√°sicamente, la funci√≥n de estos elementos es la de encender el LED

correspondiente al servomotor que se va a posicionar y mantenerlo encendido

hasta que se vuelva a realizar el bucle con la siguiente posici√≥n de las

articulaciones.

Dentro de la estructura ‚Äúcase‚Äù de la figura 73 es donde se encuentra la parte

que realiza la transmisi√≥n de las posiciones de los servomotores desde el

ordenador al microcontrolador por medio del puerto serie. La figura 74 muestra

esta parte con todos los elementos claramente diferenciados por medio de

recuadros de colores.




                                                                               114
                     Figura 74 Estructura ‚Äúcase‚Äù del Bloque B.

Los elementos recogidos en el recuadro rojo actualizan el estado de los LEDs

en funci√≥n del estado en el proceso de posicionamiento, de manera que el

usuario puede ver cu√°l es el servomotor al que se le est√° actualizando la

posici√≥n.

La parte correspondiente al env√≠o del dato, donde en este caso el dato equivale

a un valor de posicionamiento, est√° situada en el recuadro azul. El bloque que

se aprecia dentro del recuadro pertenece a un subprograma que se explica en

el siguiente apartado.

El recuadro de color morado contienen los elementos que analizan la respuesta

desde el microcontrolador. Una vez que el servomotor se ha posicionado

correctamente, el bloque ‚ÄúPIC‚Äù (subprograma) devuelve un valor 1 (‚ÄúTrue‚Äù)

permitiendo salir del bucle y continuar con el resto del programa.



                                                                            115
En el caso de que se seleccione el modo de crear secuencia, dentro de este

bucle ‚Äúwhile‚Äù, el contenido que recoge el recuadro de color amarillo, almacena

la posici√≥n del brazo dentro de un bloc de notas de forma consecutiva,

dependiendo del valor de las pesta√±as deslizantes.

Finalmente, un vez se s le del bucle ‚Äúwhile‚Äù, dentro del recuadro negro, el

programa analiza si se siguen transmitiendo datos de posicionamiento por el

puerto serie o se pasa de nuevo al modo manual.

SUBPROGRAMAS

En la figura 68 aparecen 2 subprogramas. En el recuadro verde aparece un

s√≠mbolo de interrogaci√≥n en uno de los bloques, el contenido de ese bloque se

presenta en la figura 75 y se encarga de abrir el archivo con extensi√≥n *.PDF

que contiene el manual de ayuda de la aplicaci√≥n.




                           Figura 75 Bloque de ayuda.

En el recuadro naranja se puede apreciar un bloque con el nombre ‚ÄúORD o

MAN?‚Äù cuyo formato interno se muestra en la figura siguiente (Figura 76).




                         Figura 76 Bloque ‚ÄúOrd o Man?‚Äù

Este bloque se encarga de transmitir por el puerto serie el valor de

comunicaci√≥n correspondiente seg√∫n se requiera un control remoto por

                                                                            116
ordenador o volver al modo manual. Una vez el microcontrolador recibe esta

informaci√≥n, este responde verificando que ha recibido la informaci√≥n y

actuando en consecuencia a la informaci√≥n recibida. Se puede apreciar que

dentro de este bloque aparecen otros dos sub-bloques, los cuales se explican

en los siguientes p√°rrafos.

Empezando desde la izquierda aparece un bloque con el nombre ‚ÄúEscribe en

Puerto Serie‚Äù cuyo contenido se muestra en la figura 77. Este bloque limpia el

buffer de escritura cada vez que se env√≠a un dato desde el ordenador y espera

10ms despu√©s de cada escritura para posteriormente cerrar la comunicaci√≥n

desde la aplicaci√≥n con el puerto serie.




                    Figura 77 Bloque ‚ÄúEscribe en Puerto Serie‚Äù.

M√°s a la derecha (en la figura 76) hay un bloque con el nombre de ‚ÄúPIC‚Äù Este

bloque contiene los elementos de la figura 78.




                              Figura 78 Bloque ‚ÄúPIC‚Äù.


                                                                          117
Este bloque lee un dato enviado desde el microcontrolador y en el caso de que

ese dato sea 0x02 la aplicaci√≥n de LabVIEW responde que el dato ha sido

recibido correctamente mediante el env√≠o de un dato con el valor 0x01, esto

provoca que la salida de este bloque tenga un valor afirmativo (true). En caso

de que el valor no se haya recibido correctamente, la respuesta de este bloque

es un valor negativo (false).

Finalmente aparece otro bloque dentro de la figura 78 con el nombre ‚ÄúLectura

Byte Control‚Äù que como su nombre indica es el encargado de leer los bytes de

control que el microcontrolador manda mediante la comunicaci√≥n serie al

ordenador para que este, mediante la aplicaci√≥n en LabVIEW, los interprete y

act√∫e en consecuencia. La figura 79 muestra el contenido de este √∫ltimo

m√≥dulo de la categor√≠a clasificada como subprograma.




                      Figura 79 Bloque ‚ÄúLectura Byte Control‚Äù.

En este bloque se vac√≠a el buffer de lectura y se espera un tiempo de seguridad

de 10ms para leer correctamente el dato. Una vez le√≠do el dato se cierra la

comunicaci√≥n para que el puerto seleccionado pueda ser utilizado por otros

dispositivos si fuese necesario.



                                                                           118
CAP√çTULO VI: EXPOSICION Y ANALISIS DE LOS RESULTADOS




                                                  119
EXPOSICION Y ANALISIS DE LOS RESULTADOS

  6.1.       DETERMINACI√ìN DE LOS VALORES DE LA MATRIZ T

                                                                              x5
                   z2                  z3                x4


                        x2                  x3                z4                   z5

                  y2                  y3           y4
                                                                         y5




                   z1


                        x1

                  y1




                             Base




             z0    y0


                        x0




 Figura 80 An√°lisis de los cinco grados de libertad para determinar valores de matriz

                                           homog√©nea T

                                         ùëêùëúùë†1 0         ùë†ùëíùëõ1 0
                                 0      ùë†ùëíùëõ1 0          ùëêùëúùë†1 0
                                  ùê¥1 = (                       )
                                          0 ‚àí1            0 ùëë1
                                          0   0           0 1
                                         ùë†ùëíùëõ1    ùëêùëúùë†2     0 ùëë2
                                         ùëêùëúùë†     ùë†ùëíùëõ2     0 0)
                                 1
                                   ùê¥2 = ( 1
                                            0    0        1 0
                                            0    0        0 1

                       Articulaci√≥n         Œ∏      d               a   Œ±

                             1             q1     d1               0   -90




                                                                                        120
                          2            q2          0        d2      0

                          3            q3          0        d3      0

                          4          q4-90         0        d4     -90

                          5            q5         d5        0       0



                                      ùëêùëúùë†3    ‚àíùë†ùëíùëõ3       0 ùëë3
                              2      ùë†ùëíùëõ3      ùëêùëúùë†3       0 0)
                               ùê¥3 = (
                                             0 0          1 0
                                             0 0          0 1

                                 ùë†ùëíùëõ4 0           ùëêùëúùë†4     ùëë4 ùë†ùëíùëõ4
                         3       ‚àíùëêùëúùë†4 0          ùë†ùëíùëõ4    ‚àíùëë4 ùëêùëúùë†4
                          ùê¥4 = (                                   )
                                  0 ‚àí1                   0 0
                                  0    0                 0 1
                                      ùëêùëúùë†5    ‚àíùë†ùëíùëõ5       0 0
                              4      ùë†ùëíùëõ5      ùëêùëúùë†5       0 0)
                               ùê¥5 = (
                                             0 0          1 ùëë5
                                             0 0          0 1

Para obtener la matriz de transformaci√≥n (T) entre la base y el extremo del

robot hay que multiplicar por las diferentes matrices de transformaci√≥n entre el

sistema 0 y el sistema 6. Se proceder√° de la siguiente forma:

                           ùëá = 1ùê¥2 ‚àô 2ùê¥3 ‚àô 3ùê¥4 ‚àô 4ùê¥5 = 0ùê¥5

Entonces la matriz de transformaci√≥n homog√©nea quedar√≠a de la siguiente

forma:
                                    ùëõùë•       ùëúùë•    ùëéùë•     ùëùùë•
                                    ùëõ        ùëúùë¶    ùëéùë¶     ùëùùë¶
                                 ùëá=( ùë¶                       )
                                    ùëõùëß       ùëúùëß    ùëéùëß     ùëùùëß
                                     0        0     0     ùë§

   (1, 1) = ùëêùëúùë†5 ùë†ùëíùëõ4 ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùëêùëúùë†5 ùë†ùëíùëõ4 ùëêùëúùë†1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 + ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†4 ùëêùëúùë†5 ùë†ùëíùëõ3
                   + ùëêùëúùë†1 ùë†ùëíùëõ2 ùëêùëúùë†3 ùëêùëúùë†4 ùëêùëúùë†5 + ùë†ùëíùëõ1 ùë†ùëíùëõ5

  (1, 2) = ‚àíùë†ùëíùëõ5 ùë†ùëíùëõ4 ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†3 + ùë†ùëíùëõ4 ùë†ùëíùëõ5 ùëêùëúùë†1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 ‚àí ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ5 ùë†ùëíùëõ3
                 + ùëêùëúùë†1 ùë†ùëíùëõ2 ùëêùëúùë†3 ùëêùëúùë†4 ùë†ùëíùëõ5 + ùë†ùëíùëõ1 ùëêùëúùë†5

(1, 3) = ùëêùëúùë†4 ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùëêùëúùë†4 ùëêùëúùë†1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 ‚àí ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ3 ‚àí ùëêùëúùë†1 ùë†ùëíùëõ2 ùëêùëúùë†3 ùë†ùëíùëõ4




                                                                                             121
(1, 4) = ùëë4 ùë†ùëíùëõ4 ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùëë4 ùë†ùëíùëõ4 ùëêùëúùë†1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 + ùëë4 ùëêùëúùë†1 ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ3 + ùëë3 ùëêùëúùë†1 ùëêùëúùë†2
                + ùëë2 ùëêùëúùë†1

        (2, 1) = ùëêùëúùë†5 (ùë†ùëíùëõ1 ùë†ùëíùëõ4 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùë†ùëíùëõ4 ùë†ùëíùëõ1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 + ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ1 ùë†ùëíùëõ3
                        + ùë†ùëíùëõ1 ùëêùëúùë†3 ùëêùëúùë†4 ùë†ùëíùëõ2 ) + ùë†ùëíùëõ1 ùë†ùëíùëõ5

       (2, 2) = ‚àíùë†ùëíùëõ5 (ùë†ùëíùëõ1 ùë†ùëíùëõ4 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùë†ùëíùëõ4 ùë†ùëíùëõ1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 + ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ1 ùë†ùëíùëõ3
                      + ùë†ùëíùëõ1 ùëêùëúùë†3 ùëêùëúùë†4 ùë†ùëíùëõ2 ) + ùë†ùëíùëõ1 ùëêùëúùë†5

(2, 3) = ùë†ùëíùëõ1 ùëêùëúùë†4 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùëêùëúùë†4 ùë†ùëíùëõ1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 ‚àí ùëêùëúùë†2 ùë†ùëíùëõ4 ùë†ùëíùëõ1 ùë†ùëíùëõ3 ‚àí ùë†ùëíùëõ1 ùë†ùëíùëõ2 ùë†ùëíùëõ4 ùëêùëúùë†3

       (2, 4) = ùëë4 ùë†ùëíùëõ1 ùë†ùëíùëõ4 ùëêùëúùë†2 ùëêùëúùë†3 ‚àí ùëë4 ùë†ùëíùëõ4 ùë†ùëíùëõ1 ùë†ùëíùëõ2 ùë†ùëíùëõ3 + ùëë4 ùëêùëúùë†2 ùëêùëúùë†4 ùë†ùëíùëõ1 ùë†ùëíùëõ3
                       + ùëë4 ùë†ùëíùëõ1 ùë†ùëíùëõ3 ùëêùëúùë†2 ùëêùëúùë†4 + ùëë3 ùë†ùëíùëõ1 ùëêùëúùë†2 + ùëë2 ùë†ùëíùëõ1

     (3, 1) = ùë†ùëíùëõ1 (‚àíùë†ùëíùëõ4 ùë†ùëíùëõ2 ùëêùëúùë†3 ‚àí ùë†ùëíùëõ4 ùëêùëúùë†2 ùë†ùëíùëõ3 + ùë†ùëíùëõ2 ùëêùëúùë†4 ùë†ùëíùëõ3 + ùëêùëúùë†2 ùëêùëúùë†3 ùëêùëúùë†4 )

    (3, 2) = ‚àíùë†ùëíùëõ5 (‚àíùë†ùëíùëõ4 ùë†ùëíùëõ2 ùëêùëúùë†3 ‚àí ùë†ùëíùëõ4 ùëêùëúùë†2 ùë†ùëíùëõ3 ‚àí ùë†ùëíùëõ2 ùëêùëúùë†4 ùë†ùëíùëõ3 + ùëêùëúùë†2 ùëêùëúùë†3 ùëêùëúùë†4 )

       (3, 3) = (‚àíùëêùëúùë†4 ùë†ùëíùëõ2 ùëêùëúùë†3 ‚àí ùëêùëúùë†4 ùëêùëúùë†2 ùë†ùëíùëõ3 + ùë†ùëíùëõ2 ùë†ùëíùëõ3 ùë†ùëíùëõ4 ‚àí ùëêùëúùë†2 ùë†ùëíùëõ4 ùëêùëúùë†3 )

 (3, 4) = ùëë4 (‚àíùë†ùëíùëõ4 ùë†ùëíùëõ2 ùëêùëúùë†3 ‚àí ùë†ùëíùëõ4 ùëêùëúùë†2 ùë†ùëíùëõ2 ‚àí ùë†ùëíùëõ2 ùëêùëúùë†4 ùë†ùëíùëõ3 + ùëêùëúùë†2 ùëêùëúùë†3 ùëêùëúùë†4 ) ‚àí ùëë3 ùë†ùëíùëõ2
                 + ùëë1

                                          (4, 1) = 0

                                          (4, 2) = 0

                                          (4, 3) = 0

                                          (4, 4) = 1

   6.2.        ACTIVACION DEL SISTEMA EN EL SERVIDOR

Para comprobar el funcionamiento entre el computador que realizara la funci√≥n

de servidor, y el brazo rob√≥tico una vez conectado al nodo ZigBee y la tarjeta

de control con el microcontrolador PIC16F877A, se pondr√° en funcionamiento

el sistema sin conectar al PC cliente y determinar la respuesta de los

servomotores cuando las articulaciones se pongan en movimiento y determinar

la relaci√≥n entre el √°ngulo recorrido y el √°ngulo medido por los sensores.

As√≠ en el microprograma principal se probara cada articulaci√≥n y se registraran

estos valores para determinar la precisi√≥n del sistema teniendo en cuenta el

√°ngulo m√°ximo que puede recorrer cada articulaci√≥n.




                                                                                            122
Para poner en funcionamiento todo el sistema se inici√≥ por conectar las tarjetas

al brazo rob√≥tico y alimentar cada una de ellas, seguidamente la

conectorizaci√≥n a las E/S, y por √∫ltimo la conexi√≥n de las se√±ales provenientes

de la interfaz teniendo en cuenta los voltajes de referencia de estas se√±ales.

   6.3.      PRUEBAS DE FUNCIONAMIENTO DEL BRAZO ROBOT

A pesar de que para dicho proceso no se requiere un control en lazo cerrado,

se opto durante el proceso de dise√±o mediante la aplicaci√≥n de LabVIEW, para

monitorizar y poder recibir una se√±al que represente la posici√≥n de las

articulaciones del robot.

Se realizaron pruebas con la articulaci√≥n del codo y la inclinaci√≥n de la mu√±eca

adhiriendo al microprograma desarrollado en la estaci√≥n.

La prueba en menci√≥n consiste en comprar los valores establecidos en

coordenadas rectangulares de la posici√≥n del efector final del modo operaci√≥n

COORDENADAS xyz (en mm) con las coordenadas rectangulares obtenidas

mediante el uso del la aplicaci√≥n Math Script que ya se utilizo para validar el

modelo matem√°tico.

La aplicaci√≥n de control del HMI en modo COORDENADAS xyz (mm) basada

en el uso de la herramienta Inverse Kinematics, eval√∫a los valores de las

coordenadas rectangulares del efector final y obtiene como resultado los

correspondientes valores articulares del manipulador que es el objetivo de la

resoluci√≥n del modelo cinem√°tico inverso.

Dichos valores angulares obtenidos son introducidos en la aplicaci√≥n Math

Script que resuelve el problema cinem√°tico directo, con la evaluaci√≥n de las

coordenadas angulares obtenemos los correspondientes valores rectangulares

de la posici√≥n en la que se encuentra el extremo del efector final.


                                                                                 123
 La comparaci√≥n de las coordenadas rectangulares de la posici√≥n del efector

 final entre las dos aplicaciones anteriormente mencionadas se muestra en la

 tabla 3, se realiz√≥ la prueba para siete valores de inter√©s.

Coordenadas              xyz       (mm)         (Inverse Aplicaci√≥n con Math Script   Error
Kinematics)                                                                           relativo
Coordenadas                    Configuraci√≥n              Coordenadas                 promedi
rectangulares                  angular                    rectangulares               o
 x           y       Z             (ùúΩùüè , ùúΩùüê , ùúΩùüë , ùúΩùüí )     x        y            z   (%)
316     0        214.5         (0¬∞,90¬∞,-90¬∞,0¬∞)           315    0          214       0.183

268     167      100           (32¬∞,76¬∞,-112¬∞,36¬∞)        267    166.561    100-395   0.344

301     -130     78            (-23¬∞,66¬∞,-108¬∞,42¬∞)       300    -127.298   77-0923   1.191

201     -98      262           (-26¬∞,123¬∞,-101¬∞,22¬∞)      200    -97.7691   260.445   0.442

275     223      158           (39¬∞,73¬∞,-82¬∞,0¬∞)          275    222.291    158.431   0.197

312     0        0             (0¬∞,40¬∞,-107¬∞, 71¬∞)        312    0          0.346098 0.000

150     -92      268           (-32¬∞,138¬∞,-104¬∞,-35¬∞)     149    -93.3551   268.113   0.727


                         Tabla 3: Error relativo promedio de posicionamiento

      6.4.       VALIDACION DE LA HIPOTESIS

 La hip√≥tesis general planteada para el proyecto es:

 ‚ÄúDesarrollar y construir el m√≥dulo de entrenamiento de un brazo rob√≥tico de

 cinco grados de libertad, dise√±ado en una escala de 1 a 100, implementado en

 LabView monitorizado mediante redes ZigBee, para emular tareas de

 paletizaci√≥n, tanto en modo manual como en modo autom√°tico‚Äù.

 Se utiliza una prueba de hip√≥tesis para las proporciones (Ordo√±ez, 2009), en

 base a los resultados visuales que se obtuvieron considerando:

 Los resultados indican que de 55 piezas para paletizar, el prototipo de brazo

 rob√≥tico de im√°genes paletiz√≥ 52, entonces se puede afirmar que al menos el

 96% de las piezas pudieron ser paletizadas, es decir:

                                                                                            124
                                     ùëõ = 55

                                     ùë• = 52

                                            52
                                     ùëù=
                                            55

                                     ùëùùëú = 96% √≥ 0.96

Se asume una confiabilidad de 95%, el valor correspondiente a Z en la

distribuci√≥n normal es -1.64



                               ùõº = 0.05 ‚Üí ùëß = ‚àí1.645



Hip√≥tesis:                ùêª0 = ùëù > ùëù0

                                      ùêª1 = ùëù < ùëù0
                                      ùë•
                                        ‚àíùëù0
                                      ùëõ
                          ùëß0 =      ùëù (1‚àíùëù0 )
                                   ‚àö 0
                                        ùëõ


                                52
                                     ‚àí 0.96
                                55
                       ùëß0 =                      = ‚àí0.55048188
                                0.96(1‚àí0.96)
                               ‚àö
                                       55


                           ‚à¥ ‚àí0.55048188 > ‚àí1.645

Lo que sugiere que: ‚ÄúNo hay raz√≥n para rechazar la hip√≥tesis ùëØùüé ‚Äù

Por consiguiente, con una confiabilidad del 95% se concluye que al menos el

96% de las piezas pueden ser paletizadas por el prototipo de brazo robot

dise√±ado e implementado

     6.5.      AN√ÅLISIS T√âCNICO-ECON√ìMICO

                                                                           Precio     Importe
N¬∞    Cant.   √çtem     Descripci√≥n                       Caracter√≠sticas
                                                                           unitario   Total
                       Conector           macho      2
1     2       J3.0                                       Di√°metro 5mm      1.85       3.70
                       contactos




                                                                                       125
                       Conector       hembra       2
2    2   J3.1                                          Di√°metro 5mm            1.85    3.70
                       contactos

3    2   SW8           Interruptor de 2 patillas       Interruptor simple      2.10    4.20


4    2   D3            Diodo                           1A, 50V                 1.10    2.20

                                                       1.5¬µF,     25     V,
5    2   C3, CC4       Condensador                                             1.08    2.16
                                                       aluminio

6    1   OSC1          Oscilador                       30MHz 5V                5.45    5.45

                                                       22pF,           25V
7    2   C1, C2        Condensador                                             1.03    2.06
                                                       cer√°mico disco

8    1   RV1           Potenci√≥metro                   10 K‚Ñ¶. 5%, 1/8W         3.50    3.50


9    1   R1            Resistencia                     30 K‚Ñ¶. 5%, 1/8W         1.03    1.03

         SW1, SW2.
10   5   SW3, SW4,     Micropulsador                   4mm, 12V                1.10    5.50
         SW5
         SW6, SW7
11   3                 Micropulsador                   10mm, 12V               1.10    3.30
         RESET
         R2, R3, R4,
12   7   R5, R6, R7    Resistencia                     1 K‚Ñ¶. 5%, 1/8W          1.03    7.21
         ,R8

13   1   R11, R12      Resistencia                     10 K‚Ñ¶. 5%, 1/8W         1.03    1.03


14   1   U1            Microcontrolador                PIC 16F877A             20.20   20.20

                                                       Tira de patillas,
15   2   J2            Conector                        0.5mm con patilla       5.25    10.50
                                                       torneada
                                                       Conector        serie
16   1   J1            Conector                                                1.50    1.50
                                                       DB9

17   1   D1            LED                             3mm, 25¬∞ verde          1.40    1.40


18   1   D2            LED                             3mm. 25¬∞ rojo           1.20    1.20


19   2   R9. R10       Resistencia                     150 ‚Ñ¶. 5%, 1/8W         .1.03   2.06




                                                                                        126
20   1      U2               Circuito integrado                Max232                5.67      5.67

                                                               1¬µF,            25V
21   4      C5, C6, C7       Condensador electrol√≠tico                               1.10      4.40
                                                               electrol√≠tico
                                                               Contactos
22   1      PCI              Placa perforada                   met√°licos por una     20.00     20.00
                                                               cara 10x10cm
            SV1, SV2,
23   3                       Servomotor                        HitecHS-422           60.00     180.00
            SV3
            SV4, SV5,
24   3                       Servomotor                        Est√°ndar Hitech       50.00     150.00
            SV6
                                                               Piezas de acr√≠lico
25   1      MEC              Estructura mec√°nica               para construir la     200.00    200.00
                                                               parte mec√°nica
                             M√≥dulos      de       emisi√≥n,    Transmisi√≥n
26   3      ZigBee                                                                   95.00     285.00
                             recepci√≥n y USB ZigBee            inal√°mbrica
                             Entorno      de      desarrollo
27   1      Autodesk                                           Desarrollo            0.00      0.00
                             (aplicaci√≥n Windows)
                             Depurador/grabador         para   Desarrollo
28   1      PicKit 2                                                                 170.00    170.00
                             ¬µC
            Cable                                              Desarrollo
29   1                       Cable de comunicaci√≥n                                   20.00     20.00
            Serie-USB
                                                               Desarrollo
30   1      Soldador         Equipo de laboratorio                                   40.00     40.00

                                                               Desarrollo
31   1      Desoldador       Equipo de laboratorio                                   12.00     12.00

            Osciloscopi                                        Desarrollo
32   1                       Equipo de laboratorio                                   700.00    700.00
            o
     3                       Conexi√≥n      ADSL         para   Desarrollo
33   (mes   Internet         b√∫squeda de informaci√≥n                                 130.00    390.00
     es)                     en la red
     3                       Para el funcionamiento de         Desarrollo
            Energ√≠a
34   (mes                    los diversos dispositivos y                             30.00     90.00
            el√©ctrica
     es)                     pruebas
            LabView          Aplicaci√≥n                  de    Desarrollo
35   1                                                                               4350.00   4350.00
            2013             instrumentaci√≥n virtual
                             Computador personal para          Desarrollo
36   1      Ordenador                                                                900.00    900.00
                             desarrollo
            Juego       de   Paquete de destornillador         Desarrollo
37   1                                                                               20.00     20.00
            destornillad     con distintas     puntas    de

                                                                                                127
                ores          precisi√≥n


                Alimentaci√≥   Fuente      de    alimentaci√≥n    Desarrollo
38     1                                                                     70.00       70.00
                n             regulable
                                                                Desarrollo
39     4        Impresi√≥n     Tinta de impresora                             90.00       360.00

       2                                                        Desarrollo
                              Para        impresiones     de
40     millar   Papel bond                                                   15.00       30.00
                              informes finales
       es
                              Recargas       virtuales   para   Desarrollo
41     6        Recargas                                                     10.00       60.00
                              terminales m√≥viles
                              Memorias flash para llevar        Desarrollo
42     2        Pendrive                                                     20.00       40.00
                              informaci√≥n

                                     TOTAL                                           8438.97


                                     Tabla 4: An√°lisis t√©cnico

Se abordan temas referentes a los gastos que el proyecto implica en cuanto a

componentes necesarios, as√≠ como los gastos de ingenier√≠a e implementaci√≥n

del mismo.

En la Tabla 4 se presenta el costo de los componentes necesarios para realizar

la implementaci√≥n del prototipo de clasificaci√≥n y paletizado con robot.

Para la estimaci√≥n de costos de Ingenier√≠a, as√≠ como del software; se aplica la

regla de Cocomo (Gavil√°nez y Alb√°n, 2007) la cual se expresa en la ecuaci√≥n

5.1.

                       ùê∂ùëúùë†ùë°ùëú(ùëÅùë¢ùëíùë£ùëúùë†ùëÜùëúùëôùëíùë†) = ùëò ‚àó ùëÅ‚Ñéùëúùëüùëéùë†ùëùùëíùëüùë†ùëúùëõùëé

K = Valor hora profesional en Nuevos Soles. Estimado en 40.00 N.S.

Para calcular el costo de la mano de obra del montaje e implementaci√≥n, se

utiliza el mismo criterio, pero asignando a K un valor de 4.00 N.S.

En la Tabla 4, evidencia el costo de inversi√≥n del proyecto en cuanto a

personal, considerando que para el rubro de ingenier√≠a interviene una persona

con una carga laboral neta de 30 d√≠as y 8 horas diarias.

                                                                                          128
Para el montaje e implementaci√≥n, se requiere de una persona con una carga

laboral de 25 d√≠as y 8 horas diarias.

√çtem   Descripci√≥n                K (N.S.)       N (horas de Subtotal

                                                 trabajo)

1      Ingeniera del proyecto     40.00          240           9600.00

2      Montaje                  e 4.00           200           800.00

       implementaci√≥n

                                                 TOTAL         10400.00


                          Tabla 5:Costo de realizaci√≥n

En base a los resultados de la Tabla 4 y la Tabla 5, el costo de inversi√≥n del

proyecto ‚ÄúDesarrollo e implementaci√≥n de un m√≥dulo de entrenamiento de

brazo rob√≥tico de cinco grados de libertad monitorizado mediante redes

ZigBee‚Äù es de 18838.97 nuevos soles.




                                                                          129
CONCLUSIONES


La base del manipulador debe concentrar la mayor inercia posible para darle la

rigidez necesaria a la estructura, cuando esta se encuentra levantando una

carga en movimiento.


En este trabajo desarrollado a manera de prototipo se puede apreciar la gran

importancia y potencialidad del campo de la teleoperaci√≥n en aplicaciones que

involucran la interacci√≥n del ser humano con materiales peligrosos que atenten

de alguna manera a la integridad de los mismos.


Al ser el brazo rob√≥tico un sistema did√°ctico, este presenta varias condiciones

que influyen en el error de posicionamiento mediante el sistema de control

basado en la interfaz humano maquina, entre las que est√°n de manera general;

imperfecciones en la estructura mec√°nica, dise√±o mec√°nico impreciso,

servomotores de modelismo.


De manera general, la dificultad de teleoperar el robot depende de la capacidad

del operador para manejar el sistema, si el operador no conoce completamente

la forma de uso y no ha practicado su uso, tendr√° mas dif√≠cil la tarea de

manipulaci√≥n y monitoreo.




                                                                           130
RECOMENDACIONES


Se recomienda que se realicen mas proyectos con otro tipo de objetivos

pudiendo tomar como referencia este proyecto


Se deben determinar los sistemas de referencia siguiendo criterios establecidos

por un determinado autor ya que existen distintos criterios para realizar la

asignaci√≥n de los sistemas de referencia.


La correcta asignaci√≥n y representaci√≥n de los sistemas de referencia al brazo

rob√≥tico permitir√° una correcta resoluci√≥n de la matriz de transformaci√≥n

homog√©nea.


Para mejorar el desempe√±o del presente proyecto se sugiere experimentar con

m√≥dulos diferentes.


La Escuela Profesional de Ingenier√≠a Electr√≥nica deber√≠a realizar convenios

con m√°s instituciones, tanto p√∫blicas como privadas, para que sus estudiantes

puedan realizar mayores investigaciones, en las tres especialidades por igual,

lo mismo que se deber√≠a alentar a los estudiantes para poder realizarlas.




                                                                            131
BIBLIOGRAFIA


  [1].Barrientos, Antonio (2007). Fundamentos de la Rob√≥tica (2da edici√≥n)

     Espa√±a: McGraw-Hill.

  [2].Ollero Baturone, An√≠bal (2001). Rob√≥tica, manipuladores y robots

     m√≥viles (1ra ed.) Espa√±a: Marcombo Boixareu Editores.

  [3].Craig, John J. (2006). Rob√≥tica (1ra ed.) Stanford University: Pearson

     Prentice Hall.

  [4].Craig, John J. (2008). Introduction to robotics: Mechanics and control

     (3rd ed.) Stanford University: Pearson Prentice Hall.

  [5].Vivas Alban, Oscar Andres (2010) Dise√±o y control de robots

     industriales: teor√≠a y pr√°ctica (1ra ed.) Colombia: Elaleph.com S.R.L.

  [6].Palacios, Enrique & Remiro, Fernando & L√≥pez, Lucas (2009)

     Microcontrolador PIC16F84, desarrollo de proyectos (3ra ed.) Espa√±a:

     Alfaomega RA-MA

  [7].Gislason, Drew (2008). Zigbee wireless networking (1st ed.) Oxford,

     Reino Unido: Newnes-Elsevier.

  [8].Mendoza S√°nchez Eduardo Augusto (2004) Control de un Robot

     Manipulador (tesis de Maestr√≠a), Universidad de las Am√©ricas, Puebla-

     M√©xico.

  [9].Gonz√°lez, V√≠ctor R (2007) Curso 2007: Fundamentos de Rob√≥tica

     (disertaci√≥n doctoral) Centro de Formaci√≥n del Profesorado e Innovaci√≥n

     Educativa Valladolid II, Valladolid-Espa√±a.

  [10].    Parra M√°rquez, Juan Carlos & Cid Cifuentes, Karina Pilar (2007);

     Implementaci√≥n de Robot Scorboter-vplus, para docencia, en realidad

     virtual, Revista Digital Universitaria UNAM, 8 (5) ,14-19.

                                                                              132
