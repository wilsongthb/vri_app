UNIVERSIDAD NACIONAL DEL ALTIPLANO - PUNO
FACULTAD DE INGENIERÍA ESTADÍSTICA E INFORMÁTICA
ESCUELA PROFESIONAL DE INGENIERÍA ESTADÍSTICA E INFORMÁTICA

TESIS
SISTEMA DE INFORMACIÓN PARA LA ADMINISTRACIÓN DE
PROGRAMAS SOCIALES (SIAPS) EN LA MUNICIPALIDAD
PROVINCIAL DE AZÁNGARO - 2014

PRESENTADA POR:

Bach. CÉSAR AURELIO HUANCA SUAQUITA
PARA OPTAR EL TÍTULO PROFESIONAL DE:

INGENIERO ESTADÍSTICO E INFORMÁTICO
PUNO – PERÚ
2015

ÁREA: Informática
TEMA: Sistemas de información

II

DEDICATORIA
________________________________________________

A mi queridos padres Alejandra y Aurelio Huanca, no me
equivoco si digo que son los mejores padres del mundo,
gracias por todo su esfuerzo, su apoyo y la confianza que
depositaron en mí, este es un logro que quiero compartir
con ustedes. Gracias por ser mis padres y por creer en mí.
Quiero que sepan que ocupan un lugar muy especial dentro
de mi corazón. Los quiero mucho. A toda mi familia, en
especial a mi esposa Vilma, a mi hijo Bryce quienes son la
alegría de mi vida.

César A.H.S.

i

AGRADECIMIENTOS
________________________________________________
A Dios, por haberme dado sabiduría, fortaleza, salud,
coraje y no dejarme solo en los momentos difíciles, y
haberme permitido llegar a la meta en este gran trabajo.
A mis Padres, que siempre me han dado su apoyo
incondicional y a quienes debo este triunfo profesional, por
todo su trabajo y dedicación para darme una formación
académica y sobre todo humanista y espiritual, de ellos es
este triunfo y para ellos es todo mi agradecimiento.
Para mis hermanos, Richard, Raúl, Yessica y Devid, para
que también continúen superándose y todas aquellas
personas que con su ayuda han colaborado en la
realización del presente trabajo de investigación.
César A.H.S.

ii

ÍNDICE
RESUMEN
INTRODUCCIÓN
CAPÍTULO I
PLAN DE INVESTIGACIÓN
1.1.

EL PROBLEMA ........................................................................................... 1

1.2.

JUSTIFICACIÓN .......................................................................................... 2

1.3.

OBJETIVOS................................................................................................. 3

1.4.

HIPÓTESIS GENERAL................................................................................ 3
CAPÍTULO II
MARCO TEÓRICO

2.1.

ANTECEDENTES DE LA INVESTIGACIÓN ............................................... 4

2.2.

BASE TEÓRICA .......................................................................................... 5

2.3.

DEFINICIÓN DE TÉRMINOS BÁSICOS ................................................... 18
CAPÍTULO III
MATERIALES Y MÉTODOS

3.1.

POBLACION DE LA INVESTIGACION...................................................... 19

3.2.

MUESTRA ................................................................................................. 19

3.3.

DETERMINACION DEL TAMAÑO DE MUESTRA .................................... 19

3.4.

MÉTODOS................................................................................................. 20

3.5.

MÉTODO DE TRATAMIENTO DE DATOS ............................................... 21

3.6.

SISTEMA DE VARIABLES ........................................................................ 24

3.7.

METODOLOGÍA DE DESARROLLO DEL SISTEMA ................................ 25

3.8.

MATERIAL INSTRUMENTAL .................................................................... 54
CAPÍTULO IV
RESULTADOS Y DISCUSIÓN

4.1.

EL SOFTWARE SEGÚN ISO – 9126 ....................................................... 56

CONCLUSIONES ................................................................................................ 65
RECOMENDACIONES Y SUGERENCIAS .......................................................... 67
BIBLIOGRAFÍA ................................................................................................... 68
ANEXOS .............................................................................................................. 71
iii

ÍNDICE DE FIGURAS
Figura N° 1: Diagrama de secuencias ....................................................................... 22
Figura N° 2: Diagrama de caso de uso del administrador ......................................... 23
Figura N° 3: Diagrama de caso de uso del administrador ......................................... 23
Figura N° 4: Programación Extrema XP Fuente: (PRESMAN, 2009) ........................ 25
Figura N° 5: Plan de entrega de las iteraciones ........................................................ 29
Figura N° 6: Cronograma: Módulo Registro .............................................................. 30
Figura N° 7: Cronograma: Módulo Operación ........................................................... 31
Figura N° 8: Cronograma: Módulo Mantenimiento .................................................... 32
Figura N° 9: Cronograma: Informes .......................................................................... 33
Figura N° 10: Esquema de la interfaz del Sistema .................................................... 36
Figura N° 11: Interfaz final del Sistema ..................................................................... 36
Figura N° 12: Interfaz Gestionar Datos de Beneficiarios ........................................... 37
Figura N° 13: Interfaz Actualiza y Gestionar Beneficiarios ........................................ 38
Figura N° 14: Interfaz Gestiona Datos de Productos................................................. 38
Figura N° 15: Interfaz Gestiona Datos Productos...................................................... 39
Figura N° 16: Interfaz Gestionar datos de Proveedor ................................................ 39
Figura N° 17: Interfaz Gestiona y Actualiza Datos de Proveedor .............................. 40
Figura N° 18: Interfaz Gestionar datos de Empleado y/o Funcionario....................... 40
Figura N° 19: Interfaz Gestiona y Actualiza Datos de Empleado y/o Funcionario ..... 41
Figura N° 20: Interfaz Gestionar Pecosas ................................................................. 41
Figura N° 21: Interfaz Gestionar Pecosas de Ventas, Comprar, Donaciones, .......... 42
Figura N° 22: Interfaz Gestionar Nota de Entrada de Almacén NEA ......................... 42
Figura N° 23: Interfaz Gestionar Pecosas de Ventas, Comprar, Donaciones, .......... 43

iv

Figura N° 24: Interfaz Gestionar Categoría ............................................................... 43
Figura N° 25: Interfaz Gestionar Informes, Semanales, Mensuales, Anuales ........... 44
Figura N° 26: Modelo Relacional de la Base de Datos 1 ........................................... 45
Figura N° 27: Modelo Relacional de la Base de Datos 2........................................... 46
Figura N° 28: Tarjeta CRC Registro .......................................................................... 48
Figura N° 29: Tarjeta CRC Operación ....................................................................... 48
Figura N° 30: Tarjeta CRC Mantenimiento ................................................................ 48
Figura N° 31: Tarjeta CRC Informes de Pecosa y Nea ............................................. 49
Figura N° 32: Vistas del Sistema ............................................................................... 50
Figura N° 33: Paquetes del Sistema ......................................................................... 51
Figura N° 34: Código de configuración ...................................................................... 52
Figura N° 35 Promedio General de las Fichas de Evaluación ISO-9126 .................. 56
Figura N° 36 Medición de Calidad del Software ....................................................... 58
Figura N° 37 Acceso al sistema de base de datos ................................................... 60
Figura N° 38 Apreciación sobre el uso de la Interface del Sistema .......................... 61
Figura N° 39 Sistema proporciona todos los medios................................................. 62

ÍNDICE DE TABLAS
Tabla N° 1: Población del Personal Administrativo ................................................... 20
Tabla N° 2: Operacionalización de Variables ............................................................ 24
Tabla N° 3: Velocidad de Implementación del Software ............................................ 27
Tabla N° 4: División en Iteraciones del desarrollo del Software ................................ 28
Tabla N° 5: Planificación de Tareas: Módulo de Registro ......................................... 30
v

Tabla N° 6: Planificación de Tareas: Módulo Operación ........................................... 31
Tabla N° 7: Planificación de Tareas: Módulo Mantenimiento .................................... 32
Tabla N° 8: Planificación de Tareas: Módulo de Informes ......................................... 33
Tabla N° 9: Distribución de roles XP ......................................................................... 34
Tabla N° 10: Procesamiento de las Funciones del Software ..................................... 52
Tabla N° 11: Factores de Calidad del Software ........................................................ 53
Tabla N° 12: Resumen de las fichas de evaluación .................................................. 57
Tabla N° 13: Medición de Calidad del Software Estándar ISO – 9126 ...................... 58
Tabla N° 14:Resultados del Uso de la inteface del Sistema ..................................... 61
Tabla N° 15:Proporcion de Medios para las iteraciones ............................................ 61

vi

RESUMEN
En esta investigación presentamos el análisis y diseño de los sistemas de información
para la automatización de los procesos de administración, basada en la potencia de
los lenguajes de programación PHP, AJAX, JAVASCRIPT y MYSQL, también su
importancia de su funcionalidad sobre cualquier sistema operativo, mejorando y
simplificando el manejo de la información de los programas sociales. La metodología
empleada para el desarrollo del sistema de información, está basado en la
metodología XP, con cuatro variables para cualquier proyecto de software: planeación,
diseño, codificación y pruebas. Para el desarrollo del proyecto en mención se realizó
el uso de análisis y modelamiento del sistema utilizando Lenguaje de Modelamiento
Unificado (UML). El procesamiento de la información fue implementado gradualmente
y adaptándolo a la necesidad del personal administrativo del área de programas
sociales, lo que permitió llegar a las siguientes conclusiones. La prueba del software,
se realizó en la oficina de Programas Sociales de la Municipalidad Provincial de
Azángaro, basado en la tecnología web para el manejo administrativo. El análisis y
modelamiento fue fundamental para el desarrollo de la presente investigación,
lográndose la Implementación del Sistema Información para la Administración de
Programas Sociales (SIAPS), utilizando un sistema de base de datos en línea. Este
sistema de Información fue implementado por primera vez. Aceptado con un 61 % de
los requisitos del ISO - 9126, en un 90% el sistema aprueba el estándar ISO-9126.
Palabras clave: automatización, procesos, gestión, modelamiento

vii

ABSTRACT
In this research we present the analysis and design of information systems for
automating management processes, based on the power of programming languages
PHP, AJAX, JAVA SCRIPT and MYSQL, also the importance of its functionality on any
OS improving and simplifying the management of information for social. The
methodology for the development of this system is based on the XP methodology, this
defines four variables for any software project: planning, design, coding and testing.
For the project in question using analysis and system modeling using Unified Modeling
Language (UML) was performed. The information processing was gradually
implemented and adapted to the need of administrative staff in the area of social
programs, which allowed to reach the following conclusions. Software testing was
conducted in the office of Social Programs of the Provincial Municipality of Azángaro,
web-based technology for administrative management. The analysis and modeling
was instrumental in the development of this research. Implementation of Management
Information System of Social Programs (SIAPS) using a database system is managed
online. This information system was first implemented.
Keywords: automation, process management, modeling

viii

INTRODUCCIÓN
Cuando se desarrolla un sistema, finalmente lo que se logra es que mejoren los
procesos de una organización, hoy en día el manejo adecuado de la información en
una organización, es un impacto estratégico y la oportunidad de tener una ventaja
competitiva frente a otras organizaciones. Teniendo en cuenta que el funcionamiento
en el entorno ayuda a producir un cambio realmente significativo. El crecimiento
exponencial del volumen de información que se produce en la oficina de programas
sociales y el consiguiente crecimiento de la complejidad de la gestión de dicho
volumen de información de los beneficiarios directos de los diferentes programas
sociales en la Municipalidad Provincial de Azángaro.
Para el procesamiento de la información se desarrolló el Sistema de Información para
la Administración de Programas Sociales (SIAPS), con cuatro módulos: Registro,
Operaciones, Mantenimiento, Informes, están implementadas en el lenguaje de
programación HTML y PHP, lenguaje de procesamiento JAVASCRIPT, Lenguaje de
consulta de datos MYSQL y la capa de procesamiento dinámico AJAX, se ha
documentado los procesos para agregar más programas sociales. Esto permitirá al
usuario un manejo de información más dinámico, pero sobre todo obtener una
aplicación portable y ejecutable desde cualquier dispositivo.
En el primer capítulo se detalla el planteamiento del problema, justificación, los
objetivos de la investigación y posteriormente se formula la hipótesis de la
investigación.

ix

En el segundo capítulo se desarrolla el marco teórico, se constituyen los antecedentes
considerados en el trabajo de investigación, el marco conceptual comprende todo lo
relacionado con los términos utilizados en la investigación, describiéndose
sintéticamente algunos de los principales conceptos.
En el tercer capítulo se detalla los métodos e instrumentos que se utilizó en la
investigación; también se determina el tipo de investigación cuantitativa con diseño
cuasi experimental; sistema de variables, material experimental, métodos de
recopilación de datos, método de tratamiento de datos y metodología de desarrollo.
En el cuarto capítulo, denominado resultados y discusión, está constituido por la
prueba de hipótesis.
Finalmente se tiene las conclusiones alcanzadas en la investigación, las
recomendaciones respectivas y los anexos.

x

CAPÍTULO I
PLAN DE INVESTIGACIÓN
1.1. EL PROBLEMA
La Municipalidad Provincial de Azángaro desde su gerencia de desarrollo social,
agrupa a diferentes programas sociales además de contar con una serie de
apoyos del gobierno nacional, existen múltiples deficiencias en el manejo e
integración de la información como llevar el control administrativo, registro,
procesamiento, distribución, control documentario y personal administrativo.
Hoy en día el manejo adecuado de la información en una organización, es un
impacto estratégico y la oportunidad de tener una ventaja competitiva frente a
otras organizaciones. Y teniendo en cuenta que el funcionamiento en el entorno
ayuda a producir un cambio realmente significativo.
Para las organizaciones es vital la existencia de una gran comunicación interna
entre sus diferentes direcciones y externa con sus clientes y proveedores,
además es importante que el flujo de información cada vez sea más rápido y se
pueda tomar decisiones oportunas para resolverlos, El crecimiento exponencial
del volumen de información que se produce en la oficina de programas sociales
y el consiguiente crecimiento de la complejidad de la gestión de dicho volumen

1

de información de los beneficiarios directos de los diferentes programas sociales
en la Municipalidad Provincial de Azángaro.
1.2. JUSTIFICACIÓN
El presente trabajo de investigación surge por la necesidad de contar con un
sistema de información para los diferentes programas sociales de la
Municipalidad Provincial de Azángaro, debido al incremento de nuevos
programas sociales y nuevos beneficiarios, por lo tanto no se cuenta con
información a tiempo real de los programas sociales realizados, es donde surge
dicha investigación, que al final para llevar a cabo esta investigación se ha
superado dichos inconvenientes. El sistema redujo el tiempo que se demoraría
normalmente el registro, operaciones e informes, que se realizaba manualmente,
lo que generaría largas colas y retraso en el en la atención a los beneficiarios de
los diferentes programas sociales.
Para el desarrollo, se cuenta la metodología de Programación Extrema para un
proceso iterativo durante el análisis, implementación y pruebas de ejecución,
mejorando en cada iteración los elementos nuevos para el procesamiento de la
información de los diferentes programas sociales.
Fueron razones para el desarrollo del Sistema de Información para la
Administración de Programas Sociales (SIAPS), para mejorar la Gestión de la
Información de la Gerencia de Desarrollo Social. Cuyo desarrollo fortaleció el
logro óptimo de los objetivos Sociales.

2

1.3. OBJETIVOS
1.3.1

OBJETIVO GENERAL

Desarrollar e Implementar un sistema de información (SIAPS) para la
automatización de los procesos de Administración de Recursos y Apoyos
Sóciales en la Gerencia de Desarrollo Social.
1.3.2


OBJETIVOS ESPECÍFICOS

Obtener los requerimientos de la Gerencia de Desarrollo Social de la
Municipalidad Provincial de Azángaro.



Analizar y Diseñar el Sistema de Información aplicando PHP, AJAX, JAVA
SCRIPT, además de MySQL como gestor de base de datos para el sistema
de información (SIAPS).



Evaluar la mejora de los procesos de la información del sistema de
información (SIAPS), con ayuda del Sistema.



Validar el software con una interfaz sencilla, clara y amigable.

1.4. HIPÓTESIS GENERAL
EL sistema de información (SIAPS) para la automatización de los procesos de
Administración de Recursos y Apoyos Sociales, mejora la Gestión de la
Información de la Gerencia de Desarrollo Social.

3

CAPÍTULO II
MARCO TEÓRICO
2.1. ANTECEDENTES DE LA INVESTIGACIÓN
Tito, J. (2003), Los sistemas de información proporcionan datos de una forma
eficaz de administración de personal administrativo y documentario que agiliza
los trámites burocráticos y se tiene acceso a la información desde cualquier
estación con una información sólida y única.
FLORES, J. (2004). El Desarrollo de un Portal Académico utilizando
herramientas con licencia GNU GPL optimiza la gestión académica en la
Universidad Nacional del Altiplano, los requerimientos del análisis se diseñó del
portal web académico empleando human computer interface y conceptos de
usabilidad para permitir interfaces amigables para el usuario y responder a los
requerimientos de este. Para la Implementación del Portal se utilizó herramientas
con Licencia GNUGPL las cuales no tienen Costo de licenciamiento. De acuerdo
a las pruebas y encuestas se obtuvo que los estudiantes y docentes se adapten
al uso de Portal Web Académico en las gestiones que realiza”.

4

Hernández C. D, (2007), demuestra que los Programas Sociales de apoyo
alimentario alcanzaron sus metas, objetivos, misión y visión institucional
solamente si funcionan en el contexto de la gestión estratégica.
POCOHUANCA, G. (2011). Con el Sistema basado en la Plataforma JEE
optimiza en un 90% en los procesos de gestión de la Oficina de Administración
Tributaria y Rentas de la Municipalidad Provincial de Huancané, de acuerdo a
las pruebas y encuestas se obtuvo que los trabajadores Administrativos y
Contribuyentes se beneficien y adaptan al uso del Sistema. La aceptación del
trabajador administrativo fue total y aplicando la prueba de Hipótesis con una α
= 0.05, se obtuvo que t =16.78 > tα0.05 = 2.132 concluyéndose que el sistema
Optimiza en los procesos de gestión de la Oficina de Administración Tributaria y
Rentas”.
2.2. BASE TEÓRICA
2.2.1.

Programas Sociales.

Un programa puede ser un listado de temas, una planificación, el anticipo de algo
o un proyecto. Social, por su parte, es el adjetivo que califica a aquello vinculado
a la sociedad (la comunidad de personas que mantienen interacciones y
comparten una cultura).
Puede decirse que un programa social es una iniciativa destinada a mejorar las
condiciones de vida de una población. Se entiende que un programa de este tipo
está orientado a la totalidad de la sociedad o, al menos, a un sector importante
que tiene ciertas necesidades aún no satisfechas.

5

La mayoría de los programas sociales son desarrollados por el Estado, que tiene
la responsabilidad de atender las necesidades de todas las personas. Un
gobierno de este modo puede poner en marcha planes que busquen garantizar
el acceso a la educación, campañas de prevención para cuidar la salud o
iniciativas para combatir la desnutrición infantil, entre otros.
Los programas sociales, como el de transferencias condicionadas, alivian la
pobreza extrema de manera inmediata, pero no solucionan el problema de largo
plazo y menos la desigualdad en el país. “Los programas sociales pueden
proteger de los efectos de la pobreza extrema pero este efecto es de corto plazo,
no va a reducir el problema a largo plazo”, (Eric Maskin1, 2007).
2.2.2.

Software.

El Software es el soporte lógico e inmaterial que permite que la computadora
pueda desempeñar tareas inteligentes enlazados a una red de datos online,
dirigiendo a los componentes físicos o hardware con instrucciones y datos a
través de diferentes tipos de programas (Pressman, 2009).
El Software son los programas de aplicación y los sistemas operativos, que
según las funciones que realizan pueden ser clasificados en:


Software de Sistema: Se llama Software de Sistema o Software de Base
al conjunto de programas que sirven para interactuar con el sistema,
confiriendo control sobre el hardware, además de dar soporte a otros
programas.

1

Nobel 2007. Eric Maskin, recibió el Premio Nobel en Economía en el 2007
6



Software de Aplicación: El Software de Aplicación son los programas
diseñados para o por los usuarios para facilitar la realización de tareas
específicas en la computadora, como pueden ser las aplicaciones
ofimáticas (procesador de texto, hoja de cálculo, programa de
presentación, sistema de gestión de base de datos), u otros tipos de
software especializados como software médico, software educativo,
editores de música, programas de contabilidad.



Software de Programación: El Software de Programación es el conjunto
de herramientas que permiten al desarrollador informático escribir
programas usando diferentes alternativas y lenguajes de programación.

2.2.3.

Automatización

La automatización de procesos informáticos en una red informática hace más
seguros y fiables los sistemas informáticos ofreciendo una mayor seguridad y
optimización de la red informática. Esta automatización se puede programar a
intervalos diferentes según el proceso (Pressman, 2009), por ejemplo las
automatizaciones más comunes serían las siguientes:


Actualización de los parches de seguridad



Actualización de los antivirus/antispyware tres veces al día.



Escaneos periódicos de los antivirus/antispyware



Ejecución de copias de seguridad Locales y Remotas.



Limpiezas de archivos temporales



Auditorías de Hardware y Software en la red



Instalación de software en toda la institución Pública y/o privada

7

Un sistema de automatización2 permite realizar un mantenimiento a todos los
ordenadores sin necesidad de estar presente físicamente en cada ordenador.
2.2.4.

Puntos de Función

Es una métrica que permite traducir en un número el tamaño de la funcionalidad
que brinda un producto de software desde el punto de vista del usuario, a través
de una suma ponderada de las características del producto.
Las métricas orientadas a la función fueron propuestas por primera vez por Allan
Albretch, 20073. Una extensión del punto de función es la llamada puntos de
características; es una ampliación de la medida del punto de función que se
puede aplicar a sistemas y aplicaciones de ingeniería del software. La medida
de punto de característica acomoda a aplicaciones en donde la complejidad del
algoritmo es alta. Las aplicaciones de software de tiempo real, de
control de procesos, y empotradas tienden a tener alta complejidad de
algoritmos y por lo tanto son adecuadas para el punto de característica. Los
puntos de función se derivan con una relación empírica según las medidas
contables (directas) del dominio de información del software y las evaluaciones
de la complejidad del software.


EI: Procesos en los que se introducen datos y que suponen la
actualización.



de cualquier archivo interno.



EO: Procesos en los que se envía datos al exterior de la aplicación.

2

Extraído de http://automating.wordpress.com/

3

Allan Albrecht, de IBM, ("Measuring Application Development Productivity
8



EQ: Procesos consistentes en la combinación de una entrada y una
salida, en el que la entrada no produce ningún cambio en ningún archivo
y la salida no contiene información derivada.



ILF: Grupos de datos relacionados entre sí internos al sistema.



EIF: Grupos de datos que se mantienen externamente.

2.2.5.

MÉTRICA DE VALIDACIÓN ISO 9126

ISO 9126 es un estándar internacional para la evaluación de la calidad del
software. Está reemplazado por el proyecto SQuare, ISO 25000:2005, el cual
sigue los mismos conceptos. Este estándar es el más usado. El estándar está
dividido en cuatro partes las cuales dirigen, realidad, métricas externas, métricas
internas y calidad en las métricas de uso y expendido. El modelo de calidad
establecido en la primera parte del estándar, ISO 9126-1, clasifica la calidad del
software en un conjunto estructurado de características y sub-características.
2.2.6.

FUNCIONALIDAD

Un conjunto de atributos que se relacionan con la existencia de un conjunto de
funciones y sus propiedades específicas. Las funciones son aquellas que
satisfacen las necesidades implícitas o explícitas.
Idoneidad - Atributos del software relacionados con la presencia y aptitud de
un conjunto de funciones para tareas especificadas.
Exactitud - Atributos del software relacionados con la disposición de resultados
o efectos correctos o acordados.

9

Interoperabilidad - Atributos del software que se relacionan con su habilidad
para la interacción con sistemas especificados.
Seguridad - Atributos del software relacionados con su habilidad para prevenir
acceso no autorizado ya sea accidental o deliberado, a programas y datos.
Cumplimiento de normas.
2.2.7.

FIABILIDAD

Un conjunto de atributos relacionados con la capacidad del software de mantener
su nivel de prestación bajo condiciones establecidas durante un período
establecido.
Madurez - Atributos del software que se relacionan con la frecuencia de falla por
fallas en el software.
Recuperabilidad - Atributos del software que se relacionan con la capacidad
para restablecer su nivel de desempeño y recuperar los datos directamente
afectos en caso de falla y en el tiempo y esfuerzo relacionado para ello.
Tolerancia a fallos - Atributos del software que se relacionan con su habilidad
para mantener un nivel especificado de desempeño en casos de fallas de
software o de una infracción a su interfaz especificada.
Usabilidad - Un conjunto de atributos relacionados con el esfuerzo necesario
para su uso, y en la valoración individual de tal uso, por un establecido o
implicado conjuntos.

10

Aprendizaje - Atributos del software que se relacionan al esfuerzo de los
usuarios para reconocer el concepto lógico y sus aplicaciones.
Comprensión - Atributos del software que se relacionan al esfuerzo de los
usuarios para reconocer el concepto lógico y sus aplicaciones.
Operatividad - Atributos del software que se relacionan con el esfuerzo de los
usuarios para la operación y control del software
2.2.8.

EFICIENCIA

Conjunto de atributos relacionados con la relación entre el nivel de desempeño
del software y la cantidad de recursos necesitados bajo condiciones
establecidas.
Comportamiento en el tiempo - Atributos del software que se relacionan con
los tiempos de respuesta y procesamiento y en las tasas de rendimientos en
desempeñar su función.
Comportamiento de recursos.
2.2.9.

MANTENIBILIDAD

Conjunto de atributos relacionados con la facilidad de extender, modificar o
corregir errores en un sistema software.
Estabilidad - Atributos del software relacionados con el riesgo de efectos
inesperados por modificaciones.

11

Facilidad de análisis - Atributos del software relacionados con el esfuerzo
necesario para el diagnóstico de deficiencias o causas de fallos, o
identificaciones de partes a modificar.
Facilidad de cambio - Atributos del software relacionados con el esfuerzo
necesario para la modificación, corrección de falla, o cambio de ambiente.
Facilidad de pruebas - Atributos del software relacionados con el esfuerzo
necesario para validar el software modificado.
2.2.10. PORTABILIDAD
Conjunto de atributos relacionados con la capacidad de un sistema software para
ser transferido desde una plataforma a otra.
Capacidad de instalación - Atributos del software relacionados con el esfuerzo
necesario para instalar el software en un ambiente especificado.
Capacidad de reemplazamiento - Atributos del software relacionados con la
oportunidad y esfuerzo de usar el software en lugar de otro software especificado
en el ambiente de dicho software especificado.
Adaptabilidad - Atributos del software relacionados con la oportunidad para su
adaptación a diferentes ambientes especificados sin aplicar otras acciones o
medios que los proporcionados para este propósito por el software considerado.

12

Co-Existencia
- Factores (especificar): Describen la visión externa del software, como es visto
por los usuarios.
- Criterios (construir): Describen la visión interna del software, como es visto por
el desarrollador.
- Métricas (controlar): Se definen y se usan para proveer una escala y método
para la medida.
ISO 9126 distingue entre fallo y no conformidad. Un fallo es el incumplimiento de
los requisitos previos, mientras que la no conformidad es el incumplimiento de
los requisitos especificados. Una distinción similar es la que se establece entre
validación y verificación.
2.2.11. MODELAMIENTO UML
Lenguaje de Modelamiento Unificado
UML (Unifed Modeling Language) es un lenguaje que permite modelar, construir
y documentar los elementos que forman un sistema software orientado a objetos.
Se ha convertido en el estándar de facto de la industria, debido a que ha sido
impulsado por los autores de los tres métodos más usados de orientación a
objetos: Grady Booch, Ivar Jacobson y Jim Rumbaugh. Estos autores fueron
contratados por la empresa Rational Software Co. para crear una notación
unificada en la que basar la construcción de sus herramientas CASE 4. En el

4

CASE : Computer Aided Software Engineering (Ingenieria de Software Asistido por Computadora)
13

proceso de creación de UML han participado, no obstante, otras empresas de
gran peso en la industria como Microsoft, Hewlett-Packard, Oracle o IBM, así
como grupos de analistas y desarrolladores, en un trabajo conjunto por la
estandarización de una metodología y simbología de modelamiento.
Esta notación ha sido ampliamente aceptada debido al prestigio de sus
creadores y debido a que incorpora las principales ventajas de cada uno de los
métodos particulares en los que se basa (principalmente Booch, OMT y OOSE).
UML ha puesto fin a las llamadas "guerras de métodos" que se han mantenido a
lo largo de los 90, en las que los principales métodos sacaban nuevas versiones
que incorporaban las técnicas de los demás. Con UML se fusiona la notación de
estas técnicas para formar una herramienta compartida entre todos los
ingenieros software que trabajan en el desarrollo orientado a objetos.
Uno de los objetivos principales de la creación de UML era posibilitar el
intercambio de modelos entre las distintas herramientas CASE orientadas a
objetos del mercado. Para ello era necesario definir una notación y semántica
común.
Diagramas de Casos de Uso
El caso de uso es una excelente herramienta para estimular a que los usuarios
hablen, de un sistema, desde sus propios puntos de vista. No siempre es fácil
para los usuarios explicar cómo pretenden utilizar un sistema.
La idea es involucrar a los usuarios en las etapas iníciales del análisis y diseño
del sistema. Esto aumenta la probabilidad de que el sistema sea de mayor

14

provecho para la gente a la que ayudara, en lugar de ser un manojo de
expresiones de computación incomprensibles e inmanejables por los usuarios
finales.
Diagramas de Secuencia
Permite plasmar es una secuencia grafica los diferentes pasos a realizar para la
obtención de un proyecto, no tendremos mayores problemas con el nuestro
puesto que la mayoría de estos casos tiene que ser documentada.
Diagramas de Flujo
Aquí podremos graficar la secuencia de acciones y sub-acciones requeridas bajo
condiciones o bucles de iteración repetitiva, en fin una secuencia grafica de
ejecución, para nuestro caso particular de la automatización de la
remasterización de la Imagen ISO original hasta la instalación de nuevos
paquetes, configuraciones varias y finalmente la generación de la Imagen ISO
final y la puesta en prueba de esta.
2.2.12. BASE DE DATOS
Una base de datos o banco de datos es un conjunto de datos pertenecientes a
un mismo contexto y almacenados sistemáticamente para su posterior uso. En
este sentido; una biblioteca puede considerarse una base de datos compuesta
en su mayoría por documentos y textos impresos en papel e indexados para su
consulta. Actualmente, y debido al desarrollo tecnológico de campos como la
informática y la electrónica, la mayoría de las bases de datos están en formato
digital (electrónico), y por ende se ha desarrollado y se ofrece un amplio rango
15

de soluciones al problema del almacenamiento de datos.
Existen programas denominados sistemas gestores de bases de datos, que
permiten almacenar y posteriormente acceder a los datos de forma rápida y
estructurada. Las propiedades de estos DBMS, así como su utilización y
administración, se estudian dentro del ámbito de la informática.
Las aplicaciones más usuales son para la gestión de empresas e instituciones
públicas; También son ampliamente utilizadas en entornos científicos con el
objeto de almacenar la información experimental (Pressman, 2009)
2.2.13. SOFTWARE LIBRE
El software libre (en inglés free software, aunque esta denominación también se
confunde a veces con "gratis" por la ambigüedad del termino en el idioma inglés,
por lo que también se usa "libre software") es la denominación del software que
respeta la libertad de los usuarios sobre su producto adquirido y, por tanto, una
vez obtenido puede ser usado, copiado, estudiado, modificado y redistribuido
libremente a través de otros medios; sin embargo no es obligatorio que sea así,
por lo tanto no hay que asociar software libre a "software gratuito" (denominado
usualmente free ware), ya que, conservando su carácter de libre, puede ser
distribuido comercialmente ("software comercial"). Análogamente, el "software
gratis" o "gratuito" incluye en ocasiones el código fuente; no obstante, este tipo
de software no es libre en el mismo sentido que el software libre, a menos que
se garanticen los derechos de modificación y redistribución de dichas versiones
modificadas del programa. Tampoco debe confundirse software libre con
"software de dominio público". Este último es aquel software que no requiere de
16

licencia, pues sus derechos de explotación son para toda la humanidad, porque
pertenece a todos por igual. Cualquiera puede hacer uso de él, siempre con fines
legales y consignando su autoría original.
2.2.14. GESTIÓN DE LA INFORMACIÓN.
La Gestión de la información (GI) es la denominación convencional de un
conjunto de procesos por los cuales se controla el ciclo de vida de la información,
desde su obtención (por creación o captura), hasta su disposición final (su
archivo o eliminación). Tales procesos también comprenden la extracción,
combinación, depuración y distribución de la información a los interesados. El
objetivo de la gestión de la información es garantizar la integridad, disponibilidad
y confidencialidad de la información.
La Gestión de Información se define como un término impreciso que sirve para
designar un conjunto de actividades orientadas a la generación, coordinación,
almacenamiento o conservación, búsqueda y recuperación de la información
tanto interna como externa contenida en cualquier soporte (PRYTHERCH,
2010).
La Gestión de Información tiene como objetivo optimizar la utilidad y contribución
de los recursos de información con el fin de alcanzar los objetivos de la
organización. En este sentido, la práctica de la gestión de información se traduce
en la creación de canales y medios para transmitir y acceder a la información,
así como, en añadirle valores a ésta (CHOO, 2002)

17

2.3. DEFINICIÓN DE TÉRMINOS BÁSICOS
2.3.1.

SISTEMA

Se trata de la coordinación de diversos subconjuntos con un objetivo común.
Estos subconjuntos son los recursos con los que se cuenta: personal,
presupuesto, tecnología, locales, información. De la dotación adecuada de estos
recursos, su organización y su relación interdependiente, a través de los
procesos y tareas efectuados, resultan los servicios y productos que la biblioteca
pone a disposición de sus usuarios o clientes.
2.3.2.

GESTIÓN

Gestión hace referencia a la acción y a la consecuencia de administrar o
gestionar algo. Al respecto, hay que decir que gestionar es llevar a cabo
diligencias que hacen posible la realización de una operación o de un anhelo
cualquiera. La noción de gestión, por lo tanto, se extiende hacia el conjunto de
trámites que se llevan a cabo para resolver un asunto o concretar un proyecto.
2.3.3.

SIAPS

Sistema de Información de Administración de Programas Sociales.

18

CAPÍTULO III
MATERIALES Y MÉTODOS
3.1. POBLACIÓN DE LA INVESTIGACIÓN
La población fue investigada para el desarrollo del presente proyecto estuvo
conformada por el personal administrativo en un numero de 21 en la Gerencia
de Desarrollo Social de la Municipalidad Provincial de Azángaro.
3.2. MUESTRA
Se usó el muestreo no probabilístico también llamada muestreo por conveniencia
o de juicio. Este tipo de muestras se basa en el conocimiento y la opinión
personal para identificar los elementos de la población que van a incluirse en la
muestra, una muestra a juicio, se basa en el conocimiento de la población por
parte de una persona generalmente es un experto en la materia.
3.3. DETERMINACIÓN DEL TAMAÑO DE LA MUESTRA
Para el caso de validación del Sistema de Información se consideró a los
trabajadores del área de Desarrollo Social que hacen un total de 21 personas,
entre trabajadores nombrados, contratados y practicantes, los cuales

19

participaron activamente interactuando con el sistema y mostrando las bondades
y puntos débiles del sistema.

Tabla N° 1: Población del Personal Administrativo
PERSONAL ADMINISTRATIVO

CANT

Gerente General

1

Sub gerencia de Promoción y Protección de las Personas con discapacidad.

2

Sub gerencia de Bienes Promoción Social.

2

Sub Gerencia de Registro Civiles.

2

Sub Gerencia de Programas alimentarios.

2

Almacén

1

Asistente Administrativo

2

Asistente de Gerencia

2

Presidente de Administración

1

Control de Calidad

1

Contabilidad

1

Control de Calidad

1

Asistente de Contabilidad

1

Administrador Web

1

Soporte Técnico

1
TOTAL(N)

21

Fuente: Elaboración del equipo de trabajo.

3.4. MÉTODOS
3.4.1.

TIPO DE LA INVESTIGACIÓN

El tipo de investigación es semi-experimental ya que se implementa en un
entorno de Software, el cual el cual se experimenta en el personal que labora en
el área de Desarrollo Social y se evalúa a los resultados que se obtienen en
cuanto al costo tiempo y efectividad de la atención en los diferentes programas
sociales.

20

3.4.2.

FACTORES DE CALIDAD

Para verificar la calidad del software se hizo uso de los criterios de calidad de
software propuestos por ISO 9126, el cual “ha sido desarrollado en un intento de
identificar los atributos claves de calidad para el software, el estándar identifica
seis atributos clave de calidad para el software: La funcionalidad, la confiabilidad,
la usabilidad, la eficiencia, la facilidad de mantenimiento, y la portabilidad
(Pressman, R., 2009). Estos criterios ubicados en una escala nos muestran el
nivel de calidad del entorno como instrumento para la prueba de software.
3.5. MÉTODO DE TRATAMIENTO DE DATOS
3.5.1.

MODELO INTERACTIVO

XP propone un ciclo de vida dinámico, donde se admite expresamente que, en
muchos casos, los clientes no son capaces de especificar sus requerimientos al
comienzo de un proyecto. Por esto, se trata de realizar ciclos de desarrollo cortos
(llamados iteraciones), con entregables funcionales al finalizar cada ciclo. En
cada iteración se realiza un ciclo completo de análisis, diseño, desarrollo y
pruebas, pero utilizando un conjunto de reglas y prácticas que caracterizan a XP.
3.5.2.

ANÁLISIS Y DISEÑO DE SISTEMA DE INFORMACIÓN

El análisis del sistema está concentrado en los casos de uso que se describen
más adelante (puesto que el implementar un caso de uso requiere de análisis –
concepto teórico de UML) y el diseño con el modelo de desarrollo interactivo, sin
dejar a lado el diseño ergonómico, que esta embebido en la aplicación “Sistema

21

de Información”, aun así se describe en forma teórica como implemento el
sistema.
3.5.3.

ESPECIFICACIÓN DE REQUISITOS DE SOFTWARE

Los requisitos del software está basado y es conforme con el estándar IEEE Std
830-1998. Las especificaciones y las historias que se consideraron aplicables al
sistema descrito, los cuales se adjuntan en los anexos.
Diagrama de Secuencia

Figura N° 1: Diagrama de secuencias

22

Diagramas de Caso de Usos
1.- Acciones del Personal Administrativo

Figura N° 2: Diagrama de caso de uso del administrador

2.- Acciones detalladas del Personal Administrativo

Figura N° 3: Diagrama de caso de uso del administrador

23

3.6. SISTEMA DE VARIABLES
3.6.1.

DEFINICIÓN DE VARIABLES

Independiente: SISTEMA DE INFORMACIÓN PARA LA ADMINISTRACIÓN
DE PROGRAMAS SOCIALES (SIAPS), EN LA MUNICIPALIDAD PROVINCIAL
DE AZÁNGARO – 2014 –.
Dependiente: Gestión de la Información.
3.6.2.

OPERACIONALIZACIÓN DE VARIABLES
Tabla N° 2: Operacionalización de Variables

INDEPENDIENTE

VARIABLE

DIMENSIÓN

SISTEMA DE
INFORMACION
PARA LA
ADMINISTRACIÓN
DE PROGRAMAS
SOCIALES
(SIAPS), EN LA
MUNICIPALIDAD

INDICADOR

ÍNDICE

Escalabilidad

Capacidad de
adaptarse a las
circunstancias
cambiantes.
Cantidad de
registros
Cantidad de
usuarios
Cantidad de
módulos.

ESCALA

INSTRUMENTO

Si
No

Excelente

Usabilidad

PROVINCIAL DE
AZÁNGARO – 2014
–.

Facilidad de
usar las
interfaces

Bueno

Pruebas

Regular
Malo
Muy Malo

Confiabilidad

Eficiencia

Precisión con
la que el
sistema
proporciona
confianza,
tolerancia a
fallas
Se tiene buen
desempeño en
sus procesos.

Excelente
Bueno
Regular
Malo
Muy Malo
Si
No

DEPENDIENTE

Segundos
Tiempo

Se realizan en
tiempos
reducidos

Minutos
Horas
Días

Gestión de la
Información
Costos

Control

Se reducen los
costos en los
procesos.
Se tiene un
mejor control
en el manejo
de procesos.

Encuestas

Excelente
Bueno
Regular
Malo
Muy Malo

Fuente: Elaboración del equipo de trabajo.

24

3.7. METODOLOGÍA DE DESARROLLO DEL SISTEMA
Se utilizó la metodología ágil XP de programación extrema por la facilidad en
darle mayor importancia al desarrollo de la aplicación web que a la
documentación de la misma.

Historias de Usuario

Plan de Iteración

Diseño Simple

Planeación

Diseño

Prototipos

Rediseño

Criterios de Prueba
de Aceptación

Pruebas

Tarjetas CRC

Codificación

Lanzamiento

Incremento del
Software

Pruebas de
Aceptación




Prueba Unitaria
Integración Continua

Programación

Figura N° 4: Programación Extrema XP Fuente: (PRESMAN, 2009)

3.7.1.

PLANEACIÓN

A partir de este capítulo se describe la experiencia obtenida en la realización del
proyecto. Entre los elementos a discutir se encuentran las historias de usuario,
el plan de entregas y lo relacionado con las iteraciones.
HISTORIAS DE USUARIO
En el desarrollo de este proyecto el cliente no fue quien escribió personalmente
las historias de usuario, pero fue el quien dirigió la redacción de las mismas. Sin
embargo se logró abstraer la información suficiente de ellas para realizar su
implementación. Por otro lado es muy importante resaltar el papel fundamental
25

que jugaron las historias de usuario en la estimación de los tiempos requeridos
para el desarrollo del proyecto. Una vez recolectadas todas las historias de
usuario, se hizo una reunión del equipo de trabajo donde se plantearon los
tiempos necesarios para su implementación, los cuales resultaron en
estimaciones inusualmente aproximadas de los tiempos de desarrollo en
comparación con los realmente requeridos. Esto es importante resaltarlo debido
al poco nivel de detalle que las historias de usuario tenían, significando la poca
información sobre las implicaciones técnicas de su implementación.
Finalmente desde el punto de vista del número de historias de usuario, se obtuvo
un total de 42. Considerando por un lado la recomendación de que no sean
menos de 20 ni más de 80, se deduce que en número es muy adecuado.
DESCRIPCIÓN DE HISTORIAS DE USUARIO


Historia de Usuario: Módulo Registro



Historia de Usuario: Módulo Operación



Historia de Usuario: Módulo Mantenimiento



Historia de Usuario: Módulo Informes

VELOCIDAD DEL PROYECTO
Si bien esta medida de velocidad del proyecto fue tenida en cuenta para el
análisis de tiempos, resulto de mayor utilidad estimar el número de horas que
tomaría implementar cada historia de usuario y planificar las entregas acorde con
esta medida, De esta forma se pudo estimar cuantas historias de usuario podían
ser asignadas en cada iteración.

26

Tabla N° 3: Velocidad de Implementación del Software
MODULOS

ID

HISTORIAS
DE USUARIO

TIEMPO
ESTIMADO(DIAS)

HORAS
ESTIMADAS

Registro

REG

11

23

184

Operación

OPE

9

23

184

Mantenimiento

MAT

16

23

184

Informes

INF

6

18

144

TOTAL

42

87

696

Fuente: Elaboración del equipo de trabajo.

DIVISIÓN E ITERACIONES
El proyecto fue dividido en 4 iteraciones, por consiguiente se tuvo un total de 4
entregas. La primera iteración se refirió al módulo de REGISTRO, este orden se
eligió debido a la naturaleza de la entidad con el cliente y la importancia que se
tiene la prestación de servicio a la comunidad, de esta forma se planearon 4
entregas las cuales se realizaron con observaciones del cliente. Una dificultad
inesperada que se presentó en la velocidad del proyecto fue el refactoring, ya
que en cada iteración surgieron varias recomendaciones por parte del cliente
que se convirtieron en refactoring, el cual no se había considerado dentro de
ninguna de las medidas de velocidad. Producto de esta omisión el grupo de
desarrollo tuvo que reestimar el tiempo dedicado a la iteración afectada para no
tener que remover historias de usuario de esta.

27

Tabla N° 4: División en Iteraciones del desarrollo del Software
MÓDULOS

ID

TIEMPO
ESTIMADO
(DIAS)

ITERACIONES

Registro

REG

23

1

Operación

OPE

33

2

Mantenimiento

MAT

24

3

Informes

INF

13

4

TOTAL

93

Fuente: Elaboración del equipo de trabajo Ver cronograma Figura Nº 02.

PLAN DE ENTREGAS
XP propone que el cliente sea quien decida cuales historias se implementaran y
cuál es el grado de importancia de cada una de la correspondiente iteración, la
tarea de escoger las historias fue realizada por el equipo en conjunto, incluyendo
al cliente, lo cual no generó problemas en las entregas de los módulos
funcionales.
La clasificación de las historias no fue realizada estrictamente por su grado de
importancia en el proyecto. Solo se optó por desarrollar el Módulo de Registro
en la primera iteración, por tratarse de la actividad más importante en la
distribución de productos. En las demás iteraciones se priorizó la dependencia
con los módulos ya implementados. Para aproximar el tiempo de desarrollo de
cada iteración, se consideró 8 horas de trabajo durante 5 días a la semana.
Aunque las entregas fueron planeadas con fechas para su realización y la
mayoría se cumplieron para las fechas indicadas, la reunión para algunas
iteraciones no se pudo realizar el día que se tenía planteado, no por razones de
retraso en la implementación de la aplicación sino debido a la disponibilidad de

28

los beneficiarios, para solucionar el inconveniente se tuvo que buscar un horario
acorde del cliente.

Figura N° 5: Plan de entrega de las iteraciones

Fuente: Elaboración del equipo de trabajo.

REUNIÓN INICIAL DE ITERACIONES
En la reunión que se realizaba con el equipo de trabajo, se transformaba el
contenido de las historias de usuario en responsabilidades que eran plasmadas
en las CRC, para luego procede a la asignación de dichas tareas a los
programadores, Esta traducción facilito la creación de clases y métodos iniciales
de las mismas, ya que fue parte de la etapa de diseño del proyecto. Las tareas
fueron cuidadosamente estimadas en horas, lo cual aporto mayor precisión al
momento de calcular las historias a implementar. En dichas estimaciones no se
tomó en cuenta el tiempo que se necesita para el refactoring, lo que se considera
29

una omisión, sin embargo cuando se requirió, se les pudo hacer gestión sin
afectar al proyecto.
Primera Iteración: Registro
Tabla N° 5: Planificación de Tareas: Módulo de Registro
N°

HISTORIAS REALIZADAS

TIEMPO
ESTIMADO
(DÍAS)

N°
TAREAS

1

REG 01: Registro de Beneficiarios

2

4

2

REG 02: Registro de Productos

4

5

3

REG 03: Registro de Proveedores

3

4

4

REG 04: Registro de Funcionarios Y/O
Empleados

2

4

5

REG 05: Registro de Programas Sociales

3

4

6

REG 06: Gestionar datos de Ficha Unidad
Beneficiaria

5

4

7

REG 07: Gestionar datos de Inspecciones

4

4

23

29

TOTAL

Fuente: Elaboración del equipo de trabajo.

Figura N° 6: Cronograma: Módulo Registro

Fuente: Elaboración del equipo de trabajo. Historias de Usuario: Registro, (Anexos)

30

Segunda Iteración: Módulo Operación
Tabla N° 6: Planificación de Tareas: Módulo Operación
ITERACION

HISTORIAS REALIZADAS

TIEMPO
ESTIMADO
(DIAS)

N° TAREAS

2

OPE 01: Gestionar datos de Pecosa

9

4

2

OPE 02: Gestionar datos de Nea

9

6

2

OPE 03: Gestionar datos de Lotes de
Donaciones

9

4

2

OPE 04: Generar datos de Almacén

3

2

2

OPE 05: Generar datos de Apoyo Social

3

2

33

18

TOTAL

Fuente: Elaboración del equipo de trabajo.

Figura N° 7: Cronograma: Módulo Operación

Fuente: Elaboración del equipo de trabajo.
Historias de Usuario: Operación, (Anexos)

31

Tercera Iteración: Módulo Mantenimiento
Tabla N° 7: Planificación de Tareas: Módulo Mantenimiento
ITERACION

HISTORIAS REALIZADAS

TIEMPO
ESTIMADO
(DIAS)

N°
TAREAS

3

MAT 01: Gestionar datos de Categoría de
Programa Social

10

14

3

MAT 02: Gestionar datos de los Documentos

7

8

3

MAT 03: Gestionar datos Partes de Salida –
Pecosa

3

4

3

MAT 04: Gestionar datos de NEA

4

8

24

34

TOTAL

Fuente: Elaboración del equipo de trabajo.

Figura N° 8: Cronograma: Módulo Mantenimiento
Fuente: Elaboración del equipo de trabajo, Historias de Usuario: Mantenimiento,

(Anexos)

32

Cuarta Iteración: Módulo de Informes
Tabla N° 8: Planificación de Tareas: Módulo de Informes
ITERACION

4
4
4
4

HISTORIAS REALIZADAS

TIEMPO
ESTIMADO
(DIAS)

INF 01: Gestionar datos Ventas
INF 02: Gestionar datos de
Compra de Productos
INF 03: Gestionar datos de
Donaciones
INF 04: Gestionar datos de Apoyo
TOTAL

N° AREAS

3

5

10

13

3

3

3

2

19

23

Fuente: Elaboración del equipo de trabajo.

Figura N° 9: Cronograma: Informes

Fuente: Elaboración del equipo de trabajo.
Historias de Usuario: Informes, (Anexos)

33

ROLES XP.
Tabla N° 9: Distribución de roles XP
MIEMBRO

GRUPO

ROLES

METODOLOGIA

G-1

MANAGER, PROGRAMADOR.

XP

HUANCA SUAQUITA CESAR A.

CHAMBI RUESLAS, CARLOS

CLIENTE CUSTOMER

XP

Fuente: Elaboración del equipo de trabajo.

REUNIÓN MATINAL
Este aspecto no fue implementado a cabalidad, la comunicación de problemas y
soluciones se realizó a lo largo de la jornada de trabajo. Las discusiones que
surgieron no fueron muy largas. Los problemas que se plantearon no
demandaron mucho tiempo para encontrar su solución, debido a que eran dudas
relacionadas con la codificación, base de datos y diseño.
MOVIMIENTO DEL PERSONAL
Debido a que solo se tenían un desarrollador, la posibilidad de hacer una rotación
del programador alrededor del proyecto, en el más estricto sentido de la palabra,
era imposible, sin embargo cada decisión de diseño fue tomada por ambos
miembros del grupo y los detalles de la implementación fueron compartidos al
otro compañero lográndose así el objetivo de evitar las islas de conocimiento. La
rotación de programadores no es un fin en XP, es un medio para lograr la
propiedad colectiva del código, la que se obtuvo gracias a un solo programador.

34

3.7.2.

DISEÑO

A diferencia de las metodologías predictivas, el diseño se realizó durante todo el
tiempo de vida del proyecto, siendo frecuentemente revisado y algunas veces
modificado debido a cambios presentados durante el desarrollo. En este capítulo
presentamos una estructura similar a la sección de diseño del marco teórico.
SIMPLICIDAD
Desde el punto de vista de las interfaces, no se invirtió mucho tiempo en su
diseño, sin embargo se prestó mucha atención a ubicar los elementos tal y como
el cliente las habría solicitado y presentándolos en una forma elegante pero
sencilla. A consecuencia de esto se notó una reacción muy positiva del cliente,
manifestando conformidad con la apariencia visual de la aplicación. En lo que se
refiere a diagramas, se crearon las tarjetas CRC, algunos diagramas de
secuencia y el modelo Entidad Relación, del cual surgieron varias versiones en
la medida que se incorporaban funcionalidades a la aplicación. Si bien no fueron
muchos diagramas, si fueron muy útiles. Todos estos

diagramas fueron

elaboradas a mano y sin prestar mucha atención a la estética de los mismos tal
y como lo plantea XP. La única excepción fue el modelo relacional y las tarjetas
CRC.

35

DISEÑO DE LA PANTALLA PRINCIPAL
El diseño de la interfaz gráfica de usuario se orientó para que sea atractivo y útil
a la mayoría de usuarios. Se determinó un esquema genérico.

Figura N° 10: Esquema de la interfaz del Sistema

Fuente: Elaboración del equipo de trabajo.

Figura N° 11: Interfaz final del Sistema

Fuente: Elaboración del equipo de trabajo.
36

ETAPA DE DISEÑO DE INTERFAZ
Diseño Interfaz: Módulo Registro
Interfaz Gestionar Datos de Beneficiarios, Inscripciones y Generar Reporte
Beneficiarios.

Figura N° 12: Interfaz Gestionar Datos de Beneficiarios

Fuente: Elaboración del equipo de trabajo.

37

Figura N° 13: Interfaz Actualiza y Gestionar Beneficiarios

Fuente: Elaboración del equipo de trabajo.

Interfaz Gestionar Registro de Productos

Figura N° 14: Interfaz Gestiona Datos de Productos

Fuente: Elaboración del equipo de trabajo.

38

Figura N° 15: Interfaz Gestiona Datos Productos

Fuente: Elaboración del equipo de trabajo.

Interfaz Gestionar Registro de Proveedor

Figura N° 16: Interfaz Gestionar datos de Proveedor

Fuente: Elaboración del equipo de trabajo.

39

Figura N° 17: Interfaz Gestiona y Actualiza Datos de Proveedor

Fuente: Elaboración del equipo de trabajo.

Interfaz Gestionar Registro de Empleado y/o Funcionario

Figura N° 18: Interfaz Gestionar datos de Empleado y/o Funcionario

Fuente: Elaboración del equipo de trabajo.
40

Figura N° 19: Interfaz Gestiona y Actualiza Datos de Empleado y/o Funcionario

Fuente: Elaboración del equipo de trabajo.

Diseño Interfaz: Módulo Operación
Interfaz Gestionar Datos de Operación de Pecosas

Figura N° 20: Interfaz Gestionar Pecosas

Fuente: Elaboración del equipo de trabajo.

41

Figura N° 21: Interfaz Gestionar Pecosas de Ventas, Comprar, Donaciones,

Apoyos
Fuente: Elaboración del equipo de trabajo.

Diseño Interfaz: Módulo Operación
Interfaz Gestionar Datos de Operación de Nea

Figura N° 22: Interfaz Gestionar Nota de Entrada de Almacén NEA

Fuente: Elaboración del equipo de trabajo.
42

Figura N° 23: Interfaz Gestionar Pecosas de Ventas, Comprar, Donaciones,

Apoyos
Fuente: Elaboración del equipo de trabajo.

Diseño Interfaz: Módulo Mantenimiento
Interfaz Gestionar Datos de Mantenimiento de Categoría

Figura N° 24: Interfaz Gestionar Categoría

43

Fuente: Elaboración del equipo de trabajo.

Interfaz Gestionar Informes, Semanales, Mensuales, Anuales.

Figura N° 25: Interfaz Gestionar Informes, Semanales, Mensuales, Anuales

Fuente: Elaboración del equipo de trabajo.

DISEÑO DE BASE DE DATOS
Modelo Relacional de Base de Datos
El modelo de base de datos se muestra a continuación en el siguiente
diagrama de base de datos.

44

Figura N° 26: Modelo Relacional de la Base de Datos 1
Fuente: Elaboración del equipo de trabajo

45

Figura N° 27: Modelo Relacional de la Base de Datos 2
Fuente: Elaboración del equipo de trabajo.

46

TARJETAS CRC
Una de las principales piezas de diseño empleada en el proyecto fueron las
tarjetas CRC que no solo sirvieron como columna vertebral de este, sino
que también fueron la base del modelo Entidad Relación, elaborada para
modelar la base de datos. Cada tarjeta CRC se convirtió en un objeto, sus
responsabilidades en métodos y sus colaboradores en llamados a otras
clases.
En XP el proceso de diseño es iterativo por lo cual las tarjetas CRC no
fueron creadas todas en la primera iteración. Al inicio de cada iteración se
les fueron agregando responsabilidades, o fueron creadas CRC nuevas de
modo tal que el diseño se convirtió en un proceso dinámico que se
adaptaba a las necesidades planteadas para el momento. Sin embargo su
utilidad no fue la misma durante todo el proceso de desarrollo. En las
primeras iteraciones fueron útiles dando una idea clara de la arquitectura
del sistema, distribución de clases, paquetes y la ubicación de las diferentes
responsabilidades sobre la lógica de negocio, pero en las últimas
iteraciones donde ya se tenía claridad sobre todos estos elementos, las
tarjetas CRC fueron menos empleadas. Primero fueron implementadas las
clases sencillas, aquellas que no hacían llamados a ninguna otra, para
seguir con las que hacían llamados a las ya implementadas y así
sucesivamente. Aunque XP no plantea una metodología una metodología
debida a que era la forma más cómoda de poder aplicar las pruebas en
todo momento.
47

Diseño Tarjetas CRC: Módulo Registro
BENEFICIARIO

PROVEEDOR

FUNCIONARIO
















Registra
Edita
Lista
Busca

Registra
Edita
Lista
Busca

Registra
Edita
Lista
Busca

PRODUCTOS





Registra
Edita
Lista
Busca

Figura N° 28: Tarjeta CRC Registro

Fuente: Elaboración del equipo de trabajo.

Diseño Tarjetas CRC: Módulo Operación
PECOSA

NEA













Registra
Edita
Lista
Busca
Distribuye

Registra
Edita
Lista
Busca
Almacena

Figura N° 29: Tarjeta CRC Operación

Fuente: Elaboración del equipo de trabajo.

Diseño Tarjetas CRC: Módulo Mantenimiento

Figura N° 30: Tarjeta CRC Mantenimiento

Fuente: Elaboración del equipo de trabajo.

48

Diseño Tarjetas CRC: Módulo Informes

Figura N° 31: Tarjeta CRC Informes de Pecosa y Nea

Fuente: Elaboración del equipo de trabajo.

3.7.3.

CODIFICACIÓN

La implementación del Sistema, se hizo utilizando toda la potencialidad de
plataforma PHP, AJAX, JAVASCRIPT y el gestor de Base de datos
MYSQL. Se utilizó la implementación teniéndose el controlador de
información, dándonos la capacidad de tener un diseño exacto según los
requerimientos de la Gerencia de Desarrollo Social de la Municipalidad
Provincial de Azángaro.
Cliente siempre está Presente
La idea de tener al cliente o un representante no es fácil de asimilar si se
consideran los costos que esto representa. Para este proyecto, el cliente
tuvo visitas frecuentes dado que debía estar al frente de su beneficio. Se
implementó la estrategia de comunicación distinta.
49

ILUSTRACIÓN DE PAQUETES UTILIZADOS
Vistas
En los directorios de vistas se agruparon según la funcionalidad y la
modularidad, teniendo en el directorio Operaciones las interfaces de:
Operaciones y validar Registros, en el directorio caja las interfaces de
beneficiarios, Productos, ingresos, personal, reportes; en el directorio
template se tiene los diseños de las interfaces las cuales serán aplicadas a
cada interfaz del sistema.

Figura N° 32: Vistas del Sistema
Fuente: Elaboración del equipo de trabajo.
50

Paquetes
Los paquetes de código se organizaron según la funcionalidad de las
clases, los paquetes com.siaps.operaciones.bo, com.siaps.caja.bo, etc.
Las clases dentro de los sub-paquetes bo, contienen las clases Business
Object. Las clases dentro de bo.impl, contienen la implementación de las
clases Business Object. Las clases dentro de los subpaquetes dao,
contienen las clases Data Access Object. Las clases dentro de dao.impl
contienen la implementación de las clases Data Access Object.

Figura N° 33: Paquetes del Sistema
Fuente: Elaboración del equipo de trabajo.

51

Archivos de Configuración
Archivos index.php
Archivo de configuración de php, que define las reglas de navegación, incluyendo el ciclo
de la interfaz de la aplicación.

<?php
if (!empty($_SERVER['HTTPS']) && ('on' == $_SERVER['HTTPS'])) {
$uri = 'https://';
} else {
$uri = 'http://';
}
$uri .= $_SERVER['HTTP_HOST'];
header('Location: '.$uri.'/cesar/');
exit;
?>

Figura N° 34: Código de configuración

3.7.4.

Something is wrong with the XAMPP installation :-(

PRUEBAS Y COSTOS

Prueba del Software
Para la evaluación del sistema, se ha utilizado la metodología métrica de
Puntos de Funciones PF.
Información de Procesamiento de Funciones
Tabla N° 10:

Procesamiento de las Funciones del Software

Parámetro de Medición

Cuenta

factor de Ponderación
Bajo

Medio

Alto

Cuenta
PF

Nº de Entradas de Usuarios

21

3

4

6

84

Nº de Salidas de Usuarios

21

4

5

7

105

Nº de Peticiones de Usuario

55

3

4

6

220

Nº de Archivos

8

7

10

15

80

Numero de Interfaces Externas

3

5

7

10

21

Cuenta Total

510

Fuente: Elaboración del equipo de trabajo.

52

 Nº de Entradas de Usuario: Se cuenta cada entrada del usuario
que proporcione diferentes datos a la aplicación.
 Nº de Salidas de Usuario: Se cuenta cada salida que proporciona
al operador información orientada a la aplicación del sistema.
 Nº de Peticiones de Usuario: Una petición es una entrada
interactiva que produce la generación de alguna respuesta del
software
 Nº de Archivos: Se ocupa de cada archivo que cuenta o interactúa
con la aplicación
 Nº de Interfaces Externos: Se cuenta las interfaces legibles por la
máquina que se utiliza para transmitir información a otros sistemas.
Costo del Sistema.
Para evaluar los valores de ajuste de complejidad se ha dado a cada factor
un valor de ponderación de { 0 – 5 } puntos.
Tabla N° 11: Factores de Calidad del Software
Nº
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
TOTAL

FACTORES DE CALIDAD (Fi)
Facilidad de corrección de módulos
Facilita el mantenimiento
Fiabilidad del sistema
Integridad / seguridad del sistema
Facilidad de uso para el cliente
Reutilización de código
Documentación del sistema
Copias de seguridad y recuperación fiable
Rendimiento del sistema
Ejecución del sistema en un entorno operativo existente y fuertemente
utilizado
Entrada de datos interactiva del sistema
Complejidad de entrada, salida, archivos y peticiones
Complejidad de procesamiento interno
Inclusión de conversión e instalación
Soportes múltiples para la instalación en diferentes organizaciones

VALOR
3
3
3
3
5
3
2
2
2
4
3
3
3
2
4
45

Fuente: Elaboración del equipo de trabajo.

53

Fórmula para calcular los Puntos de Función
PF= Cuenta Total * [ 0.65 + 0.01 * Σ Fi ]
Donde Fi son los ítems de valores que pertenecen a cada factor de calidad.
PF = 510 * [ 0.65 + 0.01*45 ] = 561 Líneas de Código
Punto de Función al mes = 4 meses
Tarifas mes por personal = S/ 1500.00
Punto de Función al mes = 561/ 4 = 140.25
Costo de Función al mes = S/ 1500.00 / 140.25 = 10.6951
COSTO DEL SISTEMA = 561 * 10.6951 = 5999.95
El costo del desarrollo del sistema asciende a la suma de S/ 6000.00
Nuevos Soles.
Una vez terminada la implementación del Sistema, se realizó la prueba con
el Personal Administrativo de la Gerencia de Desarrollo Social de la
Municipalidad Provincial de Azángaro. Después de esto, se realizó una
encuesta (ANEXO C) general para ver cuál es la opinión que tienen los
usuarios del sistema.
3.8.

MATERIAL INSTRUMENTAL

Para el desarrollo de la investigación se utilizaron instrumentos de hardware,
software y servicios. A continuación se detalla cada uno de ellos:
3.8.1.

HARDWARE



3 Computadoras Personales.



Impresora Láser.
54



Memoria USB.



Discos Compactos.

3.8.2.

SOFTWARE



Microsoft Windows XP © SP3.



Microsoft Office 2010 ©.



Microsoft Visio 2010.



Microsoft Project 2010.



Adobe Reader X.



Mozilla Firefox 25.1.



Adobe PhotoshopCS5.



Macromedia Flash CS5.



MySqlWorkbench 5.2 CE.



NetBeans IDE 7.4



Glassfish v3



JAVA



Framework JSF(Java Server Faces-PrimeFaces)



Framework Spring



Framework Hibernate



MySQL 5.



PHP



AJAX

3.8.3.


SERVICIOS
Conexión a Internet.

55

CAPÍTULO IV
RESULTADOS Y DISCUSIÓN
4.
4.1.

Evaluación del nivel de Optimización
EL SOFTWARE SEGÚN ISO – 9126
Para la evaluación del nivel de optimización del sistema se realizó:
4.1.1.

Evaluación de la Calidad del Software (Estándar ISO - 9126)

Para evaluar el nivel de calidad del sistema de información (SIAPS), se
aplicó los indicadores de calidad de software (Ver Figura 36), que considera
los factores que se muestran en el grafico siguiente

Figura N° 35 Promedio General de las Fichas de Evaluación ISO-9126

56

EVALUACIÓN DEL SISTEMA DE INFORMACIÓN (SIAPS)
Para esta evaluación se consideró a los trabajadores nombrados,
contratados y practicantes de área de programas sociales de la
Municipalidad Provincial de Azángaro y la Medición de Calidad del Software
Estándar ISO – 9126
Resultado - ficha de evaluación de la calidad del software ISO – 9126
Tabla N° 12: Resumen de las fichas de evaluación
Nº de
Inaceptable
Encuesta

RESUMEN DE LAS ENCUESTAS
Mínimamente
Cumple con
Aceptable
Aceptable
los Requisitos

1

59

2

60

3

Excede los
Requisitos

101

4

89

5

100

6

91

7

108

8

93

9

100

10

98

11

107

12

106

13

108

14

98

15

127

16

131

17

102

18

103

19

82

20

102

21

99

Promedio

0

59,5

88,75

102,4615385

129

Fuente: Resultado de Ficha de Evaluación ISO – 9126
Elaboración: Grupo de trabajo

57

Tabla N° 13: Medición de Calidad del Software Estándar ISO – 9126

Clasificación
Inaceptable
Mínimamente aceptable
Aceptable
Cumple los Requisitos
Excede los Requisitos
Totales

INTERVALO Puntos
[ 27 - 54 >
[ 54 - 81 >
[ 81 - 95 >
[ 95 - 122 >
102
[ 122 - 135 >

Nº
0
2
4
13
2
21

%
0
10
19
61
10
100

Fuente: Cuadro de decisiones ISO – 9126
Elaboración: Grupo de trabajo

Según los resultados el promedio de 101, 100, 108, 100, 98, 107, 106, 108,
98, 102, 103, 102 y 99 nos resulta 102, indicando que cumple con los
requisitos según el ISO - 9126. (ANEXOS)
De los resultados el 61 % con 13 usuarios directos nos indicando que
cumple con los requisitos según el ISO - 9126.
De acuerdo a los resultados de la calidad del software se concluyó que el
Sistema de Información para la Administración de Programas Sociales
(SIAPS), en la Municipalidad Provincial de Azángaro, cumple los requisitos
con un promedio de 102 puntos del total de 135 puntos que se considera
en el cuadro de decisiones del ISO - 9126.

Figura N° 36 Medición de Calidad del Software
Elaboración: Grupo de trabajo
58

En la tabla Nº 13 y la figura Nº 36 se representa la medición de la calidad
de software mediante la calidad de software mediante el estándar ISO –
9126, que considera 6 factores principales según el número de indicadores
de calidad se puede obtener un puntaje entre 27 y 135 puntos, teniendo
intervalos de “Inaceptable”, “Mínimamente Aceptable”, “Aceptable”,
“Cumple con los Requisitos” y “Excede los Requisitos”.
Se puede apreciar que un 19% se tiene el calificativo aceptable, el cual
indica que el software cumple con realizar las tareas básicas, pero que aún
está faltando algunos otros criterios para ser considerado como óptimo. Se
observa también que en un 61% obtiene el calificativo “cumple con los
requerimientos”, esto nos indica que el sistema cumple a cabalidad todos
los requisitos planteados por el usuario y por lo tanto está a nivel alto de
calidad de software en cuanto a los otros factores e indicadores propuestos
por el estándar, se observa también que un 10 % del total se obtiene el
calificativo de “excede los requisitos”, lo cual nos muestra que con el
sistema se puede hallar procesos que mejoren y exceden los requisitos
básicos del sistema
Por lo tanto, en un 90% el sistema aprueba el estándar ISO – 9126 de
calidad de software, ubicándose mayoritariamente en la escala de “Cumple
los Requisitos”.
Evaluación de la funcionalidad
Según el ISO 9126, en este contexto se evalúa la funcionalidad y seguridad
de acceso del Software, se ha implementado los accesos para cada usuario
en el servidor y acceso de base de datos
59

Figura N° 37 Acceso al sistema de base de datos
Fuente: SISTEMA DE INFORMACION (SIAPS)
Elaboración: Grupo de trabajo

Evaluación de Fiabilidad
Según ISO 9126, en este contexto se evaluó la tolerancia a fallos y la
capacidad de recuperación. En este contexto se ha contemplado la
implementación de procedimientos de control de flujo de datos del Servidor,
el cual gestiona la data independiente asegurando la integridad de la
información y evitando en todo momento las posibles fallas que pudieran
generarse.
Evaluación de Usabilidad
También se considera la apreciación de los operadores que evalúan el
sistema de Información (SIAPS) en los factores de usabilidad, tiempo,
costo, calidad de trabajo de investigación, lo cual mostramos a continuación

60

Tabla N° 14:Resultados del Uso de la inteface del Sistema
Facilidad de Uso del Sistema
Indicador
Tarjas
Muy fácil de usar
Fácil de usar
Difícil de Usar
Muy difícil de Usar
Totales

%

6
13
2
0
21

29
61
10
0
100

Fuente: Resultado de la Encuesta Ver Anexos
Elaboración: Grupo de trabajo

Figura N° 38

Apreciación sobre el uso de la Interface del Sistema
Elaboración: Grupo de trabajo

El 61 % de los usuarios afirma que el sistema de información SIAPS, es
fácil de usar, mientras que un 29 % dice que es muy fácil de usar.
Apreciación sobre el Sistema proporciona todos los medios para la
interacción con los operadores del sistema
Tabla N° 15:Proporcion de Medios para las iteraciones
Proporción de Medios
Indicador
Tarjas
Es muy completo
11
Es completo
6
Puede Mejorar
2
Falta añadir Opciones
2
Totales
21

%
52
28
10
10
100

Fuente: Resultado de la Encuesta Ver Anexos
Elaboración: Grupo de trabajo

61

Figura N° 39 Sistema proporciona todos los medios
Elaboración: Grupo de trabajo

En los gráficos que se observa podemos notar que con el uso del Sistema
de Información (SIAPS), se mejora significativamente en cuanto a tiempo
que invierten en el proceso de aprobación que se incluye desde la
presentación del proyecto, revisiones, por parte del personal y la
aprobación final. En este proceso indican mayoritariamente también, que el
costo disminuye notablemente, pues ya no se hace uso de las impresiones,
ni se tiene que gastar en transporte y otro.
Finalmente, los usuarios del sistema de consideran que el uso del sistema
se mejora en forma y contenido de trabajo, demostrando que con el uso del
sistema se optimiza el proceso de administración de trabajos de búsqueda,
registro, operaciones e informes de los diferentes programas sociales de la
Municipalidad Provincial de Azángaro

62

Evaluación de Mantenibilidad
Según ISO 9126, en este contexto se evaluó la capacidad de ser analizado,
cambiado en forma total o parcial de cada uno de los componentes de
software, para lo cual se desarrolló el Sistema de Información para la
Administración de Programas Sociales, los cuales puedes ser cambiados o
actualizados directamente o en línea y para la mantenibilidad se trabajó
con archivos de configuración (config.ini) cumpliendo así con la evaluación
de mantenibilida del Software.
Evaluación de Portabilidad
Según ISO 9126, en este contexto se evaluó la adaptabilidad, instabilidad,
coexistencia y capacidad de ser reemplazados (Cumplimiento de
Portabilidad) Para poder cumplir con esta regla propuesta por el ISO en
referencia se desarrollaron los módulos de aplicación y librerías dinámicas
en lenguajes de programación multiplataforma (PHP, JAVASCRIPT, HTML,
AJAX,

Y

MYSQL)

los

cuales

trabajan

independientemente,

sin

dependencia alguna para su operación
Finalmente: este trabajo de tesis, se puede decir que la atención en los
diferentes programas sociales utilizando un sistema de información
(SIAPS), es óptimo y pasan a resolver los siguientes puntos


El sistema de información (SIAPS) cumple con los requerimientos
para el funcionamiento en la Gerencia de Desarrollo Social de la
Municipalidad Provincial de Azángaro.

63



El análisis y diseño nos permitió desarrollo un sistema
multiplataforma

los cuales trabajan independientemente, sin

dependencia alguna para su operación, con una base de datos en
linea.


El incremento de

mejora de los procesos de gestión de la

información del sistema de información (SIAPS), fue muy
significativo.


El software fue validado mostrando una interfaz sencilla, clara y
amigable.

64

CONCLUSIONES
- Se ha desarrollado el Sistema de Información para la Administración de
Programas Sociales (SIAPS), mejorando la gestión de la información en la
Gerencia de Desarrollo Social de la Municipalidad Provincial de Azángaro,
permitiendo realizar los diferentes procesos con mayor control, reducción de
costos y tiempo con un alto grado de productividad
- Se analizó los requerimientos del sistema de acuerdo a los estándares de
calidad de software ISO-9126.
- Se logró el análisis y diseño del Sistema para conocer a detalle todas las
necesidades de los usuarios y establecer las funcionalidades del nuevo Sistema
para el logro de objetivos de la Gerencia de Desarrollo Social de la Municipalidad
Provincial de Azángaro.
- Con la implementación del Sistema de Información para la Administración de
Programas Sociales (SIAPS), se logró construir un producto robusto que está
sujeto a cambios futuros, reutilización de código y proveen un marco de trabajo
amigable, además de la interacción con diferentes lenguajes, que permitirá a la
Gerencia de Desarrollo Social de la Municipalidad Provincial de Azángaro
realizar sus labores para beneficio de la Organización y Población.
- Se hicieron las pruebas de calidad del software con el estándar ISO – 9126
los funcionarios y administradores encargados de los diferentes programas
sociales, con las que se demostró que el sistema en mención cumple los
requisitos con promedio de 102 puntos según la escala de calificación del ISO
9126 que se aplicó al Sistema de Información desarrollado para la Municipalidad
65

Provincial de Azángaro. Por lo cual cumplió los siguientes requisitos:
Funcionalidad, Fiabilidad, Usabilidad, Eficiencia, Mantenibilidad y Portabilidad.

66

RECOMENDACIONES Y SUGERENCIAS
PRIMERA: Se recomienda implementar en sistema de información (SIAPS), en
todas las Municipalidades para el bienestar de los trabajadores y beneficiarios.
SEGUNDA: Se recomienda reutilizar el código del

sistema de información

teniendo en cuenta que el sistema tiene características de reutilización, además
contempla las necesidades comunes de atención al cliente, cumpliendo el
estándar ISO – 9126.
TERCERO: Se recomienda el uso de tecnologías web en PHP ya que se ahorra
en costos tales como licencia de sistema operativo entre otras ventajas y la
aplicación de JAVASCRIPT, AJAX y MYSQL, ya que facilitan la implementación
de sistemas robustos que están sujetas a cambios futuros, reutilización de código
y proveen un marco de trabajo amigable además de la interacción con diferentes
lenguajes.
CUARTA: Se recomienda la recopilación de datos, el uso del método de
comunicación directa para este tipo de investigaciones por que ayudan a extraer
información real para su mejor análisis y diseño.
QUINTA: Se recomienda que al desarrollar un Sistema es necesario seguir un
proceso de planificación para que estos contribuyan a actividades ordenadas y
con un propósito.

67

BIBLIOGRAFÍA
TITO, J. (2003). La aplicación del Sistema de Gestión de Base de Datos, Tesis.
FLORES, J. (2004). Portal Web Académico. Universidad Nacional del
Altiplano, Tesis.
HERNANDEZ C. D, (2007). Programas Sociales de Apoyo Alimentario: una
Propuesta Estratégica Nacional, Tesis.
POCOHUANCA, G. (2011). Sistema Basado en Plataforma JEE para optimizar
la gestión de la Oficina de Administración Tributaria y Rentas – MPH,
Tesis.
AVILA, R. (2001). Metodología de la investigación. Lima: Estudios y ediciones
R.A.
CHOO, C. W. (2002). Information Management for the Intelligent Organization:
The Art of Scanning the Environment (3ra ed.). American Society for
Information Science.
PRESMAN, R. (2009). Ingeniería del software: un enfoque práctico (6th ed.).
Madrid: McGraw-Hill.
PRYTHERCH, R. (2000). Harrod´s Librarian´s Glossary and Reference Book.
Gower.

68

CARRILLO, I. P. (2008). Metodología de desarrollo de software. Buenos Aires:
Ciencia que ladra.
CASILLAS, R. (2004). Desarrollo de aplicaciones web. Barcelona: Eureca.
DBSHARDS. (2009). Data Access Object. Recuperado el 10 de 08 de 2013, de
http://www.codefutures.com/data-access-object/
FIELDS, D. &. (2000). Web Development with JavaServer Pages (2da ed.).
Estados Unidos: Manning Publications Co.
GONCALVES, A. (2009). Beginning Java EE 6 with GlassFish 3 (2da ed.).
Estados Unidos: Apress.
JACOBSON, I. B. (2000). El Proceso Unificado de Desarrollo de Software.
Madrid: Pearson Education.
KAPUR, R. B. (2010). Open Source Development (1ra ed.). Canada: IBM
Canada.
KENDALL, E. &. (2005). Análisis y Diseño de Sistemas. México: Pearson
Education.
KING, G. B. (2010). Hibernate Reference Documentation.
LA GRECA, P. (27 de 12 de 2007). Tutorial de Spring. Recuperado el 10 de 08
de 2013, de
http://pablolg.wikispaces.com/file/view/spring_tutorial_v0.271.pdf
MORALES, P. (13 de Diciembre de 2012). Estadistica Aplicada a las Ciencias
Sociales: Tamaño necesario de la muestra. Recuperado el 10 de Agosto
69

de 2013, de
http://www.upcomillas.es/personal/peter/investigacion/Tama%F1omuestr
a.pdf
ROLDÁN, D. V. (2010). Aplicaciones Web: Un Enfoque Práctico. México:
ALFAOMEGA RA-MA.
SILBERSCHATZ, A. (2002). Fundamentos de Base de Datos (4ta ed.). Madrid:
Concepción Fernández.
SOMERVILLE, I. (2005). Ingeniería del Software. Madrid: Pearson Education.
WELLS, D. (2009). Extreme Programming XP. Recuperado el 01 de 08 de
2013, de http://www.extremeprogramming.org/
ZAMBON, G. &. (2007). Beginning JSP™, JSF™, and Tomcat Web
Development: From Novice to Professional (4ta ed.). Estados Unidos:
Apress.

70

ANEXOS

71

1. Descripción de Historias de Usuario y Requerimientos SRS
1.1. Historia de Usuario: Módulo Registro
Historia de Usuario
Número: REG01

Usuario: Personal Administrativo , Gerente de Desarrollo Social

Nombre Historia:

Registro

Prioridad:

Alta

Puntos Estimados: 3 días

Riesgo en desarrollo:

Alta

Iteración Asignada: 1

Programador Responsable: Equipo G-1
Descripción: Permite registrar beneficiarios, proveedores, productos y funcionarios
municipales, según a los datos solicitados.
Observaciones: Se hace el registro de la mayoría de datos de los beneficiarios.

Historia de Usuario
Número: REG 02

Usuario: Personal Administrativo , Gerente de Desarrollo Social

Nombre Historia:

Registro de beneficiarios

Prioridad:

Alta

Puntos Estimados: 2 días

Riesgo en desarrollo:

Alta

Iteración Asignada: 1

Programador Responsable: Equipo G-1
Descripción: Permite registrar de los beneficiarios.

Historia de Usuario
Número: REG 03

Usuario: Personal Administrativo , Gerente de Desarrollo Social

Nombre Historia:

Registro de descripción de la unidad re registro

Prioridad:

Alta

Puntos Estimados: 2 días

Riesgo en desarrollo:

Alta

Iteración Asignada: 1

Programador Responsable: Equipo G-1
Descripción: Permite Proveedores

Historia de Usuario
Número: REG 04

Usuario: Personal Administrativo , Gerente de Desarrollo Social

Nombre Historia:

Registro de informes de inspección

Prioridad:

Alta

Puntos Estimados: 3 días

Riesgo en desarrollo:

Alta

Iteración Asignada: 1

Programador Responsable: Equipo G-1
Descripción: Permite registrar productos
1

2. Historias de Usuario y Requerimientos SRS
2.1. Primera Iteración: Módulo Registro
Historia de Usuario
Módulo: Producción
Número: PRO01

Usuario: Equipo técnico, Gerente

Nombre Historia:

Gestionar datos los beneficiarios

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 2 días

Alta

Iteración Asignada: 1

Programador Responsable: Equipo G-1
Descripción: Permite Registrar, Editar, Listar beneciarios, según a los siguientes datos
solicitados:
Registrar y Editar Asociación:
 Código.
 Nombres.
 Descripción.
 Inicio.
 Ubicación.
Registrar y Editar Sectores:
 Nombre
 Descripción
Listar Asociación y Sector mostrando productores que lo conforman.
Observaciones:

Tarea
Número Tarea: PRO01.1
Nombre Tarea:

Número Historia: PRO01
Diseñar Base de datos para registro y edición de Asociación y
Sectores

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 4

Programador Responsable: Equipo G-1
Descripción: Diseño de base de datos para el registro de Asociaciones y Sectores.

Tarea
Número Tarea: PRO01.2
Nombre Tarea:

Número Historia: PRO01
Crear interfaz gráficas para registrar Asociación y Sectores.

Tipo de Tarea: Diseño

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Se hace el diseño del formulario en el que se introducirán nueva Asociación y
Sectores.

2

3. Historia de Usuario y Requerimientos SRS
3.1. Segunda Iteración: Módulo Operaciones
Historias de Usuario: Operaciones
Historia de Usuario
Módulo: Operación
Módulo: Operación
Número: OPE01

Usuario: Equipo técnico, Gerente

Nombre Historia:

Gestionar datos de Beneficiario

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 9 días

Alta

Iteración Asignada: 2

Programador Responsable: Equipo G-1
Descripción: Permite Registrar, Listar Beneficiario, según a los siguientes datos solicitados:
Registrar Beneficiario;
 Código.
 Nombre.
 Apellido Paterno.
 Apellido Materno.
 Agregar Documento.
o Tipo Documento.
o Número de Documento.
 Tipo de Persona (Natural y Jurídica).
 Sexo.
 Dirección.
 Número. Hijos.
 Hijos Dependientes.
 Hijos Independientes.
 Número de Padrón.
 Educación.
 Asociación
 Sectores.
Listar Productores Acopios mostrando productores que lo conforman.
Observaciones:

Tarea
Número Tarea: OPE01.1
Nombre Tarea:

Número Historia: OPE01
Diseñar Base de Datos para registro de Beneficiario

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Realizar el diseño de base de datos para el Registro de Beneficiario.

3

4. Historia de Usuario y Requerimientos SRS
4.1. Tercera Iteración: Módulo Mantenimiento
Historias de Usuario: Procesamiento
Historia de Usuario
Módulo: Mantenimiento
Número: MAT01

Usuario: Jefe de Programa

Nombre Historia:

Gestionar datos de Procesamiento.

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 10 días

Alta

Iteración Asignada: 3

Programador Responsable: Equipo G-1
Descripción: Permite gestionar datos de Procesamiento según a los siguientes datos
solicitados:
Registro de Procesamiento:
 Campaña
 Almacén
 Fecha de Proceso
 Paquetes Adquiridos
o Tarjeta
o Numero
o Cantidad
o Observaciones
 Peso de lote de Adquisición
Listar Procesamientos
Detallar Procesamiento
 Registrar, Listar e Imprimir Productos
Registrar, Listar e Imprimir Beneficiarios
Observaciones:

Tarea
Número Tarea: MAT01.1
Nombre Tarea:

Número Historia: MAT01
Diseñar Base de datos para registro de Procesamiento.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 6

Programador Responsable: Equipo G-1
Descripción: Diseño de base de datos para el registro de Procesamiento.

4

5. Historia de Usuario y Requerimientos SRS
5.1. Segunda Iteración: Módulo Informes
Historias de Usuario: Gestión de Informes
Historia de Usuario
Módulo: Informes
Número: INF01

Usuario: Asistente Administrativo, Gerencia

Nombre Historia:

Gestionar datos de Beneficiarios y Productos

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 3 días

Alta

Iteración Asignada: 3

Programador Responsable: Equipo G-1
Descripción: Permite gestionar datos de Beneficiarios según a los siguientes datos
solicitados:
Registrar y Editar Clientes:
 Nombre
 Apellido paterno
 Apellido materno
 Tipo persona(natural, jurídica)
 Dirección
Listar Clientes
Observaciones:

Tarea
Número Tarea: INF01.1
Nombre Tarea:

Número Historia: INF01
Diseñar Base de datos para Clientes.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 5

Programador Responsable: Equipo G-1
Descripción: Diseño de base de datos para el registro de Clientes

Tarea
Número Tarea: INF01.2
Nombre Tarea:

Número Historia: INF01
Crear interfaz gráficas para registrar Clientes

Tipo de Tarea: Diseño

Tiempo Estimado(Horas): 5

Programador Responsable: Equipo G-1
Descripción: Se hace el diseño de formularios en el que se introducirán datos de un
Beneficiario

5

6. Historia de Usuario y Requerimientos SRS
6.1. Segunda Iteración: Módulo Control Documentario
Historias de Usuario: Control Documentario
Historia de Usuario
Módulo: Control Documentario
Número: CDO01

Usuario: Equipo técnico

Nombre Historia:

Gestionar datos del Documento Carta

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 4 días

Alta

Iteración Asignada: 5

Programador Responsable: Equipo G-1
Descripción: Permite Registrar, Editar, Listar Documento Carta, según a los siguientes
datos solicitados:
Registrar y Editar Documento Carta:
 Nombre del Año.
 Fecha Actual.
 Lugar.
 Fecha del Documento.
 Número del Documento.
 Nombres del Remitente.
 Nombres del Destinatario.
 Asunto.
 Referencia.
 Saludo.
 Contenido.
 Despedida.
 Adjuntos
Listar Documentos Carta, mostrando los datos relevantes.
Observaciones:

Tarea
Número Tarea: CDO01.1
Nombre Tarea:

Número Historia: CDO01
Diseñar Base de Datos para registro de Documento Carta.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Realizar el Diseño de base de datos para el Registro de Documento Carta.

6

7. Historia de Usuario y Requerimientos SRS
7.1. Segunda Iteración: Módulo Caja
Historias de Usuario: Caja
Historia de Usuario
Módulo: Caja
Número: CJA01

Usuario: Equipo técnico, Gerente de Producción

Nombre Historia:

Gestionar datos de Ingreso

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 4 días

Alta

Iteración Asignada: 6

Programador Responsable: Equipo G-1
Descripción: Permite Registrar, Editar, Listar Ingresos, según a los siguientes datos
solicitados:
Registrar y Editar Ingresos:
 Número de Ingreso.
 Serie.
 Fecha del Comprobante.
 Concepto.
 Moneda.
 Monto.
 Descripción.
Listar registro de Ingresos, mostrando los datos relevantes.
Observaciones:

Tarea
Número Tarea: CJA01.1
Nombre Tarea:

Número Historia: CJA01
Diseñar Base de Datos para registro de Ingreso.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Realizar el Diseño de base de datos para el Registro de Ingreso.

Tarea
Número Tarea: CJA01.2
Nombre Tarea:

Número Historia: CJA01
Crear interfaz gráficas para registrar Ingresos.

Tipo de Tarea: Diseño

Tiempo Estimado(Horas): 3

Programador Responsable: Equipo G-1
Descripción: Realizar el diseño del formulario en el que se ingresaran datos de Ingresos.

7

8. Historia de Usuario y Requerimientos SRS
8.1. Segunda Iteración: Módulo Gerencia
Historias de Usuario: Gerencia
Historia de Usuario
Módulo: Gerencia
Número: GER01

Usuario: Gerente

Nombre Historia:

Gestionar datos de Precio de Productos

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 8 días

Alta

Iteración Asignada: 7

Programador Responsable: Equipo G-1
Descripción: Permite Registrar, Editar, Listar Precio de Productos, según a los siguientes
datos solicitados:
Registrar Precio de Producción:
 Producto.
 Moneda.
 Precio (Kg).
Listar Precios de Producción mostrando los datos que lo conforman.
Observaciones:

Tarea
Número Tarea: GER01.1
Nombre Tarea:

Número Historia: GER01
Diseñar Base de Datos para registro de Precio de Producto.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Realizar el diseño de base de datos para el Registro de Precio de Producto.

Tarea
Número Tarea: GER01.2
Nombre Tarea:

Número Historia: GER01
Crear interfaz gráficas para registrar Precio de Producto.

Tipo de Tarea: Diseño

Tiempo Estimado(Horas): 4

Programador Responsable: Equipo G-1
Descripción: Realizar el diseño del formulario en el que se ingresaran datos del precio de
Producto.

8

9. Historia de Usuario y Requerimientos SRS
9.1. Segunda Iteración: Módulo Personal Administrativo
Historias de Usuario: Personal Administrativo
Historia de Usuario
Módulo: Personal Administrativo
Número: APA01

Usuario: Asistente de gerencia

Nombre Historia:

Gestionar datos del Personal Administrativo

Prioridad:

Alta

Riesgo en desarrollo:

Tiempo Estimado: 10 días

Alta

Iteración Asignada: 8

Programador Responsable: Equipo G-1
Descripción: Descripción: Permite Registrar, Editar, Listar Personal Administrativo, según
a los siguientes datos solicitados:
Registrar y Editar Personal Administrativo:
 Código.
 Nombre.
 Apellido Paterno.
 Apellido Materno.
 Sueldo.
 Usuario.
 Contraseña.
 Confirmación de Contraseña.
 Tipo de Persona (Natural, Jurídica).
 Sexo.
 Dirección.
 Educación.
 Grupo.
Listar Personal Administrativo mostrando código, nombre, apellido paterno, apellido materno.
Observaciones:

Tarea
Número Tarea: APA01.1
Nombre Tarea:

Número Historia: APA01
Diseñar Base de Datos para registro de Personal Administrativo.

Tipo de Tarea: Desarrollo

Tiempo Estimado(Horas): 2

Programador Responsable: Equipo G-1
Descripción: Realizar el Diseño de base de datos para el Registro de Personal
Administrativo.

9

ENCUESTA
La presente encuesta, que se le presenta estimado usuario es con la finalidad de verificar la
satisfacción que usted ha alcanzado tras la puesta en funcionamiento del nuevo sistema, además
esto corroborará a que el ejecutor de este proyecto realice el sustento adecuado de la aceptación
del nuevo sistema.
Nota: Lea cuidadosamente y marque con una X la alternativa que usted considere.
1. En cuanto a la confiabilidad del Sistema ¿Cuál es su apreciación con el manejo de
información en sus procesos?
a. Excelente
b. Bueno
c. Regular
d. Malo
e. Deficiente
2. Respecto a la Facilidad del Uso del Sistema ¿Cuál es su apreciación?
a. Excelente
b. Bueno
c. Regular
d. Malo
e. Deficiente
3. Según usted, ¿Cómo califica el tiempo para realizar un proceso?
a. Excelente
b. Bueno
c. Regular
d. Malo
e. Deficiente
4. Según usted, como califica, acerca de que los costos de operación son menores con el uso
del Sistema.
a. Excelente
b. Bueno
c. Regular
d. Malo
e. Deficiente
5. Con la Implementación del Sistema, ¿Cuál es la calificación, respecto a un mejor control?
a. Excelente
b. Bueno
c. Regular
d. Malo
e. Deficiente

10

UNIVERSIDAD NACIONAL DEL ALTIPLANO – PUNO
FACULTA DE INGENIERIA ESTADISTICA E INFORMATICA
ESCUELA PROFECIONAL DE INGENIERIA ESTADISTICA E INFORMATICA

MANUAL DE USUARIO
Elaborado por: Bach. Cesar Aurelio, HUANCA SUAQUITA

11

MANUAL DEL USUARIO

El presente manual, tiene como objetivo, instruir al usuario sobre el SISTEMA, presentado y
explicando las principales pantallas de ingreso de datos y los reportes generados con la
información.

VENTANA DE AUTENTIFICACION

En esta sección se requiere un usuario y contraseña proporcionado por el administrador del
sistema, para poder acceder al sistema “Sistema de

Información para la Administración

de Programas Sociales (SIAPS)”, y posteriormente dar uso al sistema, ingresando su
usuario y su respectivo password, finalmente presionamos Aceptar, en caso el passoword sea
incorrecto no podrá ingresar.

Figura Nº 01

Ventana de autentificación

VENTANA GENERAL

Este administrador nos permite navegar entre los registros de la base de datos mediante sus
diferentes módulos de trabajo.

Figura Nº 02

Ventana de general del sistema.

12

Así como también nos permite agregar registros, eliminar, editarlos. Y en la parte superior
contiene menús de accesos a otras ventanas como registro, operación, mantenimiento, informes,
ayuda.

Modulo Inicio

El modulo inicio nos ayuda a retornar al inicio del sistema después de haber efectuado alguna
operación en cualquiera de los diferentes módulos.

Figura Nº 03

Ventana de los módulos del sistema.

MÓDULO DE REGISTRO

En este módulo podremos registrar los funcionarios encargados del sistema, los beneficiarios
directos de los diferentes programas, proveedores de los productos y los diferentes productos.

Figura Nº 04

Ventana de los módulos del sistema.

Registro de Beneficiarios

En esta ventana podemos agregar nuevos beneficiarios, editar sus datos y eliminar, como
también nos permite buscar beneficiarios por apellidos nombres, por número y programa social
al cual pertenece.

13

Figura Nº 05

módulo de registro de beneficiarios.

Registro de Funcionarios

En esta ventana podemos agregar nuevos funcionarios que administren el sistema de
información, editar sus datos y eliminar usuario, como también nos permite buscar usuarios por
apellidos nombres, por número y programa social al cual está autorizado a administrar.

Figura Nº 06

módulo de registro de funcionarios.

Registro de Funcionarios

En esta ventana podemos un nuevos funcionario que administre el sistema de información, editar
sus datos y eliminar usuario.

Figura Nº 07

módulo de registro de funcionarios.
14

Registro de Proveedores

En esta ventana podemos agregar nuevos proveedores, editar sus datos y eliminar, como
también nos permite buscar usuarios por apellidos nombres, por número y programa social al
cual proveen.

Figura Nº 08

módulo de búsqueda de registro de funcionarios.

Registro de Productos

En esta ventana podemos agregar nuevos productos, editar su descripción y eliminarlos, como
también nos permite buscar usuarios nombres, por código y programa social del cual se
distribuyen.

Figura Nº 09

módulo de registro de productos.

MODULO DE OPERACIONES

En este módulo tenemos dos ventanas, PECOSA (Pedido de Comprobante de Salida) y NEA
(Nota de Entrada de Almacén), este módulo se encarga de ingresar productos a través del
módulo de NEA y distribuirlos mediante el módulo de PECOSA, a través de las diferentes
modalidades en ventanas como son, Adquisición, Donaciones, Transferencias, Sobrantes,
Bienes Recuperados.
15

Pecosa – P. Adquisiciones

Figura Nº 10

módulo de registro de adquisiciones.

PECOSA - Donaciones

Figura Nº 11

módulo de registro de adquisiciones.

PECOSA – P. Transferencias

Figura Nº 12

módulo de registro de adquisiciones.

NEA – Adquisiciones

Figura Nº 13

módulo de registro de adquisiciones.
16

NEA – Donaciones

Figura Nº 14

módulo de registro de adquisiciones.

NEA – Transferencias

Figura Nº 15

módulo de registro de adquisiciones.

VENTANA DE MANTENIMIENTOS

En este módulo podemos administra los diferentes programas sociales, también podemos
modificarlos y eliminarlos de acuerdo a la necesidad de los beneficiarios.

Figura Nº 16

módulo de registro de adquisiciones.

17

VENTANA DE INFORMES Y REPORTES.

En este módulo tenemos tres ventanas las de PECOSA, NEA, HISTORIAL y en cada una
podemos buscar por código nombre nombres, programa social y ver los reportes
correspondientes a cada uno.

INFORME - NEA

Figura Nº 17

módulo de registro de adquisiciones.

Figura Nº 18

módulo de registro de adquisiciones.

REPORTE – NEA

18

CODIGO FUENTE
INICIANDO PHP
<?php
if (!empty($_SERVER['HTTPS']) && ('on' == $_SERVER['HTTPS'])) {
$uri = 'https://';
} else {
$uri = 'http://';
}
$uri .= $_SERVER['HTTP_HOST'];
header('Location: '.$uri.'/cesar/');
exit;
?>
Something is wrong with the XAMPP installation :-(

FORMULARIO DE PASSWORD
<?PHP
include( "php/mysqlcnx.php" );

$isActive = false;
if( sessionIsActive() )
$isActive = true;
?>

<br><br><br><br><br><br>
<center> <img src="res/siaps.png"> </center>
<br><br><br><br><br><br>
<?PHP
if( $isActive == false ){
?>
<!-Step 1. Create DIV as wndLock
Step 2. Load into wndLock file "busq.php"
Step 3. Insert OK, Cancel AS Button
-->
<div id="wndLock" class="sombra" style="visibility: visible;">
<div id="vwLogin">
<div id="frmHead" class="gradBlue" style="padding: 7px"> <b>Verificación de Usuarios</b> </div>

<div id="vwListaL">
<center> <img src="res/siaps.png" width=350>
<form class="frmLogin" action="qryLogin.php" method="post"> <!-- onsubmit="doLogin();
return false"> -->
<table cellpadding=7>

19

<tr>
<td> Usuario </td>
<td> <input name="fldUser" class="edt1" type="text" autofocus> </td>
</tr>
<tr>
<td> Contraseña </td>
<td> <input name="fldPass" class="edt1" type="password"> </td>
</tr>
</table>
<hr>
<input class="btn1 gradBlue" type="button" value="SALIR">
<input class="btn1 gradBlue" type="submit" value="INICIAR">
</form>
</center>
</div>
</div>
</div>

<?PHP
}
?>

FORMULARIO DE INICIO
Visualiza la primera pantalla de presentación en el sistema, mostrando los diferentes modulos
como Registro, Operaciones, Mantenimiento, Informes y Reportes y Ayudas.
<!-- ==================================================================
==
== UNIVERSIDAD NACIONAL DEL ALTIPLANO - PUNO
==

INGENIERIA ESTADISTICA E INFORMATICA

==
=================================================================== -->
<!DOCTYPE HTML>
<HTML lang="es">
<HEAD>
<title> SIAPS - 2014 </title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<link href="res/estilos.css" rel="stylesheet">
<link href="res/menu1.css" rel="stylesheet">
<link href="faviconb.png" rel="icon" type="image/x-icon">
<script src="js/script.js" language="javascript" type="text/javascript"></script>
<script src="js/events.js" language="javascript" type="text/javascript"></script>
</HEAD>
<BODY>
<DIV id="dvTitulo" class="gradGris">
<div class="titDatos">

20

<div id="vwName" class="T1"> </div>
<div id="vwUser" class="T2"> </div>
</div>
<div class="titLogo">
<a href="http://www.siaps.com" alt="Ir la Página Principal">
<img src="res/siaps.png" height=88>
</a>
</div>
</DIV>
<div id="dvCentral"> <!-- Marco Central -->
<div id="dvFrame" class="panel"> <!-- Marco Contenido (Menu+Data) -->
<div style="height: 42px" class="gradGris">
<div id="dvMenu">
<ul class="mainMenu">
<li><a onclick="OnMnuInicio()" href=""> Inicio </a></li>
<li><a onclick=""> Registro </a>
<ul>
<li><a onclick="OnMnuBenefic()" href="#">Beneficiario</a></li>
<li><a onclick="OnMnuProveeds()" href="#">Proveedor</a></li>
<li><a onclick="OnMnuFuncions()" href="#">Funcionario</a></li>
<li><a onclick="OnMnuProducto()" href="#">Productos</a></li>
</ul>
</li>
<li><a onclick=""> Operación </a>
<ul>
<li><a onclick="" href="#"> Pecosa </a>
<ul>
<li><a onclick="OnMnuPecosa(1)"
href="#">Adquisiciones</a></li>
<li><a
onclick="OnMnuPecosa(2)" href="#">Donaciones</a></li>
<li><a
onclick="OnMnuPecosa(3)" href="#">Transferencias</a></li>
<li><a
onclick="OnMnuPecosa(4)" href="#">Sobrantes</a></li>
<li><a
onclick="OnMnuPecosa(5)" href="#">Bienes Recuperados</a></li>
<li><a
onclick="OnMnuPecosa(6)" href="#">Ingreso Almacen</a></li>
</ul>
</li>
<li><a onclick="" href="#"> N.E.A. </a>
<ul>
<li><a onclick="OnMnuAdquis(1)"
href="#">Adquisiciones</a></li>
<li><a
onclick="OnMnuAdquis(2)" href="#">Donaciones</a></li>
<li><a
onclick="OnMnuAdquis(3)" href="#">Transferencias</a></li>

21

<li><a
onclick="OnMnuAdquis(4)" href="#">Sobrantes</a></li>
<li><a
onclick="OnMnuAdquis(5)" href="#">Bienes Recuperados</a></li>
<li><a
onclick="OnMnuAdquis(6)" href="#">Ingreso Almacen</a></li>
</ul>
</li>
</ul>
</li>
<li><a onclick="">Mantenimiento</a>
<ul>
<li><a onclick="OnBtnCategs()" href="#">Programas</a></li>
</ul>
</li>
<li><a onclick="">Informes</a>
<ul>
<li><a onclick="OnBtnRepVentas()" href="#"> PECOSAS </a></li>
<li><a onclick="OnBtnRepNEA()" href="#"> N.E.A. </a></li>
<li><a onclick="OnBtnRepHistory()" href="#">Historial</a></li>
</ul>
</li>
<li><a onclick="">Ayuda</a>
<ul>
<li><a onclick="OnMnuManual()" href="#">Manual de Usuario</a></li>
<li><a onclick="OnMnuContacs()" href="#">Contáctos SIAPS</a></li>
</ul>
</li>
<li><a onclick="OnMnuSalir()" href="#">Salir</a></li>
</ul>
</div>
</div>
<div id="vwData"> </div>
</div> <!-- Marco Contenido (Menu+Data) -->
<br><br><br><br><br>
<div> <!-- Marco Central -->

<DIV id="dvPie" class="gradBlue">
<div style="padding: 9px">
Bienvenidos - <b style="color: blue">SIAPS 2014</b> <br>
<small>Desarrollado por Cesar Aurelio Huanca Suaquita</small>
</div>
</DIV>
</BODY>
</HTML>

22

A continuación vamos a mostrar cada una de las diferentes ventanas del sistema.

Agregar un Registro
<?PHP
include( "php/mysqlcnx.php" );
$nId = $_REQUEST["id"];
$Cod = $_REQUEST["cod"];
$i = 1;
$Query = "SELECT * FROM productos WHERE Id=$nId";
if( $nId == null )
$Query = "SELECT * FROM productos WHERE Codigo='$Cod'";

// now search and get it
$Result = getRecordset( $Query );
if( $Row = mysql_fetch_array($Result) ){
// devolver un valor que sea separable con split("|")
echo $Row["Id"]
echo $Row["Codigo"]

. "|";
. "|";

echo $Row["Descripcion"] . "|";
echo $Row["Precio"]

. "|1|" .$Row["Precio"];

}
else
echo "Error";
?>

Asignado Categoría
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}

$fldUserId = getGlobalVar( "gUserId" );
$action = $_REQUEST["act"];
$value = $_REQUEST["value"];
$extra = $_REQUEST["extra"];
$sqlQuery = "";
if( $action == 1 )
$sqlQuery = "INSERT INTO categorias VALUES(NULL, $fldUserId, '$value')";
if( $action == 2 )
$sqlQuery = "DELETE FROM categorias WHERE Id=$value";
if( $action == 3 )

23

$sqlQuery = "UPDATE categorias SET Nombre='$extra' WHERE Id=$value";
$Result = ExecuteSQL( $sqlQuery );
if( $Result )
echo "Accion exitosa!";
else
echo "Error en consulta";
?>

Asignado Producto
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$fldUserId = getGlobalVar( "gUserId" );
$categoria = $_REQUEST["cat"];
$sqlQuery = "SELECT * FROM productos
WHERE IdUsuario = $fldUserId
AND IdCategoria = $categoria ";
$Result = getRecordset( $sqlQuery );
echo "<select id=cboSubProd name=cboSubProd class=cbo2>";
while ( $Row = mysql_fetch_array($Result) ) {
$caption = getFieldStr( $Row, "Descripcion" );
echo "<option value=" .$Row["Id"]. "> $caption </option>";
}
echo "</select>";
freeRecordset( $Result );
?>

Gravando ventas y otros
<?PHP
include( "php/mysqlcnx.php" );
sessionIsActive();

$user = getGlobalVar("gUserId");
$subt = $_REQUEST["subt"];
$ruc = $_REQUEST["ruc"];
$dest = $_REQUEST["dest"];
$i = 0;
$K = 1;
$Query = "INSERT INTO ventas VALUES( NULL, $user, NOW(), '$ruc', '$dest' )";
if( !ExecuteSQL($Query) ){
echo "Error en: $Query";

24

return;
}
//---------------------------------------------------------// Obtener Clave de Venta
//---------------------------------------------------------$Query = "SELECT * FROM ventas ORDER BY Id DESC LIMIT 1";
$Result = getRecordset( $Query );
if( $Row = mysql_fetch_array($Result) ) $K = $Row["Id"];
freeRecordset($Result);
//---------------------------------------------------------while( isset($_REQUEST["fc$i"]) ){
$ids = $_REQUEST["fi$i"];
$cod = $_REQUEST["fk$i"];
$num = $_REQUEST["fc$i"];
$tot = $_REQUEST["ft$i"];
$Query = "INSERT INTO ventasdet VALUES(NULL,$K,$ids, '$cod', $num,$tot)";
ExecuteSQL($Query);
$i = $i + 1;
}
echo "Se guardaron ($i) registros";
?>

Recuperar Archivos
<?PHP
// todos los envios han de ser de menos de 1MB
//
function sacarTipoArch( $fileName )
{
$extRes = "OTRO";
$tmpExt = strtoupper( strrchr( $fileName, ".") );
if( $tmpExt==".JPG" or $tmpExt==".JPEG" )
$extRes = "JPG";
return $extRes;
}

// corregimos las tildes para copiar el archivo
$tempName = $_FILES["archivo"]["tmp_name"];
$fullDest = "./img/" . utf8_decode($_REQUEST["nombReal"]);
$tipoArch = sacarTipoArch( $_REQUEST["nombReal"] );

if( $tipoArch == "OTRO" ) return;

echo "<br><br>";
if ( is_uploaded_file($tempName) ) {

25

copy( $tempName, $fullDest );
echo "OK, Foto subida con exito<br>";
}
else
echo "Error, Fallo al subir Imagen<br>";
?>

Index
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = false;
if( sessionIsActive() )
$isOnSession = true;
?>
<!-- ==================================================================
==
== UNIVERSIDAD NACIONAL DEL ALTIPLANO - PUNO
==

INGENIERIA ESTADISTICA E INFORMATICA

==
=================================================================== -->
<!DOCTYPE HTML>
<HTML lang="es">
<HEAD>
<title> SIAPS - 2014 </title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<link href="res/estilos.css" rel="stylesheet">
<link href="res/menu1.css" rel="stylesheet">
<link href="faviconb.png" rel="icon" type="image/x-icon">
<script src="js/script.js" language="javascript" type="text/javascript"></script>
<script src="js/events.js" language="javascript" type="text/javascript"></script>
</HEAD>
<BODY>
<DIV id="dvTitulo" class="gradGris">
<div class="titDatos">
<div id="vwName" class="T1"> <?PHP if($isOnSession) echo getGlobalVar( "gUser"); ?> </div>
<div id="vwUser" class="T2"> <?PHP if($isOnSession) echo getGlobalVar( "gCompany"); ?> </div>
</div>
<div class="titLogo">
<a href="http://www.siaps.com" alt="Ir la Página Principal">
<img src="res/siaps.png" height=88>
</a>
</div>
</DIV>

26

<div id="dvCentral"> <!-- Marco Central -->
<div id="dvFrame" class="panel"> <!-- Marco Contenido (Menu+Data) -->
<div style="height: 42px" class="gradGris">
<div id="dvMenu">
<ul class="mainMenu">
<li><a onclick="OnMnuInicio()" href=""> Inicio </a></li>
<li><a onclick=""> Registro </a>
<ul>
<li><a onclick="OnMnuBenefic()" href="#">Beneficiario</a></li>
<li><a onclick="OnMnuProveeds()" href="#">Proveedor</a></li>
<li><a onclick="OnMnuFuncions()" href="#">Funcionario</a></li>
<li><a onclick="OnMnuProducto()" href="#">Productos</a></li>
</ul>
</li>
<li><a onclick=""> Operación </a>
<ul>
<li><a onclick="" href="#"> Pecosa </a>
<ul>
<li><a onclick="OnBtnVenta()" href="#">Ventas</a></li>
<li><a onclick="OnBtnVenta()"
href="#">Distribucion</a></li>
<li><a onclick="OnBtnVenta()" href="#">Donación</a></li>
<li><a onclick="OnBtnVenta()" href="#">Apoyo</a></li>
</ul>
</li>
<li><a onclick="" href="#"> N.E.A. </a>
<ul>
<li><a onclick="OnMnuAdquis(1)"
href="#">Adquisiciones</a></li>
<li><a onclick="OnMnuAdquis(2)"
href="#">Donaciones</a></li>
<li><a onclick="OnMnuAdquis(3)"
href="#">Transferencias</a></li>
<li><a onclick="OnMnuAdquis(4)"
href="#">Sobrantes</a></li>
<li><a onclick="OnMnuAdquis(5)"
href="#">Bienes Recuperados</a></li>
<li><a onclick="OnMnuAdquis(6)"
href="#">Ingreso Almacen</a></li>
</ul>
</li>
</ul>
</li>
<li><a onclick="">Mantenimiento</a>
<ul>
<li><a onclick="OnBtnCategs()" href="#">Programas</a></li>
<li><a onclick="OnFooEvent()" href="#">Documentos</a></li>
</ul>
</li>

27

<li><a onclick="">Informes</a>
<ul>
<li><a onclick="OnBtnRepVentas()" href="#">Adquisiciones</a></li>
<li><a onclick="OnBtnRepVentas()" href="#">Venta</a></li>
<li><a onclick="OnBtnRepVentas()"
href="#">Donaciones</a></li>
<li><a onclick="OnBtnRepVentas()" href="#">Apoyos</a></li>
<li><a onclick="OnBtnRepHistory()" href="#">Historial</a></li>
</ul>
</li>
<li><a onclick="">Ayuda</a>
<ul>
<li><a onclick="OnMnuManual()" href="#">Manual de Usuario</a></li>
<li><a onclick="OnMnuContacs()" href="#">Contáctos SIAPS</a></li>
</ul>
</li>
<li><a onclick="OnMnuSalir()" href="#">Salir</a></li>
</ul>
</div>
</div>
<div id="vwData"> </div>
</div> <!-- Marco Contenido (Menu+Data) -->
<br><br><br><br><br>
<div> <!-- Marco Central -->

<DIV id="dvPie" class="gradBlue">
<div style="padding: 9px">
Bienvenidos - <b style="color: blue">SIAPS 2014</b> <br>
<small>Desarrollado por Cesar Aurelio Huanca Suaquita</small>
</div>
</DIV>
</BODY>
</HTML>

Historial
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>

28

<div class="bar1">
<div class="lab"> Historial de Acciones </div>
<div class="btn">
</div>
</div>

<div id="vwBenef" class="bar2" style="clear:both; padding: 15px; height: 310px; overflow: auto">
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=120> Fecha </td>
<td width=120> Hora </td>
<td width=150> Usuario </td>
<td width=360> Descripcion </td>
</tr>
<?PHP
$IdUser = getGlobalVar( "gUserId");
$sqlQuery = "SELECT DATE(H.Fecha) AS FechaS, TIME(H.Fecha) AS HoraS,
H.Usuario, H.Descripcion
FROM historial AS H
WHERE H.IdUsuario = $IdUser
ORDER BY Fecha DESC";

$Result = getRecordset( $sqlQuery );
$NroItem = 1;

while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";

echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["FechaS"]. "</td>";
echo "<td>" .$Row["HoraS"]. "</td>";
echo "<td> <b>" .$Row["Usuario"]. "</b> </td>";
echo "<td>" .$Row["Descripcion"]. "</td>";
echo "</tr>";

$NroItem++;
}
freeRecordset($Result);
?>
</table>
</div>

29

Reporte NEA
<?PHP
require('PDF/fpdf.php');
include( "php/mysqlcnx.php" );
class PdfTable extends FPDF
{
//function FancyTable( $header, $data, $w, $align )
function FancyTable( $header, $data, $w, $align )
{
// establecer margenes.
/*
#Creamos el objeto pdf (con medidas en milímetros):
$pdf = new FPDF('P', 'mm', 'A4');
#Establecemos los márgenes izquierda, arriba y derecha:
$pdf->SetMargins(30, 25 , 30);
#Establecemos el margen inferior:
$pdf->SetAutoPageBreak(true,25);
*/
}

// Page header
function Header()
{
// Logo
$this->Image('res/siaps.png',10,6,100);
$this->Image('res/muniazangaro.png',175,3,25);
// Arial bold 15
$this->SetFont('Arial','B',12);
// Move to the right
//$this->Cell( 70 );
//$this->Cell( 190, 10, utf8_decode("Administración de CETPROs"), 0, 1,'C',0);
$this->Line( 10, 40, 200, 40 );
// Line break
$this->Ln(35);
//$this->Cell( 190, 10, "OK" );
}

// Page footer
function Footer()
{
// Position at 1.5 cm from bottom
$this->SetY(-18);
// Arial italic 8

30

$this->SetFont('Arial','I',8);
// Page number
$this->Line( 10, 280, 200, 280 );
$this->Cell(0,10,"Desarrollado Cesar A. Huanca Suaquita",0,0,'C');
//$this->Cell(0,10,'Page '.$this->PageNo().'/{nb}',0,0,'C');
}
}
//-------------------------------------------------------------------------------//instanciamos la clase
$pdf = new PdfTable("P","mm","A4");
$pdf->AddPage();
$pdf->SetMargins(17, 25 , 17);
$pdf->SetFont('Arial','',10);
//----------------------------------------------// PDF Begin
//----------------------------------------------$pdf->SetFont('Arial', '', 20);
$pdf->Cell( 194, 9, "N.E.A.", 0, 1, 'C' );
$tmpString = utf8_decode("NOTA DE ENTRADA DE ALMACÉN");
$pdf->Cell( 180, 9, $tmpString, 0, 1, 'C' );
$idProdAdq = $_REQUEST["id"];
$sqlQuery = "SELECT * FROM vwAdquisiciones WHERE Id=$idProdAdq";
$Result = getRecordset( $sqlQuery );
if( $Row = mysql_fetch_array($Result) ) {
$tmpString = sprintf("Nro: %05d", $Row["Id"] );
$pdf->Cell( 180, 9, $tmpString, 0, 1, 'C' );
$pdf->Cell( 180, 6, "", 0, 1, 'C' );

$pdf->SetFont('Arial', '', 12);
$pdf->Cell( 180, 6, "MUNICIPALIDAD PROVINICIAL DE AZANGARO", 0, 1, 'C' );
$pdf->Cell( 180, 6, "GERENCIAL DE DESARROLLO SOCIAL", 0, 1, 'C' );
$pdf->Cell( 180, 6, "PROGRAMAS SOCIALES", 0, 1, 'C' );
$pdf->SetFont('Arial', 'B', 12);
$pdf->Cell( 180, 4, "" , 0, 1, 'C' );
$pdf->Cell( 180, 6, $Row["NombProg"] , 0, 1, 'C' );
$pdf->Cell( 180, 4, "" , 0, 1, 'C' );
$pdf->SetFont('Arial', '', 11);
$sql = "SELECT * FROM funcionarios
WHERE IdUsuario = 2
AND IdPrograma = 1";
$res = getRecordset( $sql );
$GerenteDS = "";
$GerentDNI = "";
if( $row = mysql_fetch_array($res) ){
$GerenteDS = $row["Apellidos"] .", ". $row["Nombres"];
$GerentDNI = $row["DNI"];

31

}
$tmpString = "En Municipalidad Provincial de Azángaro, Departamento de Puno ";
$tmpString .= "representado por el Gerente de Desarrollo Social Don: $GerenteDS ";
$tmpString .= "con DNI Nº $GerentDNI ";
$tmpString .= "y el Proveedor: " . $Row["NombProv"]. " ";
$tmpString .= "representado por Sr(a): " . $Row["RepProv"]. " ";
$tmpString .= "con RUC Nº " . $Row["RUCProv"]. " ";
$tmpString .= "con el documento de referencia " . $Row["DocRef"]. ". ";
$tmpString .= "Quién entrega a los almacenes de la Gerencia de Desarrollo Social lo
detallado en el cuadro siguiente.";
$pdf->MultiCell( 180, 5, utf8_decode($tmpString), 0, 'J', false );
// detalle de productos
$pdf->Ln(8);
$pdf->SetDrawColor( 100, 100, 120 );
$pdf->Cell( 180, 8, "EQUIPAMIENTO" , 1, 1, 'C' );
$datos = array( "Nº", "Descripción", "U. de Medida",
"Cantidad", "P. Unitario", "P. Total" );
$anchs = array( 10, 75, 35, 20, 20, 20 );
$pdf->SetFillColor( 200, 225, 255 );
$pdf->SetFont('Arial', 'B', 10);
for( $i=0; $i<6; $i++ ) {
$pdf->Cell( $anchs[$i], 8, utf8_decode($datos[$i]) , 1, 0, 'L', 1 );
}
$pdf->Ln();

$pdf->SetFont('Arial', '', 11);
$datos = array( "", $Row["Descripcion"], $Row["Nombre"],
$Row["Cantidad"], "-", $Row["PrecioTot"] );
for( $i=0; $i<6; $i++ ) {
$datos[0] = $i+1;
$pdf->Cell( $anchs[$i], 8, utf8_decode($datos[$i]) , 1, 0, 'L' );
}
}
freeRecordset( $Result );

//----------------------------------------------// PDF End
//----------------------------------------------$pdf->SetTitle( "Reporte N.E.A." );
$pdf->SetDisplayMode('real');
$pdf->Output();
?>

32

Adquisiciones
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$fldUserId = getGlobalVar( "gUserId" );
$IdAdqExt = getGlobalVar( "exIdAdq" ); // solo Adquisiciones
$cboComp

= $_REQUEST["cboComp"];

$cboProg

= $_REQUEST["cboProg"];

$cboProv

= $_REQUEST["cboProv"];

$fldCod

= $_REQUEST["fldCod"];

$fldOrden = $_REQUEST["fldOrden"];
$fldDocRef = $_REQUEST["fldDocRef"];
$cboSubProd = $_REQUEST["cboSubProd"];
$cboMedida = $_REQUEST["cboMedida"];
$fldCantid = $_REQUEST["fldCantid"];
$fldPrecio = $_REQUEST["fldPrecio"];
$fldPeso

= $_REQUEST["fldPeso"];

$fldFechComp = $_REQUEST["fldFechComp"];
$fldFechVenc = $_REQUEST["fldFechVenc"];
$sqlQuery = "INSERT INTO adquisiciones VALUES(
NULL, $fldUserId, '$cboComp', '$cboProg', '$cboProv',
'$fldCod', '$fldOrden', '$fldDocRef', '$cboSubProd',
'$cboMedida', '$fldCantid', '$fldPrecio',
'$fldPeso', '$fldFechComp', '$fldFechVenc',
$IdAdqExt )";
if( !ExecuteSQL($sqlQuery) )
echo "Error en: $sqlQuery";
else
echo "Datos guardados";
?>

Busca y enlista
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}

33

$cboBusq = 0;
if( isset($_REQUEST["cboBusq"]) )
$cboBusq = $_REQUEST["cboBusq"];
$busqExp = "";
if( isset($_REQUEST["busqExp"]) )
$busqExp = $_REQUEST["busqExp"];
?>
<!-- Area de busquedas -->
<table width=200>
<tr height=48>
<td valign="top"> Tipo de Busqueda
<select id="cboBusq" name="cboBusq" class="cbo2" onchange="OnBtnAdqListEx()">
<option value="0"> (seleccione) </option>
<option value="1" <?PHP echo $cboBusq==1?"selected":"";?> > Por Codigo </option>
<option value="2" <?PHP echo $cboBusq==2?"selected":"";?> > Por Nombre </option>
</select>
</td>
<td> Expresion a Buscar <input id="busqExp" name="busqExp" value="<?PHP echo $busqExp ?>"
class="edt1" type="text"> </td>
<td> &nbsp; <button onclick="OnBtnAdqListEx()" class="btn1 gradBlue"> Buscar </button> </td>
</tr>
</table>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=80 > Codigo </td>
<td width=200> Producto </td>
<td width=80 > Medida </td>
<td width=50 > Cantidad </td>
<td width=50 > Precio </td>
<td width=80 > Fecha de Compra </td>
<td width=80 > Fecha de Vencim. </td>
<td width=100 > Opciones </td>
</tr>
<?PHP
/*
echo "<br> U: " . getGlobalVar( "gUser");
echo "<br> I: " . getGlobalVar( "gUserId");
echo "<br> C: " . getGlobalVar( "gCompany");
*/
$TipoAdq = getGlobalVar( "exIdAdq" );
$IdUserG = getGlobalVar( "gUserId");
$sqlQuery = "SELECT * FROM vwAdquisiciones
WHERE TipoAdq = $TipoAdq
AND IdUsuario = $IdUserG ";

34

if( $cboBusq==1 )
$sqlQuery .= " AND Codigo LIKE '$cboProg%' ";
if( $cboBusq==1 )
$sqlQuery .= " AND Descripcion LIKE '%$cboProg%' ";
$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){

$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";

$idCliente = $Row["Id"];
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b>
echo "<td> " .$Row["Codigo"].

</td>";
"</td>";

echo "<td> " .$Row["Descripcion"]. "</td>";
echo "<td> " .$Row["Nombre"].

"</td>";

echo "<td> " .$Row["Cantidad"].

"</td>";

echo "<td> " .$Row["PrecioTot"]. "</td>";
echo "<td> " .$Row["FechCompra"]. "</td>";
echo "<td> " .$Row["FechVencim"]. "</td>";
$idProdAdq = $Row["Id"];
echo "<td> <a class='miniBtn' onclick=\"do(2,$idCliente)\" href='#'>borrar</a>
<a href='repNEApdf.php?id=$idProdAdq' target='_blank' class='miniBtn'>ver
PDF</a> </td>";
echo "</tr>";
$NroItem++;
}
freeRecordset($Result);
?>
</table>

Menus
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$IdAdq = 0;
if( isset($_REQUEST["IdAdq"]) )
$IdAdq = $_REQUEST["IdAdq"];

35

// para seleccionar Tipo de Adquisicion
setGlobalVar( "exIdAdq", $IdAdq );
// definición de array de opciones
$menuOps = array(
"Adquisiciones",
"Donaciones",
"Transferencias",
"Sobrantes",
"Bienes Recuperados",
"Ingresos a Almacén"
);
?>
<div class="bar1">
<div class="lab"> <?PHP echo $menuOps[$IdAdq-1]; ?> </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnAdqList()"> <img src="res/btnList.png"> </div>
<div class="btnIco" onclick="OnBtnAdqNuevo()"> <img src="res/btnNew.png"> </div>
</div>
</div>
<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
<input class="btn1 gradBlue" type="button" value="Mostrar" onclick="dlgBusqShow()">
</div>

Ventana de Beneficiarios
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<div class="bar1">
<div class="lab"> Registro de Beneficiarios </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnBenListar()"> <img src="res/btnList.png"> </div>
<div class="btnIco" onclick="OnBtnBenNuevo()"> <img src="res/btnNew.png"> </div>
</div>
</div>

<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
</div>

36

Graba Nuevo Beneficiario
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}

$fldUserId = getGlobalVar( "gUserId" );
$fldDNI

= $_REQUEST["fldDNI"];

$fldNombres = $_REQUEST["fldNombres"];
$fldApellis = $_REQUEST["fldApellis"];
$fldDirec = $_REQUEST["fldDirec"];
$fldCodigo = $_REQUEST["fldCodigo"];
$fldProg

= $_REQUEST["fldProg"];

$fldCelu

= $_REQUEST["fldCelu"];

$fldFecha = $_REQUEST["fldFecha"];
$fldTutor = $_REQUEST["fldTutor"];
$fldAsoc

= $_REQUEST["fldAsoc"];

$fldCelTut = $_REQUEST["fldCelTut"];
$fldNombres = strtoupper($fldNombres);
$fldApellis = strtoupper($fldApellis);
$sqlQuery = "INSERT INTO clientes VALUES(
NULL, $fldUserId, '$fldCodigo', '$fldProg',
'$fldDNI', '$fldNombres', '$fldApellis', '$fldDirec',
'$fldCelu', '$fldFecha', '$fldTutor',
'$fldAsoc', '$fldCelTut' )";
if( !ExecuteSQL($sqlQuery) )
echo "Error en: $sqlQuery";
else
echo "Datos guardados";
?>

Lista de Beneficiarios
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}

37

$cboProg = 0;
if( isset($_REQUEST["cboProg"]) )
$cboProg = $_REQUEST["cboProg"];
$busqApe = "";
if( isset($_REQUEST["busqApe"]) )
$busqApe = $_REQUEST["busqApe"];
$busqDni = "";
if( isset($_REQUEST["busqDni"]) )
$busqDni = $_REQUEST["busqDni"];
?>

<!-- Area de busquedas -->
<table width=200>
<tr height=48>
<td> Apellidos y Nombres: <input id="busqApe" name="busqApe" value="<?PHP echo $busqApe;
?>" class="edt1" type="text"> </td>
<td> Por DNI:
class="edt1" type="text"> </td>

<input id="busqDni" name="busqDni" value="<?PHP echo $busqDni; ?>"

<td valign="top"> Programa:
<select id="cboProg" name="cboProg" class="cbo2" onchange="OnBtnBenListarEx()">
<option value="0"> (todos los programas) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
$selected = "";
if( $cboProg == $Row["Id"] )
$selected = "selected";
echo "<option value=" .$Row["Id"]. " $selected>" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
<td> &nbsp; <button onclick="OnBtnBenListarEx()" class="btn1 gradBlue"> Buscar </button> </td>
</tr>
</table>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=80 > DNI </td>
<td width=200> Nombres </td>
<td width=200> Apellidos </td>
<td width=250> Dirección </td>
<td width=80 > Opciones </td>
</tr>
<?PHP

38

/*
echo "<br> U: " . getGlobalVar( "gUser");
echo "<br> I: " . getGlobalVar( "gUserId");
echo "<br> C: " . getGlobalVar( "gCompany");
*/
$sqlQuery = "SELECT * FROM clientes WHERE IdUsuario=" . getGlobalVar( "gUserId");
if( $cboProg )
$sqlQuery .= " AND IdPrograma=$cboProg";
if( $busqApe )
$sqlQuery .= " AND Apellidos LIKE '%$busqApe%' ";
if( $busqDni )
$sqlQuery .= " AND DNI LIKE '$busqDni%'";
$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";
$idCliente = $Row["Id"];
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["DNI"]. "</td>";
echo "<td>" .$Row["Apellidos"]. "</td>";
echo "<td>" .$Row["Nombres"]. "</td>";
echo "<td> " .$Row["Direccion"]. "</td>";
echo "<td> <a class='miniBtn' onclick=\"doBenefOps(2,$idCliente)\" href='#'> editar </a>
<a class='miniBtn' onclick=\"doBenefOps(1,$idCliente)\" href='#'> borrar </a>
</td>";
echo "</tr>";
$NroItem++;
}
freeRecordset($Result);
?>
</table>

Nuevo Beneficiario
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>

39

<!-- <form id="frm2" method="get" action="" onSubmit="return getValidation(this);"> -->
<div style="float: left; width: 440px">
<form id="frm2" method="get" action="" onSubmit="OnBtnBenGrabar(this); return false;">
<table border=0>
<tr>
<td width=130></td>
<td width=150></td>
</tr>
<tr>
<td> <b>Programa</b> </td>
<td>
<select id="cboProg" name="cboProg" class="cbo2" onclick="cboBenNuevoCod()">
<option value="0"> (Seleccione) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
</tr>
<tr>
<td> Codigo </td>
<td> <input name="fldCod" id="fldCod" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Asociación </td>
<td> <input name="fldAsoc" id="fldAsoc" class="edt2" type="text"> </td>
</tr>
<tr>
<td> D.N.I. </td>
<td> <input name="fldDNI" id="fldDNI" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Nombres </td>
<td> <input name="fldNombres" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Apellidos </td>
<td> <input name="fldApellis" class="edt2" type="text"> </td>
</tr>
<tr>

40

<td> Dirección </td>
<td> <input name="fldDirec" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Celular </td>
<td> <input name="fldCelu" class="edt2" type="text"> </td>
</tr>
<tr>
<td> FechaNacim </td>
<td> <input name="fldFecha" class="edt2" type="date" value="1990-01-01"> </td>
</tr>
<tr>
<td> Tutor </td>
<td> <input name="fldTutor" class="edt2" type="text" value="-"> </td>
</tr>
<tr>
<td> Cel. Tutor </td>
<td> <input name="fldCelTut" id="fldCelTut" class="edt2" type="text"> </td>
</tr>
</table>
<hr>
<input class="btn1 gradBlue" type="submit" value="GUARDAR DATOS">
</form>
</div>
<div style="float: right; width: 190px">
<img id="imgFoto" width=188 height=220 border=1>
<input class="btn1 gradBlue" type="button" value="CAMBIAR FOTO" style="width: 190px"
onclick="dlgPrepSubFoto()">
</div>
<div style="clear: both"></div>
<div id="wndLock" class="sombra">
<div id="vwLogin">
<div id="frmHead" class="gradBlue" style="padding: 7px"> <b>Seleccionar Foto</b> </div>
<div id="vwLista">
<form id="subirImg" name="subirImg" enctype="multipart/form-data" method="post">
<br><br>Seleccione Imagen: <br>
<input type="file" name="file" id="imgToSend" onchange="subirFoto(this)" style="border: 1px solid gray; padding:
5px; width: 480px"> <br><br>
<input class="btn1 gradBlue" type="button" value="Subir a Servidor"> <br>
<br><br><br><br>
</form>
</div>
<div class="bar3">
<input class="btn1 gradBlue" type="button" value="Cerrar Ventana" onclick="dlgBusqHide()">
</div>
</div>
</div>

41

Funcionario
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<div class="bar1">
<div class="lab"> Registro de Funcionarios </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnFuncListar()"> <img src="res/btnList.png"> </div>
<div class="btnIco" onclick="OnBtnFuncNuevo()"> <img src="res/btnNew.png"> </div>
</div>
</div>
<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
</div>

Lista de Funcionarios
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$cboProg = 0;
if( isset($_REQUEST["cboProg"]) )
$cboProg = $_REQUEST["cboProg"];
$busqApe = "";
if( isset($_REQUEST["busqApe"]) )
$busqApe = $_REQUEST["busqApe"];
$busqDni = "";
if( isset($_REQUEST["busqDni"]) )
$busqDni = $_REQUEST["busqDni"];
?>
<!-- Area de busquedas -->
<table width=200>
<tr height=48>

42

<td> Apellidos y Nombres: <input id="busqApe" name="busqApe" value="<?PHP echo $busqApe;
?>" class="edt1" type="text"> </td>
<td> Por DNI:
class="edt1" type="text"> </td>

<input id="busqDni" name="busqDni" value="<?PHP echo $busqDni; ?>"

<td valign="top"> Cargo:
<select id="cboProg" name="cboProg" class="cbo2" onchange="OnBtnFuncListarEx()">
<option value="0"> (todos los programas) </option>
<?PHP
$sqlQuery = "SELECT * FROM catfuncionarios WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
$selected = "";
if( $cboProg == $Row["Id"] )
$selected = "selected";
echo "<option value=" .$Row["Id"]. " $selected>" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
<td> &nbsp; <button onclick="OnBtnFuncListarEx()" class="btn1 gradBlue"> Buscar </button> </td>
</tr>
</table>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=80 > Usuario </td>
<td width=80 > DNI </td>
<td width=200> Nombres </td>
<td width=200> Apellidos </td>
<td width=250> Dirección </td>
<td width=80 > Opciones </td>
</tr>
<?PHP
$sqlQuery = "SELECT * FROM funcionarios WHERE IdUsuario=" . getGlobalVar( "gUserId");
if( $cboProg )
$sqlQuery .= " AND IdPrograma=$cboProg";
if( $busqApe )
$sqlQuery .= " AND Apellidos LIKE '%$busqApe%' ";
if( $busqDni )
$sqlQuery .= " AND DNI LIKE '$busqDni%'";
$Result = getRecordset( $sqlQuery );
$NroItem = 1;

while( $Row = mysql_fetch_array($Result) ){

$bgColor = "#EEEEFF";

43

if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";
$idCliente = $Row["Id"];
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td> <i><b>" .$Row["Usuario"]. "</b></i> </td>";
echo "<td>" .$Row["DNI"]. "</td>";
echo "<td>" .$Row["Apellidos"]. "</td>";
echo "<td>" .$Row["Nombres"]. "</td>";
echo "<td> " .$Row["Direccion"]. "</td>";
echo "<td> <a class='miniBtn' onclick=\"doBenefOps(2,$idCliente)\" href='#'> editar </a>
<a class='miniBtn' onclick=\"doBenefOps(1,$idCliente)\" href='#'> borrar </a>
</td>";
echo "</tr>";

$NroItem++;
}
freeRecordset($Result);
?>
</table>

Nuevos Funcionarios
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<!-- <form id="frm2" method="get" action="" onSubmit="return getValidation(this);"> -->
<div style="float: left; width: 440px">
<form id="frm2" method="get" action="" onSubmit="OnBtnFuncGrabar(this); return false;">
<table border=0>
<tr>
<td width=130></td>
<td width=150></td>
</tr>
<tr>
<td> <b>Cargo</b> </td>
<td>
<select id="cboProg" name="cboProg" class="cbo2">
<option value="0"> (Seleccione) </option>
<?PHP

44

$sqlQuery = "SELECT * FROM catfuncionarios WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
</tr>
<tr>
<td> D.N.I. </td>
<td> <input name="fldDNI" id="fldDNI" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Nombres </td>
<td> <input name="fldNombres" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Apellidos </td>
<td> <input name="fldApellis" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Dirección </td>
<td> <input name="fldDirec" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Celular </td>
<td> <input name="fldCelu" class="edt2" type="text"> </td>
</tr>
<tr>
<td> FechaNacim </td>
<td> <input name="fldFecha" class="edt2" type="date" value="1990-01-01"> </td>
</tr>

<tr height="20">
</tr>

<tr>
<td> USUARIO </td>
<td> <input name="fldNick" class="edt2" type="text"> </td>
</tr>
<tr>
<td> CLAVE </td>
<td> <input name="fldPass" class="edt2" type="text"> </td>
</tr>

45

</table>
<hr>
<input class="btn1 gradBlue" type="submit" value="GUARDAR DATOS">
</form>
</div>

<div style="float: right; width: 190px">
<img id="imgFoto" width=188 height=220 border=1>
<input class="btn1 gradBlue" type="button" value="CAMBIAR FOTO" style="width: 190px"
onclick="dlgPrepSubFoto()">
</div>

<div style="clear: both"></div>

<div id="wndLock" class="sombra">
<div id="vwLogin">
<div id="frmHead" class="gradBlue" style="padding: 7px"> <b>Seleccionar Foto</b> </div>

<div id="vwLista">
<form id="subirImg" name="subirImg" enctype="multipart/form-data" method="post">
<br><br>Seleccione Imagen: <br>
<input type="file" name="file" id="imgToSend" onchange="subirFoto(this)" style="border: 1px solid gray; padding:
5px; width: 480px"> <br><br>
<input class="btn1 gradBlue" type="button" value="Subir a Servidor"> <br>
<br><br><br><br>
</form>
</div>
<div class="bar3">
<input class="btn1 gradBlue" type="button" value="Cerrar Ventana" onclick="dlgBusqHide()">
</div>
</div>
</div>

LISTA DE PRODUCTOS
<?PHP
include( "php/mysqlcnx.php" );

$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}

46

$Categoria = $_REQUEST["cat"];
$Expresion = $_REQUEST["exp"];
?>
<table border=0 bgcolor=gray cellpadding=4 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=50 > Nro </td>
<td width=100> Codigo </td>
<td width=300> Descripción </td>
<td width=300> Categoria </td>
</tr>
<?PHP
/*
echo "<br> U: " . getGlobalVar( "gUser");
echo "<br> I: " . getGlobalVar( "gUserId");
echo "<br> C: " . getGlobalVar( "gCompany");
*/
$sqlQuery = "SELECT * FROM vwProductos WHERE IdUsuario=" . getGlobalVar( "gUserId");
if( $Categoria > 0 )
$sqlQuery = $sqlQuery . " AND IdCategoria=$Categoria";
if( ! is_null($Expresion) )
$sqlQuery = $sqlQuery . " AND Descripcion LIKE '%$Expresion%'";

$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";
$idProd = $Row["Id"];
$codProd = $Row["Codigo"];
echo "<tr bgcolor=$bgColor class=trFullSelec
onclick=\"OnSelectRow($idProd,'$codProd')\">";
//onMouseOver="this.style.background='yellow'"
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["Codigo"]. "</td>";
echo "<td>" .$Row["Descripcion"]. "</td>";
echo "<td>" .substr( $Row["Categoria"], 0, 23 ). " ... </td>";
echo "</tr>";
$NroItem++;
}

freeRecordset($Result);
?>
</table>

47

GRABA LOS NUEVOS PRODUCTOS
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$fldUserId = getGlobalVar( "gUserId" );
$fldCod

= $_REQUEST["fldCod"];

$fldNombres = $_REQUEST["fldNombres"];
$fldPrecio = $_REQUEST["fldPrecio"];

$fldProg

= $_REQUEST["fldProg"];

$fldMed

= $_REQUEST["fldMed"];

$fldNombres = strtoupper($fldNombres);

$sqlQuery = "INSERT INTO productos VALUES(
NULL, $fldUserId, $fldProg, '$fldCod',
'$fldNombres', '$fldPrecio', '$fldMed' )";
if( !ExecuteSQL($sqlQuery) )
echo "Error en: $sqlQuery";
else
echo "Datos guardados";
?>

LISTA DE LOS PRODUCTOS
<?PHP
include( "php/mysqlcnx.php" );

$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$cboProg = 0;
if( isset($_REQUEST["cboProg"]) )
$cboProg = $_REQUEST["cboProg"];

$busqCod = "";
if( isset($_REQUEST["busqCod"]) )
$busqCod = $_REQUEST["busqCod"];

48

$busqNom = "";
if( isset($_REQUEST["busqNom"]) )
$busqNom = $_REQUEST["busqNom"];
?>
<!-- Area de busquedas -->
<table width=200>
<tr height=48>
<td> Codigo: <input id="busqCod" name="busqApe" value="<?PHP echo $busqCod; ?>"
class="edt1" type="text"> </td>
<td> Nombre: <input id="busqNom" name="busqDni" value="<?PHP echo $busqNom; ?>"
class="edt1" type="text"> </td>
<td valign="top"> Programa:
<select id="cboProg" name="cboProg" class="cbo2" onchange="OnBtnProdListarEx()">
<option value="0"> (todos los programas) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
$selected = "";
if( $cboProg == $Row["Id"] )
$selected = "selected";

echo "<option value=" .$Row["Id"]. " $selected>" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
<td> &nbsp; <button onclick="OnBtnProdListarEx()" class="btn1 gradBlue"> Buscar </button> </td>
</tr>
</table>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=90 > Codigo </td>
<td width=370> Descripcion </td>
<td width=100> Precio </td>
<td width=100> Medida </td>
<td width=80 > Opciones </td>
</tr>
<?PHP
/*
echo "<br> U: " . getGlobalVar( "gUser");
echo "<br> I: " . getGlobalVar( "gUserId");
echo "<br> C: " . getGlobalVar( "gCompany");
*/

49

////$sqlQuery = "SELECT * FROM productos WHERE IdUsuario=" . getGlobalVar( "gUserId");
$sqlQuery = "SELECT *
FROM productos AS P, medidas as M
WHERE P.Medida = M.Id
AND P.IdUsuario = " . getGlobalVar( "gUserId");
if( $cboProg )
$sqlQuery .= " AND IdCategoria=$cboProg";
if( $busqCod )
$sqlQuery .= " AND Codigo LIKE '$busqCod%' ";
if( $busqNom )
$sqlQuery .= " AND Descripcion LIKE '$busqNom%'";
$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";

$idCliente = $Row["Id"];
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["Codigo"]. "</td>";
echo "<td>" .$Row["Descripcion"]. "</td>";
echo "<td align=right> " .$Row["Precio"]. "</td>";
echo "<td align=right> " .$Row["Nombre"]. "</td>";
echo "<td> <a class='miniBtn' onclick=\"doProdOps(2,$idCliente)\" href='#'> editar </a>
<a class='miniBtn' onclick=\"doProdOps(1,$idCliente)\" href='#'> borrar </a> </td>";
echo "</tr>";
$NroItem++;
}
freeRecordset($Result);
?>
</table>

PRODUTO NUEVO
<?PHP
include( "php/mysqlcnx.php" );

$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;

50

}
?>
<!-- <form id="frm2" method="get" action="" onSubmit="return getValidation(this);"> -->
<div style="float: left; width: 440px">
<form id="frm2" method="get" action="" onSubmit="OnBtnProdGrabar(this); return false;">
<table border=0>
<tr>
<td width=130></td>
<td width=150></td>
</tr>
<tr>
<td> <b>Programa</b> </td>
<td>
<select id="cboProg" name="cboProg" class="cbo2" onclick="cboBenNuevoCod()">
<option value="0"> (Seleccione) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
</tr>
<tr>
<td> Codigo </td>
<td> <input name="fldCod" id="fldCod" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Descripcion </td>
<td> <input name="fldNombres" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Precio </td>
<td> <input name="fldPrecio" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Medida </td>
<td> <!-- <input name="fldStock" class="edt2" type="text"> -->
<select id="cboMed" name="cboMed" class="cbo2" onclick="">
<option value=0> (seleccione) </option>
<?PHP
$sqlQuery = "SELECT * FROM medidas WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );

51

while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
</tr>
</table>
<hr>
<input class="btn1 gradBlue" type="submit" value="GUARDAR DATOS">
</form>
</div>

<div style="clear: both"></div>

REGISTROS DE PRODUCTOS
<?PHP
include( "php/mysqlcnx.php" );

$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<div class="bar1">
<div class="lab"> Registro de Productos </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnProdListar()"> <img src="res/btnList.png"> </div>
<div class="btnIco" onclick="OnBtnProdNuevo()"> <img src="res/btnNew.png"> </div>
</div>
</div>
<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
</div>

REGISTRO DE PROVEEDORES
<?PHP
include( "php/mysqlcnx.php" );

$isOnSession = true;
if( ! sessionIsActive() ){

52

$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<div class="bar1">
<div class="lab"> Registro de Proveedores </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnProvListar()"> <img src="res/btnList.png"> </div>
<div class="btnIco" onclick="OnBtnProvNuevo()"> <img src="res/btnNew.png"> </div>
</div>
</div>
<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
</div>

GRABA NUEVOS PROVEEDORES
<?PHP
include( "php/mysqlcnx.php" );
if( ! sessionIsActive() ){
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$fldUserId = getGlobalVar( "gUserId" );
$fldDNI

= $_REQUEST["fldDNI"];

$fldNombres = $_REQUEST["fldNombres"];
$fldApellis = $_REQUEST["fldApellis"];
$fldDirec = $_REQUEST["fldDirec"];
$fldProg

= $_REQUEST["fldProg"];

$fldCelu

= $_REQUEST["fldCelu"];

$fldFecha = $_REQUEST["fldFecha"];

$fldNombres = strtoupper($fldNombres);
$fldApellis = strtoupper($fldApellis);
$sqlQuery = "INSERT INTO proveedores VALUES(
NULL, $fldUserId, '$fldProg',
'$fldDNI', '$fldNombres', '$fldApellis',
'$fldDirec', '$fldCelu', '$fldFecha' )";

if( !ExecuteSQL($sqlQuery) )
echo "Error en: $sqlQuery";
else
echo "Datos guardados";
?>

53

LISTA DE PROVEEDORES
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
$cboProg = 0;
if( isset($_REQUEST["cboProg"]) )
$cboProg = $_REQUEST["cboProg"];
$busqApe = "";
if( isset($_REQUEST["busqApe"]) )
$busqApe = $_REQUEST["busqApe"];
$busqDni = "";
if( isset($_REQUEST["busqDni"]) )
$busqDni = $_REQUEST["busqDni"];
?>
<!-- Area de busquedas -->
<table width=200>
<tr height=48>
<td> Apellidos y Nombres: <input id="busqApe" name="busqApe" value="<?PHP echo $busqApe;
?>" class="edt1" type="text"> </td>
<td> Por DNI:
class="edt1" type="text"> </td>

<input id="busqDni" name="busqDni" value="<?PHP echo $busqDni; ?>"

<td valign="top"> Programa:
<select id="cboProg" name="cboProg" class="cbo2" onchange="OnBtnBenListarEx()">
<option value="0"> (todos los programas) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
$selected = "";
if( $cboProg == $Row["Id"] )
$selected = "selected";

echo "<option value=" .$Row["Id"]. " $selected>" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
<td> &nbsp; <button onclick="OnBtnBenListarEx()" class="btn1 gradBlue"> Buscar </button> </td>
</tr>

54

</table>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=30 > Nro </td>
<td width=120> R.U.C. </td>
<td width=300> Raz.Social </td>
<td width=250> Dirección </td>
<td width=80 > Opciones </td>
</tr>
<?PHP
$sqlQuery = "SELECT * FROM proveedores WHERE IdUsuario=" . getGlobalVar( "gUserId");
if( $cboProg )
$sqlQuery .= " AND IdPrograma=$cboProg";
if( $busqApe )
$sqlQuery .= " AND Apellidos LIKE '%$busqApe%' ";
if( $busqDni )
$sqlQuery .= " AND DNI LIKE '$busqDni%'";
$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";
$idCliente = $Row["Id"];
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["DNI"]. "</td>";
echo "<td>" .$Row["Apellidos"]. "</td>";
echo "<td> " .$Row["Direccion"]. "</td>";
echo "<td> <a class='miniBtn' onclick=\"doBenefOps(2,$idCliente)\" href='#'> editar </a>
<a class='miniBtn' onclick=\"doBenefOps(1,$idCliente)\" href='#'> borrar </a>
</td>";
echo "</tr>";
$NroItem++;
}
freeRecordset($Result);
?>
</table>

NUEVO PROVEEDOR
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;

55

echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<!-- <form id="frm2" method="get" action="" onSubmit="return getValidation(this);"> -->
<div style="float: left; width: 440px">
<form id="frm2" method="get" action="" onSubmit="OnBtnProvGrabar(this); return false;">
<table border=0>
<tr>
<td width=130></td>
<td width=150></td>
</tr>
<tr>
<td> <b>Programa</b> </td>
<td>
<select id="cboProg" name="cboProg" class="cbo2">
<option value="0"> (Seleccione) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
</td>
</tr>
<tr>
<td> RUC </td>
<td> <input name="fldDNI" id="fldDNI" class="edt2" type="text"> </td>
</tr>
<tr>
<td> RazonSocial </td>
<td> <input name="fldApellis" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Responsable </td>
<td> <input name="fldNombres" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Dirección </td>
<td> <input name="fldDirec" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Celular </td>

56

<td> <input name="fldCelu" class="edt2" type="text"> </td>
</tr>
<tr>
<td> Fecha de Registro </td>
<td> <input name="fldFecha" class="edt2" type="date" value="1990-01-01"> </td>
</tr>
</table>
<hr>
<input class="btn1 gradBlue" type="submit" value="GUARDAR DATOS">
</form>
</div>

<div style="float: right; width: 190px">
<img id="imgFoto" width=188 height=220 border=1>
<input class="btn1 gradBlue" type="button" value="CAMBIAR FOTO" style="width: 190px"
onclick="dlgPrepSubFoto()">
</div>

<div style="clear: both"></div>
<div id="wndLock" class="sombra">
<div id="vwLogin">
<div id="frmHead" class="gradBlue" style="padding: 7px"> <b>Seleccionar Foto</b> </div>

<div id="vwLista">
<form id="subirImg" name="subirImg" enctype="multipart/form-data" method="post">
<br><br>Seleccione Imagen: <br>
<input type="file" name="file" id="imgToSend" onchange="subirFoto(this)" style="border: 1px solid gray; padding:
5px; width: 480px"> <br><br>
<input class="btn1 gradBlue" type="button" value="Subir a Servidor"> <br>
<br><br><br><br>
</form>
</div>
<div class="bar3">
<input class="btn1 gradBlue" type="button" value="Cerrar Ventana" onclick="dlgBusqHide()">
</div>
</div>
</div>

SALIR
<?PHP
include( "php/mysqlcnx.php" );
destroySession(true); // no msg
jumpPage("./");
?>

57

LISTA DE DISTRIBUCION DE LOS DIFERENTES MODULOS
?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>
<table border=0 bgcolor=gray cellpadding=5 cellspacing=1>
<tr bgcolor="#CCCCFF">
<td width=50 > Nro </td>
<td width=100> Codigo </td>
<td width=300> Descripción </td>
<td width=300> Categoria </td>
<td width=50 > Opciones </td>
</tr>
<?PHP
/*
echo "<br> U: " . getGlobalVar( "gUser");
echo "<br> I: " . getGlobalVar( "gUserId");
echo "<br> C: " . getGlobalVar( "gCompany");
*/

$sqlQuery = "SELECT * FROM vwproductos WHERE IdUsuario=" . getGlobalVar( "gUserId");
$Result = getRecordset( $sqlQuery );
$NroItem = 1;
while( $Row = mysql_fetch_array($Result) ){
$bgColor = "#EEEEFF";
if( $NroItem%2 == 1 )
$bgColor = "#F8F8FF";
echo "<tr bgcolor=$bgColor>";
echo "<td> <b>" .$NroItem. "</b> </td>";
echo "<td>" .$Row["Codigo"]. "</td>";
echo "<td>" .$Row["Descripcion"]. "</td>";
echo "<td>" .$Row["Categoria"]. "</td>";
echo "<td> <a href=''> E </a> | <a href='' onClick=''> X </a> </td>";
echo "</tr>";
$NroItem++;
}
freeRecordset($Result);
?>
</table>

58

DISTRIBUCION
<?PHP
include( "php/mysqlcnx.php" );
$isOnSession = true;
if( ! sessionIsActive() ){
$isOnSession = false;
echo "<h3> Debe iniciar sesion </h3>";
exit;
}
?>

<div class="bar1">
<div class="lab"> Venta de Productos </div>
<div class="btn">
<div class="btnIco" onclick="OnBtnGrVenta()"> <img src="res/btnSave.png"> </div>
<div class="btnIco" onclick="OnBtnVenta()"> <img src="res/btnNew.png"> </div>
</div>
</div>

<div id="vwBenef" class="bar2" style="clear:both; padding: 15px">
<form id="frmVP" name="frmVP">
<table>
<tr>
<td width=150></td>
<td width=150></td>
<td width=300></td>
</tr>
<tr>
<td> Codigo de Producto </td>
<td>
<input class="edt1" type="hidden" id="fldIdP" name="fldIdP">
<input class="edt1" type="text" id="fldCod" name="fldCod">
</td>
<td>
<input class="btn1 gradBlue" type="button" onclick="OnBtnAgregProd()" value="Agregar">
<input class="btn1 gradBlue" type="button" onclick="OnBtnBusqProd()" value="Buscar Producto">
</td>
</tr>
<tr>
<td colspan="3">
R.U.C. <input class="edt1" type="text" id="ruc" name="ruc" style="width: 100px">
Raz. Social <input class="edt2" type="text" id="dest" name="dest" style="width: 364px">
</td>
</tr>

59

</table>
<hr>
<input class="edt0" type="text" value="Cantidad"

style="width: 50px" readonly>

<input class="edt0" type="text" value="Codigo"

style="width: 100px" readonly>

<input class="edt0" type="text" value="Descripcion" style="width: 350px" readonly>
<input class="edt0" type="text" value="P.U."
<input class="edt0" type="text" value="SubTotal"

style="width: 100px" readonly>
style="width: 100px" readonly>

<br>
<div id="lstItems">
</div>
<div class='divBox'> Subtotal </div>
<input class="edt3" type="text" value="0" id="subt" name="subt" style="width: 100px" readonly>
</form>
<div id="vwOut">...</div>
</div>
<!-Step 1. Create DIV as wndLock
Step 2. Load into wndLock file "busq.php"
Step 3. Insert OK, Cancel AS Button
-->
<div id="wndLock" class="sombra">
<div id="vwBuscar">
<div id="frmHead" class="gradBlue" style="padding: 7px"> Busqueda de Productos </div>

<div class="bar1">
<div style="padding: 12px">
Producto:
<select id="cboCateg" name="cboCateg" class="cbo2" onchange="OnBtnBusqLista()">
<option value="0"> (Todos) </option>
<?PHP
$sqlQuery = "SELECT * FROM categorias WHERE IdUsuario=" . getGlobalVar(
"gUserId");
$Result = getRecordset( $sqlQuery );
while( $Row = mysql_fetch_array($Result) ){
echo "<option value=" .$Row["Id"]. ">" .$Row["Nombre"]. "</option>";
}
freeRecordset($Result);
?>
</select>
<input class="edt1" type="text" id="edtExpr" name="edtExpr" autofocus>
<input class="btn1 gradBlue" type="button" value="Buscar" onclick="OnBtnBusqLista()">
</div>
</div>
<div id="vwListaP">
<!-- ev: function OnSelectRow() -->
</div>

60

<!-- Boton: OK | Cancel -->
<div class="bar3">
<input class="btn1 gradBlue" type="button" value="Aceptar">
<input class="btn1 gradBlue" type="button" value="Cancelar" onclick="dlgBusqHide()">
</div>
</div>
</div>

61

